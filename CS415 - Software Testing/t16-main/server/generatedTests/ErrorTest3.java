import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1501");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company27.getUnassignedWorkers();
        java.lang.String str31 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company27.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company27.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company27.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company27.getAvailableWorkers();
        boolean boolean37 = worker25.equals((java.lang.Object) workerSet36);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1502");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        worker19.setSalary((double) (byte) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1503");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification5.equals((java.lang.Object) workerSet10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = company13.equals((java.lang.Object) qualification20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification20.getWorkers();
        java.lang.String str33 = qualification20.toString();
        boolean boolean34 = qualification5.equals((java.lang.Object) str33);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification5.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) 'a');
        qualification5.addWorker(worker47);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker47.", company1.equals(worker47) == worker47.equals(company1));
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1504");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0");
        java.lang.Class<?> wildcardClass6 = company1.getClass();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification5.", company1.equals(qualification5) == qualification5.equals(company1));
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1505");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 100L);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1506");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification11.", company1.equals(qualification11) == qualification11.equals(company1));
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1507");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company9.createQualification("hi!:0:0");
        boolean boolean18 = worker7.equals((java.lang.Object) company9);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1508");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean19 = company16.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company16.getProjects();
        boolean boolean22 = company16.equals((java.lang.Object) (short) -1);
        java.lang.String str23 = company16.toString();
        edu.colostate.cs415.model.Qualification qualification25 = company16.createQualification("hi!:0:0:0:0:0:0");
        worker14.addQualification(qualification25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1509");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification24.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str40 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company39.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company39.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company39.getEmployedWorkers();
        boolean boolean46 = qualification34.equals((java.lang.Object) company39);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        boolean boolean52 = company49.equals((java.lang.Object) "");
        java.lang.String str53 = company49.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company49.getEmployedWorkers();
        java.lang.String str55 = company49.getName();
        java.lang.String str56 = company49.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company49.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet57, (double) 10.0f);
        qualification34.addWorker(worker59);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker59.", company1.equals(worker59) == worker59.equals(company1));
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1510");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification20.addWorker(worker23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification20.equals((java.lang.Object) workerSet29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        boolean boolean34 = qualification20.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getEmployedWorkers();
        java.lang.String str37 = company32.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company32.getAvailableWorkers();
        boolean boolean39 = worker11.equals((java.lang.Object) workerSet38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1511");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        boolean boolean25 = company22.equals((java.lang.Object) "");
        java.lang.String str26 = company22.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company22.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 100L);
        qualification8.removeWorker(worker31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1512");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        worker48.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1513");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.Class<?> wildcardClass21 = qualificationSet20.getClass();
        boolean boolean22 = qualification3.equals((java.lang.Object) qualificationSet20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification29.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification29.toDTO();
        java.lang.String str39 = qualification29.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.model.Worker worker51 = null;
        qualification43.addWorker(worker51);
        java.lang.String str53 = qualification43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification43.getWorkers();
        boolean boolean55 = qualification29.equals((java.lang.Object) qualification43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification29.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification29.toDTO();
        boolean boolean58 = qualification3.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str62 = company61.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company61.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker66 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet64, 0.0d);
        qualification3.addWorker(worker66);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker66.", company1.equals(worker66) == worker66.equals(company1));
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1514");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.lang.String str16 = company10.getName();
        java.lang.String str17 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 10.0f);
        qualification7.addWorker(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1515");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        java.lang.String str12 = worker11.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1516");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.lang.Class<?> wildcardClass10 = company1.getClass();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1517");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        boolean boolean7 = qualification3.equals((java.lang.Object) (short) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        java.lang.String str9 = qualification3.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        boolean boolean28 = qualification13.equals((java.lang.Object) boolean27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification13.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification13.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification35.toDTO();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification35.getWorkers();
        boolean boolean40 = qualification13.equals((java.lang.Object) workerSet39);
        boolean boolean41 = qualification3.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str45 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification48 = company44.createQualification("hi!");
        java.lang.Object obj49 = null;
        boolean boolean50 = company44.equals(obj49);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company44.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company44.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet52, (double) 100.0f);
        boolean boolean55 = qualification13.equals((java.lang.Object) qualificationSet52);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker54.", company1.equals(worker54) == worker54.equals(company1));
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1518");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.lang.String str17 = company15.toString();
        edu.colostate.cs415.model.Qualification qualification19 = company15.createQualification("hi!");
        boolean boolean20 = company7.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company7.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        boolean boolean30 = qualification22.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company24.getEmployedWorkers();
        boolean boolean32 = company1.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str36 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company35.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, 0.0d);
        company1.unassignAll(worker40);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker40.", company1.equals(worker40) == worker40.equals(company1));
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1519");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = worker10.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1520");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean11 = company1.equals((java.lang.Object) qualificationDTO10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification22 = company16.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getUnavailableWorkers();
        boolean boolean24 = company1.equals((java.lang.Object) workerSet23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification22.", company1.equals(qualification22) == qualification22.equals(company1));
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1521");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        boolean boolean31 = company20.equals((java.lang.Object) qualificationSet30);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("hi!", qualificationSet30, 100.0d);
        edu.colostate.cs415.model.Worker worker35 = company1.createWorker("hi!", qualificationSet30, (double) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker33.", company1.equals(worker33) == worker33.equals(company1));
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1522");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        boolean boolean8 = company1.equals((java.lang.Object) 10);
        java.lang.String str9 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification11.removeWorker(worker22);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1523");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) ' ');
        company1.unassignAll(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1524");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean20 = qualification17.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        boolean boolean32 = qualification17.equals((java.lang.Object) boolean31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification17.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification17.getWorkers();
        java.lang.String str35 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification17.getWorkers();
        boolean boolean37 = company1.equals((java.lang.Object) qualification17);
        java.lang.Object obj38 = null;
        boolean boolean39 = qualification17.equals(obj38);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str43 = company42.toString();
        java.lang.String str44 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company42.getProjects();
        java.lang.String str47 = company42.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company42.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company42.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company42.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet52, (double) (short) 0);
        qualification17.addWorker(worker54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker54.", company1.equals(worker54) == worker54.equals(company1));
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1525");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company14.getProjects();
        java.lang.String str19 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) (short) 0);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification8.removeWorker(worker26);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1526");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        boolean boolean39 = company36.equals((java.lang.Object) "");
        java.lang.String str40 = company36.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company36.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 100L);
        company1.unassignAll(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1527");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        boolean boolean28 = qualification8.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company30.getUnassignedWorkers();
        java.lang.String str34 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        java.lang.String str36 = company30.toString();
        edu.colostate.cs415.model.Qualification qualification38 = company30.createQualification("hi!:0:0:0:0");
        java.lang.String str39 = company30.toString();
        boolean boolean40 = qualification8.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean52 = qualification45.equals((java.lang.Object) qualification50);
        edu.colostate.cs415.model.Worker worker53 = null;
        qualification50.addWorker(worker53);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean60 = qualification50.equals((java.lang.Object) workerSet59);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company62.getEmployedWorkers();
        boolean boolean64 = qualification50.equals((java.lang.Object) company62);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company62.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company62.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company62.getProjects();
        edu.colostate.cs415.model.Qualification qualification69 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company62.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = company62.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker74 = company30.createWorker("hi!:0:0:0:0", qualificationSet72, (double) '4');
        org.junit.Assert.assertTrue("Contract failed: worker74.equals(worker74)", worker74.equals(worker74));
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1528");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getUnavailableWorkers();
        java.lang.String str14 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 1L);
        qualification3.addWorker(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1529");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company9.createQualification("hi!");
        java.lang.String str13 = qualification12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification12.getWorkers();
        worker7.addQualification(qualification12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1530");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        java.lang.String str16 = company12.getName();
        boolean boolean17 = worker10.equals((java.lang.Object) str16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1531");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean12 = qualification5.equals((java.lang.Object) qualification10);
        edu.colostate.cs415.model.Worker worker13 = null;
        qualification10.addWorker(worker13);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification10.equals((java.lang.Object) workerSet19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getEmployedWorkers();
        boolean boolean24 = qualification10.equals((java.lang.Object) company22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 10.0f);
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet25, (double) 12);
        org.junit.Assert.assertTrue("Contract failed: worker29.equals(worker29)", worker29.equals(worker29));
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1532");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        boolean boolean11 = worker10.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1533");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        java.lang.String str7 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.lang.String str14 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company12.getProjects();
        java.lang.String str17 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) (short) 0);
        qualification3.addWorker(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1534");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.lang.String str15 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        java.lang.String str17 = company11.getName();
        java.lang.String str18 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 10.0f);
        company1.unassignAll(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1535");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getUnavailableWorkers();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet11, (double) 1.0f);
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1536");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company15.getQualifications();
        boolean boolean22 = company11.equals((java.lang.Object) qualificationSet21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!:0:0:0:0");
        boolean boolean29 = company11.equals((java.lang.Object) qualification28);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company11.getProjects();
        boolean boolean31 = qualification9.equals((java.lang.Object) projectSet30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification28.", company1.equals(qualification28) == qualification28.equals(company1));
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1537");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        int int11 = worker10.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1538");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.lang.String str17 = company13.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        java.lang.String str23 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company19.getProjects();
        java.lang.Object obj25 = null;
        boolean boolean26 = company19.equals(obj25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company19.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company19.getAvailableWorkers();
        boolean boolean29 = company13.equals((java.lang.Object) company19);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company19.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company19.getEmployedWorkers();
        boolean boolean33 = qualification8.equals((java.lang.Object) company19);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str37 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company36.getAssignedWorkers();
        java.lang.String str39 = company36.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 0.0f);
        qualification8.addWorker(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1539");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean19 = company16.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification21 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company16.getProjects();
        java.lang.String str23 = company16.getName();
        edu.colostate.cs415.model.Qualification qualification25 = company16.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification27 = company16.createQualification("hi!:0:0");
        worker14.addQualification(qualification27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1540");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company3.getQualifications();
        java.lang.String str6 = company3.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getUnassignedWorkers();
        boolean boolean16 = company3.equals((java.lang.Object) company8);
        java.lang.String str17 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 1.0f);
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company3 and worker20.", company3.equals(worker20) == worker20.equals(company3));
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1541");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company11.createQualification("hi!:0:0");
        java.lang.String str17 = qualification16.toString();
        worker9.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1542");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0L);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getUnavailableWorkers();
        boolean boolean20 = company12.equals((java.lang.Object) company17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company12.getQualifications();
        java.lang.String str22 = company12.toString();
        boolean boolean23 = worker10.equals((java.lang.Object) company12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1543");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        java.lang.String str24 = qualification16.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification16.toDTO();
        java.lang.String str26 = qualification16.toString();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification30.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification30.addWorker(worker38);
        java.lang.String str40 = qualification30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification30.getWorkers();
        boolean boolean42 = qualification16.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        boolean boolean48 = company44.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company44.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company44.getProjects();
        boolean boolean51 = qualification16.equals((java.lang.Object) projectSet50);
        boolean boolean52 = worker12.equals((java.lang.Object) boolean51);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1544");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification18.toDTO();
        worker9.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1545");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, 0.0d);
        qualification14.addWorker(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1546");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification15.getWorkers();
        java.lang.String str20 = qualification15.toString();
        worker11.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1547");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        java.lang.String str34 = qualification26.toString();
        java.lang.String str35 = qualification26.toString();
        boolean boolean36 = qualification3.equals((java.lang.Object) qualification26);
        java.lang.String str37 = qualification26.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification26.toDTO();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str42 = company41.toString();
        java.lang.String str43 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company41.getProjects();
        java.lang.String str46 = company41.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company41.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company41.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet51, (double) (short) 0);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification26.removeWorker(worker53);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1548");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company7.getQualifications();
        java.lang.String str10 = company7.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getUnassignedWorkers();
        boolean boolean20 = company7.equals((java.lang.Object) company12);
        java.lang.String str21 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 1.0f);
        qualification4.addWorker(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification4.", company1.equals(qualification4) == qualification4.equals(company1));
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1549");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification15.toDTO();
        java.lang.String str25 = qualification15.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification29.addWorker(worker37);
        java.lang.String str39 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification29.getWorkers();
        boolean boolean41 = qualification15.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean62 = qualification55.equals((java.lang.Object) qualification60);
        edu.colostate.cs415.model.Worker worker63 = null;
        qualification60.addWorker(worker63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean70 = qualification60.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getEmployedWorkers();
        boolean boolean74 = qualification60.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company72.getQualifications();
        boolean boolean76 = company43.equals((java.lang.Object) company72);
        boolean boolean77 = qualification15.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company72.getEmployedWorkers();
        boolean boolean79 = worker11.equals((java.lang.Object) workerSet78);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1550");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company10.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification28.addWorker(worker36);
        java.lang.String str38 = qualification28.toString();
        boolean boolean39 = company21.equals((java.lang.Object) qualification28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company21.getAssignedWorkers();
        boolean boolean41 = qualification18.equals((java.lang.Object) company21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification18 and company21.", qualification18.equals(company21) == company21.equals(qualification18));
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1551");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, 0.0d);
        qualification6.addWorker(worker16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification6.", company1.equals(qualification6) == qualification6.equals(company1));
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1552");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.toString();
        java.lang.String str23 = company21.toString();
        edu.colostate.cs415.model.Qualification qualification25 = company21.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification31 = company27.createQualification("hi!");
        java.lang.Object obj32 = null;
        boolean boolean33 = company27.equals(obj32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company27.getAvailableWorkers();
        boolean boolean37 = company21.equals((java.lang.Object) company27);
        edu.colostate.cs415.model.Qualification qualification39 = company27.createQualification("hi!");
        boolean boolean40 = worker19.equals((java.lang.Object) qualification39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1553");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        boolean boolean20 = worker19.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1554");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        java.lang.String str21 = qualification8.toString();
        java.lang.String str22 = qualification8.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str26 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company25.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company25.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company25.getUnavailableWorkers();
        java.lang.String str31 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 1L);
        qualification8.removeWorker(worker34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker34.", company1.equals(worker34) == worker34.equals(company1));
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1555");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        java.lang.String str23 = qualification3.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str27 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company26.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company26.getUnavailableWorkers();
        java.lang.String str32 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker35);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1556");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company27.getUnassignedWorkers();
        java.lang.String str31 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company27.getProjects();
        java.lang.String str33 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company27.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company27.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = company22.createWorker("hi!", qualificationSet37, 1.0d);
        company1.unassignAll(worker39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker39.", company1.equals(worker39) == worker39.equals(company1));
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1557");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        boolean boolean34 = company2.equals((java.lang.Object) qualification33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet37, (double) 0);
        org.junit.Assert.assertTrue("Contract failed: worker39.equals(worker39)", worker39.equals(worker39));
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1558");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.lang.String str29 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company20.getUnassignedWorkers();
        boolean boolean34 = worker18.equals((java.lang.Object) workerSet33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1559");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.lang.String str5 = qualification4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) '#');
        qualification4.addWorker(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1560");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company23.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) '4');
        boolean boolean32 = company1.equals((java.lang.Object) '4');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1561");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification11.", company1.equals(qualification11) == qualification11.equals(company1));
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1562");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getUnavailableWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1L);
        qualification7.addWorker(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1563");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.lang.String str14 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.lang.String str16 = company11.toString();
        edu.colostate.cs415.model.Qualification qualification18 = company11.createQualification("hi!:0:0:0:0");
        worker9.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1564");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.lang.String str11 = company7.getName();
        boolean boolean12 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        boolean boolean20 = company17.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company17.getProjects();
        java.lang.String str25 = company17.getName();
        java.lang.String str26 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 10L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification14.removeWorker(worker29);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1565");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getUnassignedWorkers();
        java.lang.String str21 = company7.getName();
        edu.colostate.cs415.model.Qualification qualification23 = company7.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification23.", company1.equals(qualification23) == qualification23.equals(company1));
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1566");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        java.lang.String str17 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getAssignedWorkers();
        java.lang.String str19 = company14.toString();
        edu.colostate.cs415.model.Qualification qualification21 = company14.createQualification("hi!:0:0:0:0");
        worker12.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1567");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        worker10.setSalary((double) 'a');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1568");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.lang.String str28 = qualification27.toString();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        boolean boolean34 = company31.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company31.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company31.getQualifications();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company31.getProjects();
        java.lang.String str39 = company31.getName();
        java.lang.String str40 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 10L);
        qualification27.addWorker(worker43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker43.", company1.equals(worker43) == worker43.equals(company1));
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1569");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.lang.String str17 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAvailableWorkers();
        java.lang.String str19 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = company1.createWorker("hi!:0:0", qualificationSet20, (double) 100L);
        org.junit.Assert.assertTrue("Contract failed: worker22.equals(worker22)", worker22.equals(worker22));
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1570");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.lang.String str13 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.lang.String str22 = company17.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company17.createQualification("hi!:0:0");
        boolean boolean27 = qualification15.equals((java.lang.Object) "hi!:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification26.", company1.equals(qualification26) == qualification26.equals(company1));
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1571");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company27.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification33 = company27.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company27.getProjects();
        boolean boolean35 = worker25.equals((java.lang.Object) projectSet34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1572");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.lang.String str19 = company13.toString();
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company24.getAvailableWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification21.toDTO();
        java.lang.String str30 = qualification21.toString();
        worker11.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1573");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        java.lang.Object obj26 = null;
        boolean boolean27 = worker25.equals(obj26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1574");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company22.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company22.getEmployedWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company22.createWorker("hi!", qualificationSet35, (double) (short) 1);
        boolean boolean38 = company1.equals((java.lang.Object) company22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker37.", company1.equals(worker37) == worker37.equals(company1));
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1575");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        java.lang.String str26 = qualification18.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification18.toDTO();
        java.lang.String str28 = qualification18.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification32.equals((java.lang.Object) qualification37);
        edu.colostate.cs415.model.Worker worker40 = null;
        qualification32.addWorker(worker40);
        java.lang.String str42 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification32.getWorkers();
        boolean boolean44 = qualification18.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str48 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company47.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification51 = company47.createQualification("hi!");
        java.lang.Object obj52 = null;
        boolean boolean53 = company47.equals(obj52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company55.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company55.getProjects();
        java.lang.String str59 = company55.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company55.getAssignedWorkers();
        boolean boolean61 = company47.equals((java.lang.Object) workerSet60);
        boolean boolean62 = qualification18.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company47.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet64 = company47.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company47.getAssignedWorkers();
        boolean boolean66 = worker14.equals((java.lang.Object) workerSet65);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1576");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        edu.colostate.cs415.dto.WorkerDTO workerDTO11 = worker10.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1577");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        boolean boolean10 = company6.equals((java.lang.Object) 10L);
        java.lang.String str11 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification21.addWorker(worker24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification21.equals((java.lang.Object) workerSet30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getEmployedWorkers();
        boolean boolean35 = qualification21.equals((java.lang.Object) company33);
        edu.colostate.cs415.model.Qualification qualification37 = company33.createQualification("hi!");
        boolean boolean38 = company6.equals((java.lang.Object) qualification37);
        boolean boolean39 = qualification4.equals((java.lang.Object) qualification37);
        java.lang.String str40 = qualification4.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet48, (double) 10L);
        qualification4.addWorker(worker50);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker50.", company1.equals(worker50) == worker50.equals(company1));
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1578");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company7 and qualification18.", company7.equals(qualification18) == qualification18.equals(company7));
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1579");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification13.", company1.equals(qualification13) == qualification13.equals(company1));
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1580");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification20.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean42 = qualification35.equals((java.lang.Object) qualification40);
        edu.colostate.cs415.model.Worker worker43 = null;
        qualification35.addWorker(worker43);
        java.lang.String str45 = qualification35.toString();
        boolean boolean46 = company28.equals((java.lang.Object) qualification35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification35.getWorkers();
        java.lang.String str48 = qualification35.toString();
        boolean boolean49 = qualification20.equals((java.lang.Object) str48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification20.toDTO();
        worker14.addQualification(qualification20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1581");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification5.equals((java.lang.Object) workerSet10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!:0:0:0:0");
        java.lang.String str18 = qualification17.toString();
        boolean boolean19 = qualification5.equals((java.lang.Object) str18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification17.", company1.equals(qualification17) == qualification17.equals(company1));
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1582");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getUnavailableWorkers();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification12.removeWorker(worker26);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1583");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification10.", company1.equals(qualification10) == qualification10.equals(company1));
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1584");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        worker14.setSalary((double) 1L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1585");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.toString();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, 0.0d);
        company1.unassignAll(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1586");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        java.lang.String str17 = company10.getName();
        java.lang.String str18 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) (short) 1);
        company1.unassignAll(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1587");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.dto.WorkerDTO workerDTO12 = worker11.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1588");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification25.addWorker(worker28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification25.equals((java.lang.Object) workerSet34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getEmployedWorkers();
        boolean boolean39 = qualification25.equals((java.lang.Object) company37);
        edu.colostate.cs415.model.Qualification qualification41 = company37.createQualification("hi!");
        java.lang.String str42 = qualification41.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification41.toDTO();
        boolean boolean44 = worker16.equals((java.lang.Object) qualificationDTO43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1589");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        int int12 = worker11.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1590");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        worker14.setSalary((double) (byte) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1591");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification19 = company14.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification19.toDTO();
        boolean boolean22 = worker12.equals((java.lang.Object) qualificationDTO21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1592");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        worker11.setSalary((double) (short) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1593");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        worker14.setSalary((double) (byte) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1594");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        worker11.setSalary((double) 12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1595");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company11.getQualifications();
        java.lang.String str14 = company11.getName();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getUnassignedWorkers();
        boolean boolean24 = company11.equals((java.lang.Object) company16);
        java.lang.String str25 = company16.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 1.0f);
        company1.unassignAll(worker28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker28.", company1.equals(worker28) == worker28.equals(company1));
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1596");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        double double20 = worker19.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1597");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        java.lang.String str15 = worker14.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1598");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification33 = company27.createQualification("hi!:0:0:0:0:0:0");
        worker25.addQualification(qualification33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1599");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        java.lang.String str20 = worker19.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1600");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company13.getQualifications();
        java.lang.String str16 = company13.getName();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getUnassignedWorkers();
        boolean boolean26 = company13.equals((java.lang.Object) company18);
        java.lang.String str27 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 1.0f);
        company1.unassignAll(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1601");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company1.getProjects();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getAssignedWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 12);
        company1.unassignAll(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1602");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        java.lang.String str15 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        java.lang.String str24 = company17.getName();
        edu.colostate.cs415.model.Qualification qualification26 = company17.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company17.getAvailableWorkers();
        boolean boolean28 = qualification13.equals((java.lang.Object) workerSet27);
        boolean boolean29 = worker9.equals((java.lang.Object) workerSet27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1603");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0");
        java.lang.String str13 = company1.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification12.", company1.equals(qualification12) == qualification12.equals(company1));
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1604");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Qualification qualification19 = null;
        worker18.addQualification(qualification19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1605");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        worker10.setSalary((double) (byte) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1606");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getUnavailableWorkers();
        java.lang.String str19 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company13.getQualifications();
        boolean boolean22 = company3.equals((java.lang.Object) company13);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company3.getQualifications();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 0.0f);
        company3.unassignAll(worker35);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker35.", company1.equals(worker35) == worker35.equals(company1));
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1607");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification4.addWorker(worker5);
        java.lang.String str7 = qualification4.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company10.getProjects();
        java.lang.String str15 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) (short) 0);
        qualification4.addWorker(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1608");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getAssignedWorkers();
        boolean boolean24 = company21.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getUnassignedWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!");
        boolean boolean35 = qualification3.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        boolean boolean41 = company38.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company38.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 1L);
        qualification3.addWorker(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1609");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getAssignedWorkers();
        java.lang.String str23 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAssignedWorkers();
        java.lang.String str25 = company20.getName();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.getName();
        edu.colostate.cs415.model.Qualification qualification30 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getUnassignedWorkers();
        boolean boolean32 = company20.equals((java.lang.Object) workerSet31);
        boolean boolean33 = worker18.equals((java.lang.Object) boolean32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1610");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.dto.WorkerDTO workerDTO15 = worker14.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1611");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) "");
        java.lang.String str13 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getEmployedWorkers();
        java.lang.String str15 = company9.getName();
        java.lang.String str16 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 10.0f);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1612");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification30.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification35.addWorker(worker38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification35.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getEmployedWorkers();
        boolean boolean49 = qualification35.equals((java.lang.Object) company47);
        edu.colostate.cs415.model.Qualification qualification51 = company47.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification51.toDTO();
        java.lang.String str53 = qualification51.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO54 = qualification51.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification51.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification51.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification51.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification51.getWorkers();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification62.toDTO();
        boolean boolean65 = qualification62.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification74.getWorkers();
        boolean boolean76 = qualification69.equals((java.lang.Object) qualification74);
        boolean boolean77 = qualification62.equals((java.lang.Object) boolean76);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification62.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO79 = qualification62.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification62.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification62.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = qualification62.getWorkers();
        boolean boolean83 = qualification51.equals((java.lang.Object) workerSet82);
        boolean boolean84 = worker26.equals((java.lang.Object) qualification51);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1613");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.lang.String str17 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification22 = company11.createQualification("hi!:0:0");
        worker9.addQualification(qualification22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1614");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.lang.String str34 = qualification32.toString();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        boolean boolean40 = company37.equals((java.lang.Object) "");
        java.lang.String str41 = company37.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company37.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) 100L);
        qualification32.addWorker(worker46);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker46.", company1.equals(worker46) == worker46.equals(company1));
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1615");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification23 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = worker14.equals((java.lang.Object) workerSet24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1616");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        java.lang.String str20 = worker19.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1617");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = worker14.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1618");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.lang.String str32 = company27.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company27.getAvailableWorkers();
        java.lang.String str35 = company27.toString();
        boolean boolean36 = worker25.equals((java.lang.Object) company27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1619");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        worker19.setSalary((double) (byte) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1620");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        worker9.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1621");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company18.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company18.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str27 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company18.getAvailableWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnavailableWorkers();
        java.lang.String str36 = company32.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getUnassignedWorkers();
        java.lang.String str38 = company32.getName();
        edu.colostate.cs415.model.Qualification qualification40 = company32.createQualification("hi!:0:0:0:0:0:0");
        boolean boolean41 = company18.equals((java.lang.Object) qualification40);
        worker16.addQualification(qualification40);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1622");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification34.addWorker(worker37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification34.equals((java.lang.Object) workerSet43);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        boolean boolean48 = qualification34.equals((java.lang.Object) company46);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company46.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company46.getProjects();
        edu.colostate.cs415.model.Qualification qualification53 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company46.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company46.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company46.getAvailableWorkers();
        boolean boolean58 = worker25.equals((java.lang.Object) workerSet57);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1623");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        worker14.setSalary((double) (short) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1624");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, (double) ' ');
        worker7.setSalary((double) '4');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1625");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        edu.colostate.cs415.dto.WorkerDTO workerDTO20 = worker19.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1626");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        java.lang.String str10 = company3.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company3.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 1L);
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company3 and worker15.", company3.equals(worker15) == worker15.equals(company3));
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1627");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        java.lang.String str60 = qualification57.toString();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        boolean boolean71 = qualification64.equals((java.lang.Object) qualification69);
        edu.colostate.cs415.model.Worker worker72 = null;
        qualification64.addWorker(worker72);
        java.lang.String str74 = qualification64.toString();
        boolean boolean75 = qualification57.equals((java.lang.Object) str74);
        boolean boolean77 = qualification57.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification57.getWorkers();
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification82 = company80.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company80.getUnassignedWorkers();
        java.lang.String str84 = company80.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet85 = company80.getProjects();
        java.lang.String str86 = company80.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company80.getEmployedWorkers();
        edu.colostate.cs415.model.Company company89 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str90 = company89.toString();
        java.lang.String str91 = company89.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet92 = company89.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company89.getUnavailableWorkers();
        boolean boolean94 = company80.equals((java.lang.Object) company89);
        boolean boolean95 = qualification57.equals((java.lang.Object) boolean94);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO96 = qualification57.toDTO();
        worker48.addQualification(qualification57);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1628");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        java.lang.String str18 = company11.getName();
        java.lang.String str19 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) (short) 1);
        company1.unassignAll(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1629");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Qualification qualification10 = null;
        worker9.addQualification(qualification10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1630");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = worker49.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1631");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        boolean boolean13 = worker12.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1632");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Qualification qualification21 = company7.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        java.lang.String str28 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification33.equals((java.lang.Object) qualification38);
        edu.colostate.cs415.model.Worker worker41 = null;
        qualification38.addWorker(worker41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean48 = qualification38.equals((java.lang.Object) workerSet47);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company50.getEmployedWorkers();
        boolean boolean52 = qualification38.equals((java.lang.Object) company50);
        edu.colostate.cs415.model.Qualification qualification54 = company50.createQualification("hi!");
        boolean boolean55 = company23.equals((java.lang.Object) qualification54);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company23.getQualifications();
        java.lang.String str59 = company23.getName();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str63 = company62.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company62.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification66 = company62.createQualification("hi!");
        java.lang.Object obj67 = null;
        boolean boolean68 = company62.equals(obj67);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker71 = company23.createWorker("hi!", qualificationSet69, (double) 10);
        qualification21.addWorker(worker71);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification21.", company1.equals(qualification21) == qualification21.equals(company1));
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1633");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        java.lang.String str16 = company9.getName();
        java.lang.String str17 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification6.removeWorker(worker21);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1634");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = worker11.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1635");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification8.", company1.equals(qualification8) == qualification8.equals(company1));
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1636");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getUnavailableWorkers();
        java.lang.String str18 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 1L);
        company1.unassignAll(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1637");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        worker25.setSalary((double) 100.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1638");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = company1.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification16.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification16.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) 'a');
        qualification16.addWorker(worker32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker32.", company1.equals(worker32) == worker32.equals(company1));
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1639");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        worker72.setSalary((double) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1640");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str19 = qualification18.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company7 and qualification18.", company7.equals(qualification18) == qualification18.equals(company7));
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1641");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        worker16.setSalary((double) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1642");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker7 = null;
        qualification3.addWorker(worker7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = qualification3.equals((java.lang.Object) company10);
        boolean boolean17 = qualification3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification3.getWorkers();
        java.lang.String str19 = qualification3.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company21.getUnassignedWorkers();
        java.lang.String str25 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company21.getProjects();
        java.lang.String str27 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company21.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company21.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company21.getProjects();
        java.lang.String str31 = company21.getName();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        boolean boolean36 = company33.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company33.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company33.getProjects();
        boolean boolean39 = company21.equals((java.lang.Object) projectSet38);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company21.getProjects();
        boolean boolean41 = qualification3.equals((java.lang.Object) projectSet40);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean62 = qualification55.equals((java.lang.Object) qualification60);
        edu.colostate.cs415.model.Worker worker63 = null;
        qualification60.addWorker(worker63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean70 = qualification60.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getEmployedWorkers();
        boolean boolean74 = qualification60.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company72.getQualifications();
        boolean boolean76 = company43.equals((java.lang.Object) company72);
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        boolean boolean83 = company79.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = company79.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet85 = company79.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = company79.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet87 = company79.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet88 = company79.getQualifications();
        edu.colostate.cs415.model.Worker worker90 = company43.createWorker("hi!", qualificationSet88, (double) 100.0f);
        qualification3.removeWorker(worker90);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker90.", company1.equals(worker90) == worker90.equals(company1));
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1643");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.lang.String str35 = company1.getName();
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.lang.String str38 = company1.getName();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        boolean boolean44 = company41.equals((java.lang.Object) "");
        java.lang.String str45 = company41.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getEmployedWorkers();
        java.lang.String str47 = company41.getName();
        java.lang.String str48 = company41.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 10.0f);
        company1.unassignAll(worker51);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker51.", company1.equals(worker51) == worker51.equals(company1));
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1644");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        worker19.setSalary((double) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1645");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = worker11.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1646");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        double double15 = worker14.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1647");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        worker10.setSalary((double) (byte) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1648");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        worker19.setSalary((double) (short) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1649");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.lang.String str5 = qualification3.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) 0.0f);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker16);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1650");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO50 = worker49.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1651");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        boolean boolean15 = worker14.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1652");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        worker19.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1653");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        qualification3.addWorker(worker4);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company28.getProjects();
        boolean boolean34 = qualification3.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company37.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) '4');
        qualification3.addWorker(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1654");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        worker49.setSalary((double) 0.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1655");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification35.", company1.equals(qualification35) == qualification35.equals(company1));
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1656");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        boolean boolean12 = company1.equals((java.lang.Object) (short) 1);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("hi!:0:0:0:0", qualificationSet19, (double) 1.0f);
        org.junit.Assert.assertTrue("Contract failed: worker21.equals(worker21)", worker21.equals(worker21));
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1657");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 'a');
        company1.unassignAll(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1658");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        boolean boolean30 = qualification15.equals((java.lang.Object) boolean29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification15.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification15.getWorkers();
        java.lang.String str33 = qualification15.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company35.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        boolean boolean40 = qualification15.equals((java.lang.Object) company35);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification15.toDTO();
        worker11.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1659");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str51 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company50.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company50.getQualifications();
        boolean boolean55 = worker48.equals((java.lang.Object) qualificationSet54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1660");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification16.addWorker(worker24);
        java.lang.String str26 = qualification16.toString();
        java.lang.String str27 = qualification16.toString();
        java.lang.String str28 = qualification16.toString();
        worker12.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1661");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification14.removeWorker(worker26);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1662");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.getName();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("hi!");
        java.lang.Class<?> wildcardClass25 = qualification24.getClass();
        boolean boolean26 = worker19.equals((java.lang.Object) wildcardClass25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1663");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company20.getQualifications();
        edu.colostate.cs415.model.Qualification qualification29 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, (double) 0.0f);
        company20.unassignAll(worker40);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker40.", company1.equals(worker40) == worker40.equals(company1));
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1664");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        java.lang.String str2 = qualification1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        boolean boolean8 = company5.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company5.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company5.getQualifications();
        java.lang.String str11 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company5.getProjects();
        java.lang.String str13 = company5.getName();
        java.lang.String str14 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company5.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 10L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification1.removeWorker(worker17);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1665");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.lang.String str18 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!:0:0");
        worker11.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1666");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.lang.String str15 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company9.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification26.addWorker(worker29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification26.equals((java.lang.Object) workerSet35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getEmployedWorkers();
        boolean boolean40 = qualification26.equals((java.lang.Object) company38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company38.getQualifications();
        boolean boolean42 = company9.equals((java.lang.Object) company38);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        boolean boolean49 = company45.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company45.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company45.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company45.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet53 = company45.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company45.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = company9.createWorker("hi!", qualificationSet54, (double) 100.0f);
        qualification7.addWorker(worker56);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker56.", company1.equals(worker56) == worker56.equals(company1));
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1667");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        java.lang.String str25 = qualification17.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification17.toDTO();
        java.lang.String str27 = qualification17.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification31.equals((java.lang.Object) qualification36);
        edu.colostate.cs415.model.Worker worker39 = null;
        qualification31.addWorker(worker39);
        java.lang.String str41 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification31.getWorkers();
        boolean boolean43 = qualification17.equals((java.lang.Object) qualification31);
        boolean boolean44 = qualification3.equals((java.lang.Object) boolean43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company48.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet54, (double) 0L);
        qualification3.addWorker(worker56);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker56.", company1.equals(worker56) == worker56.equals(company1));
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1668");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company15.getProjects();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getAssignedWorkers();
        boolean boolean21 = company11.equals((java.lang.Object) company15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) (byte) 10);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1669");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        worker11.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1670");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, 0.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker17);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1671");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification19.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification19.equals((java.lang.Object) workerSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        boolean boolean33 = qualification19.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        boolean boolean35 = company2.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company31.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company31.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company31.getProjects();
        java.lang.String str39 = company31.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company41.getQualifications();
        boolean boolean45 = company31.equals((java.lang.Object) qualificationSet44);
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet44, (double) 1.0f);
        org.junit.Assert.assertTrue("Contract failed: worker47.equals(worker47)", worker47.equals(worker47));
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1672");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.lang.String str19 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company13.getUnavailableWorkers();
        java.lang.String str25 = company13.toString();
        edu.colostate.cs415.model.Qualification qualification27 = company13.createQualification("hi!:0:0:0:0:0:0");
        worker11.addQualification(qualification27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1673");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        java.lang.String str15 = worker14.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1674");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, (double) ' ');
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        java.lang.String str19 = qualification11.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification11.toDTO();
        java.lang.String str21 = qualification11.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification25.addWorker(worker33);
        java.lang.String str35 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification25.getWorkers();
        boolean boolean37 = qualification11.equals((java.lang.Object) qualification25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification11.getWorkers();
        worker7.addQualification(qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1675");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) (byte) 10);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1676");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        edu.colostate.cs415.model.Qualification qualification18 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        edu.colostate.cs415.model.Qualification qualification28 = company20.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getAvailableWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) workerSet34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification28.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification40.toDTO();
        boolean boolean43 = qualification40.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification40.addWorker(worker44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company47.getProjects();
        edu.colostate.cs415.model.Qualification qualification51 = company47.createQualification("hi!");
        boolean boolean52 = qualification40.equals((java.lang.Object) company47);
        boolean boolean54 = qualification40.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification40.getWorkers();
        java.lang.String str56 = qualification40.toString();
        boolean boolean57 = qualification28.equals((java.lang.Object) qualification40);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification40.getWorkers();
        java.lang.Class<?> wildcardClass59 = workerSet58.getClass();
        boolean boolean60 = qualification18.equals((java.lang.Object) workerSet58);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company7 and qualification18.", company7.equals(qualification18) == qualification18.equals(company7));
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1677");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str10 = qualification9.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification9.removeWorker(worker21);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1678");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company2.getProjects();
        java.lang.String str12 = company2.getName();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        boolean boolean17 = company14.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        boolean boolean20 = company2.equals((java.lang.Object) projectSet19);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company2.getUnassignedWorkers();
        java.lang.String str23 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet25, (double) (byte) 0);
        org.junit.Assert.assertTrue("Contract failed: worker27.equals(worker27)", worker27.equals(worker27));
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1679");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification20.addWorker(worker23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification20.equals((java.lang.Object) workerSet29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        boolean boolean34 = qualification20.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.lang.String str45 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.String str47 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company41.getEmployedWorkers();
        boolean boolean50 = qualification39.equals((java.lang.Object) company41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification39.toDTO();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str54 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company53.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company57.getProjects();
        boolean boolean59 = company53.equals((java.lang.Object) company57);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company57.getUnassignedWorkers();
        boolean boolean61 = qualification39.equals((java.lang.Object) workerSet60);
        boolean boolean62 = worker11.equals((java.lang.Object) boolean61);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1680");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        boolean boolean27 = qualification12.equals((java.lang.Object) boolean26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification12.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification12.getWorkers();
        java.lang.String str30 = qualification12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification12.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification12.toDTO();
        java.lang.String str33 = qualification12.toString();
        worker8.addQualification(qualification12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1681");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        boolean boolean12 = company1.equals((java.lang.Object) workerSet11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification6 and company9.", qualification6.equals(company9) == company9.equals(qualification6));
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1682");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO12 = worker11.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1683");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification18 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company13.getProjects();
        java.lang.String str20 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company13.getQualifications();
        boolean boolean22 = company2.equals((java.lang.Object) qualificationSet21);
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet21, (double) 12);
        org.junit.Assert.assertTrue("Contract failed: worker24.equals(worker24)", worker24.equals(worker24));
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1684");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.lang.String str19 = company13.toString();
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!:0:0:0:0");
        boolean boolean22 = worker11.equals((java.lang.Object) company13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1685");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification5.", company1.equals(qualification5) == qualification5.equals(company1));
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1686");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) '#');
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1687");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification7.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 'a');
        qualification7.addWorker(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1688");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) '4');
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1689");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification18.addWorker(worker19);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str24 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company23.getEmployedWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str32 = company31.toString();
        java.lang.String str33 = company31.toString();
        edu.colostate.cs415.model.Qualification qualification35 = company31.createQualification("hi!");
        boolean boolean36 = company23.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company23.createQualification("hi!");
        boolean boolean39 = qualification18.equals((java.lang.Object) qualification38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification18.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification18.getWorkers();
        boolean boolean42 = worker14.equals((java.lang.Object) workerSet41);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1690");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) '#');
        qualification3.addWorker(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1691");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getEmployedWorkers();
        boolean boolean38 = qualification27.equals((java.lang.Object) company29);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification41 = company29.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification41.", company1.equals(qualification41) == qualification41.equals(company1));
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1692");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet12, (double) 100.0f);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1693");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, 0.0d);
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1694");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        worker12.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1695");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, 0.0d);
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet6, 1.0d);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1696");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        java.lang.String str12 = worker11.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1697");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification14.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification14.toDTO();
        java.lang.String str24 = qualification14.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification28.addWorker(worker36);
        java.lang.String str38 = qualification28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification28.getWorkers();
        boolean boolean40 = qualification14.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnassignedWorkers();
        java.lang.String str46 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company42.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean61 = qualification54.equals((java.lang.Object) qualification59);
        edu.colostate.cs415.model.Worker worker62 = null;
        qualification59.addWorker(worker62);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        boolean boolean69 = qualification59.equals((java.lang.Object) workerSet68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getEmployedWorkers();
        boolean boolean73 = qualification59.equals((java.lang.Object) company71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = company71.getQualifications();
        boolean boolean75 = company42.equals((java.lang.Object) company71);
        boolean boolean76 = qualification14.equals((java.lang.Object) company71);
        edu.colostate.cs415.model.Qualification qualification78 = company71.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company80.getAssignedWorkers();
        boolean boolean83 = company80.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company80.getAssignedWorkers();
        boolean boolean85 = qualification78.equals((java.lang.Object) workerSet84);
        worker10.addQualification(qualification78);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1698");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        worker19.setSalary((double) (byte) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1699");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        boolean boolean34 = company2.equals((java.lang.Object) qualification33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet37, 0.0d);
        org.junit.Assert.assertTrue("Contract failed: worker39.equals(worker39)", worker39.equals(worker39));
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1700");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getAssignedWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) 12);
        company1.unassignAll(worker16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1701");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        boolean boolean28 = company25.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company25.getProjects();
        boolean boolean32 = qualification3.equals((java.lang.Object) company25);
        java.lang.String str33 = qualification3.toString();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str37 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getUnavailableWorkers();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 1L);
        qualification3.addWorker(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1702");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str75 = company74.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet76 = company74.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company74.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet78 = company74.getQualifications();
        java.lang.String str79 = company74.getName();
        boolean boolean80 = worker72.equals((java.lang.Object) company74);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1703");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.lang.String str37 = qualification26.toString();
        boolean boolean38 = qualification20.equals((java.lang.Object) qualification26);
        java.lang.String str39 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification26.getWorkers();
        java.lang.String str41 = qualification26.toString();
        worker16.addQualification(qualification26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1704");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        boolean boolean34 = qualification19.equals((java.lang.Object) boolean33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification19.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification19.getWorkers();
        java.lang.String str37 = qualification19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean49 = qualification42.equals((java.lang.Object) qualification47);
        java.lang.String str50 = qualification42.toString();
        java.lang.String str51 = qualification42.toString();
        boolean boolean52 = qualification19.equals((java.lang.Object) qualification42);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        boolean boolean58 = company54.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company54.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company54.getAssignedWorkers();
        boolean boolean61 = qualification42.equals((java.lang.Object) workerSet60);
        boolean boolean62 = qualification3.equals((java.lang.Object) boolean61);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company64.getUnassignedWorkers();
        java.lang.String str68 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company64.getEmployedWorkers();
        boolean boolean71 = company64.equals((java.lang.Object) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company64.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company64.getAssignedWorkers();
        boolean boolean74 = qualification3.equals((java.lang.Object) company64);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company77.getUnavailableWorkers();
        boolean boolean80 = company77.equals((java.lang.Object) "");
        java.lang.String str81 = company77.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company77.getEmployedWorkers();
        java.lang.String str83 = company77.getName();
        java.lang.String str84 = company77.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = company77.getQualifications();
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet85, (double) 10.0f);
        qualification3.removeWorker(worker87);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker87.", company1.equals(worker87) == worker87.equals(company1));
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1705");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = worker10.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1706");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getUnassignedWorkers();
        java.lang.String str35 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company31.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.model.Worker worker51 = null;
        qualification48.addWorker(worker51);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean58 = qualification48.equals((java.lang.Object) workerSet57);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getEmployedWorkers();
        boolean boolean62 = qualification48.equals((java.lang.Object) company60);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company60.getQualifications();
        boolean boolean64 = company31.equals((java.lang.Object) company60);
        boolean boolean65 = qualification3.equals((java.lang.Object) company60);
        edu.colostate.cs415.model.Qualification qualification67 = company60.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = company69.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet72 = company69.getProjects();
        java.lang.String str73 = company69.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company69.getAvailableWorkers();
        boolean boolean75 = company60.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification77 = company69.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        boolean boolean83 = company79.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet84 = company79.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet85 = company79.getProjects();
        edu.colostate.cs415.model.Company company88 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification90 = company88.createQualification("hi!");
        boolean boolean92 = company88.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet93 = company88.getAssignedWorkers();
        java.lang.String str94 = company88.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet95 = company88.getQualifications();
        edu.colostate.cs415.model.Worker worker97 = company79.createWorker("hi!", qualificationSet95, (double) 100);
        company69.unassignAll(worker97);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker97.", company1.equals(worker97) == worker97.equals(company1));
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1707");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        boolean boolean24 = qualification16.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification29.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification29.toDTO();
        java.lang.String str39 = qualification29.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.model.Worker worker51 = null;
        qualification43.addWorker(worker51);
        java.lang.String str53 = qualification43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification43.getWorkers();
        boolean boolean55 = qualification29.equals((java.lang.Object) qualification43);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company57.getUnassignedWorkers();
        java.lang.String str61 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company57.getProjects();
        java.lang.String str63 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company57.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company57.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification74.getWorkers();
        boolean boolean76 = qualification69.equals((java.lang.Object) qualification74);
        edu.colostate.cs415.model.Worker worker77 = null;
        qualification74.addWorker(worker77);
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification82 = company80.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = qualification82.getWorkers();
        boolean boolean84 = qualification74.equals((java.lang.Object) workerSet83);
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company86.getEmployedWorkers();
        boolean boolean88 = qualification74.equals((java.lang.Object) company86);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = company86.getQualifications();
        boolean boolean90 = company57.equals((java.lang.Object) company86);
        boolean boolean91 = qualification29.equals((java.lang.Object) company86);
        edu.colostate.cs415.model.Qualification qualification93 = company86.createQualification("hi!:0:0:0:0");
        java.lang.String str94 = company86.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet95 = company86.getQualifications();
        edu.colostate.cs415.model.Worker worker97 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet95, (double) 0);
        qualification16.addWorker(worker97);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker97.", company1.equals(worker97) == worker97.equals(company1));
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1708");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        boolean boolean30 = qualification15.equals((java.lang.Object) boolean29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification15.getWorkers();
        java.lang.String str32 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification15.toDTO();
        java.lang.String str34 = qualification15.toString();
        java.lang.String str35 = qualification15.toString();
        worker11.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1709");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        boolean boolean22 = company1.equals((java.lang.Object) qualification14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 0L);
        qualification14.addWorker(worker34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker34.", company1.equals(worker34) == worker34.equals(company1));
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1710");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.lang.String str13 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, 0.0d);
        boolean boolean24 = qualification15.equals((java.lang.Object) 0.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1711");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        boolean boolean15 = worker7.equals((java.lang.Object) company9);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1712");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, 0.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification5.removeWorker(worker14);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1713");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0.0f);
        boolean boolean22 = qualification9.equals((java.lang.Object) "hi!");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1714");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnavailableWorkers();
        boolean boolean19 = company11.equals((java.lang.Object) company16);
        edu.colostate.cs415.model.Qualification qualification21 = company11.createQualification("hi!:0:0:0:0");
        worker9.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1715");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        java.lang.Class<?> wildcardClass20 = company1.getClass();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1716");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        int int12 = worker11.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1717");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company35.getEmployedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.lang.String str45 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.String str47 = company41.toString();
        edu.colostate.cs415.model.Qualification qualification49 = company41.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company41.getAssignedWorkers();
        boolean boolean51 = company35.equals((java.lang.Object) workerSet50);
        java.lang.String str52 = company35.getName();
        boolean boolean53 = worker14.equals((java.lang.Object) str52);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1718");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getUnassignedWorkers();
        java.lang.String str35 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company31.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.model.Worker worker51 = null;
        qualification48.addWorker(worker51);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean58 = qualification48.equals((java.lang.Object) workerSet57);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company60.getEmployedWorkers();
        boolean boolean62 = qualification48.equals((java.lang.Object) company60);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company60.getQualifications();
        boolean boolean64 = company31.equals((java.lang.Object) company60);
        boolean boolean65 = qualification3.equals((java.lang.Object) company60);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification3.getWorkers();
        java.lang.String str67 = qualification3.toString();
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str71 = company70.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company70.getAssignedWorkers();
        java.lang.String str73 = company70.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company70.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet75 = company70.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = company70.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = company70.getQualifications();
        edu.colostate.cs415.model.Worker worker79 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet77, (double) 0.0f);
        qualification3.addWorker(worker79);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker79.", company1.equals(worker79) == worker79.equals(company1));
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1719");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        java.lang.String str24 = company17.getName();
        edu.colostate.cs415.model.Qualification qualification26 = company17.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 1L);
        company1.unassignAll(worker29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker29.", company1.equals(worker29) == worker29.equals(company1));
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1720");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = worker11.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1721");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company30.getProjects();
        java.lang.String str38 = company30.toString();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company40.getQualifications();
        boolean boolean44 = company30.equals((java.lang.Object) qualificationSet43);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getAssignedWorkers();
        boolean boolean50 = company47.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet51, (double) 12);
        company30.unassignAll(worker53);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker53.", company1.equals(worker53) == worker53.equals(company1));
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1722");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet9, (double) (byte) 100);
        org.junit.Assert.assertTrue("Contract failed: worker11.equals(worker11)", worker11.equals(worker11));
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1723");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        worker9.setSalary((double) 1L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1724");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification33.equals((java.lang.Object) qualification38);
        java.lang.String str41 = qualification33.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification33.toDTO();
        boolean boolean43 = qualification17.equals((java.lang.Object) qualificationDTO42);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        boolean boolean51 = company47.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) 0.0f);
        qualification17.removeWorker(worker55);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker55.", company1.equals(worker55) == worker55.equals(company1));
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1725");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        java.lang.String str17 = qualification14.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification21.addWorker(worker29);
        java.lang.String str31 = qualification21.toString();
        boolean boolean32 = qualification14.equals((java.lang.Object) str31);
        boolean boolean34 = qualification14.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification14.getWorkers();
        boolean boolean36 = company1.equals((java.lang.Object) qualification14);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company1.getQualifications();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, 0.0d);
        company1.unassignAll(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1726");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 10L);
        company1.unassignAll(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1727");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.dto.WorkerDTO workerDTO12 = worker11.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1728");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.Qualification qualification22 = company14.createQualification("hi!:0:0:0:0");
        worker12.addQualification(qualification22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1729");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.lang.String str9 = qualification8.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.lang.String str16 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification26.addWorker(worker29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification26.equals((java.lang.Object) workerSet35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getEmployedWorkers();
        boolean boolean40 = qualification26.equals((java.lang.Object) company38);
        edu.colostate.cs415.model.Qualification qualification42 = company38.createQualification("hi!");
        boolean boolean43 = company11.equals((java.lang.Object) qualification42);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company11.getQualifications();
        java.lang.String str47 = company11.getName();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str51 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company50.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification54 = company50.createQualification("hi!");
        java.lang.Object obj55 = null;
        boolean boolean56 = company50.equals(obj55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker59 = company11.createWorker("hi!", qualificationSet57, (double) 10);
        qualification8.addWorker(worker59);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker59.", company1.equals(worker59) == worker59.equals(company1));
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1730");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification23.equals((java.lang.Object) qualification28);
        java.lang.String str31 = qualification23.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company34.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company34.getQualifications();
        java.lang.Class<?> wildcardClass41 = qualificationSet40.getClass();
        boolean boolean42 = qualification23.equals((java.lang.Object) qualificationSet40);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification23.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification23.toDTO();
        boolean boolean45 = worker19.equals((java.lang.Object) qualificationDTO44);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1731");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.lang.Object obj12 = null;
        boolean boolean13 = company1.equals(obj12);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) '4');
        edu.colostate.cs415.model.Worker worker27 = company1.createWorker("hi!", qualificationSet23, (double) 10L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1732");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) ' ');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification8.removeWorker(worker17);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1733");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str24 = company23.toString();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company23.getProjects();
        java.lang.String str28 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company23.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company23.getQualifications();
        boolean boolean33 = qualification3.equals((java.lang.Object) company23);
        java.lang.String str34 = qualification3.toString();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company36.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company36.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getUnavailableWorkers();
        boolean boolean42 = qualification3.equals((java.lang.Object) company36);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company50.getUnassignedWorkers();
        java.lang.String str54 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company50.getProjects();
        java.lang.String str56 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company50.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = company45.createWorker("hi!", qualificationSet60, 1.0d);
        qualification3.addWorker(worker62);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker62.", company1.equals(worker62) == worker62.equals(company1));
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1734");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        java.lang.String str9 = company1.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification8.", company1.equals(qualification8) == qualification8.equals(company1));
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1735");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet11, 1.0d);
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1736");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        worker12.setSalary((double) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1737");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.lang.String str17 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company11.getProjects();
        java.lang.String str19 = company11.getName();
        java.lang.String str20 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 10L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification6.removeWorker(worker23);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1738");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean11 = company1.equals((java.lang.Object) qualificationDTO10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        boolean boolean18 = company15.equals((java.lang.Object) "");
        java.lang.String str19 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company15.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 100L);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1739");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Worker worker27 = null;
        qualification24.addWorker(worker27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification24.equals((java.lang.Object) workerSet33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getEmployedWorkers();
        boolean boolean38 = qualification24.equals((java.lang.Object) company36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company36.getQualifications();
        boolean boolean40 = company7.equals((java.lang.Object) company36);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company43.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company43.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company43.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = company7.createWorker("hi!", qualificationSet52, (double) 100.0f);
        qualification3.addWorker(worker54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker54.", company1.equals(worker54) == worker54.equals(company1));
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1740");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        worker11.setSalary((double) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1741");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary((double) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1742");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        java.lang.String str19 = company16.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification23 = company16.createQualification("hi!");
        boolean boolean24 = worker14.equals((java.lang.Object) "hi!");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1743");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) '#');
        company1.unassignAll(worker16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1744");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 10L);
        company1.unassignAll(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1745");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        worker14.setSalary((double) 10.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1746");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        boolean boolean12 = worker11.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1747");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        worker14.setSalary((double) (byte) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1748");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        java.lang.String str6 = qualification3.toString();
        java.lang.String str7 = qualification3.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 100L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker19);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1749");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification10.addWorker(worker11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification10.getWorkers();
        boolean boolean14 = qualification5.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str19 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company18.getQualifications();
        java.lang.String str21 = company18.getName();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnassignedWorkers();
        java.lang.String str27 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getUnassignedWorkers();
        boolean boolean31 = company18.equals((java.lang.Object) company23);
        java.lang.String str32 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 1.0f);
        qualification5.addWorker(worker35);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker35.", company1.equals(worker35) == worker35.equals(company1));
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1750");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0.0f);
        qualification10.addWorker(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1751");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = worker11.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1752");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '4');
        boolean boolean13 = worker12.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1753");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.lang.String str17 = company12.getName();
        boolean boolean18 = worker10.equals((java.lang.Object) company12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1754");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, 0.0d);
        company1.unassignAll(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1755");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.lang.String str24 = company20.toString();
        java.lang.String str25 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company20.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company20.createQualification("hi!:0:0:0:0");
        java.lang.String str29 = qualification28.toString();
        worker18.addQualification(qualification28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1756");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        worker49.setSalary((double) ' ');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1757");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        boolean boolean28 = qualification3.equals((java.lang.Object) company23);
        java.lang.String str29 = qualification3.toString();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getUnavailableWorkers();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker41);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1758");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAssignedWorkers();
        java.lang.String str34 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company28.getUnassignedWorkers();
        boolean boolean36 = worker26.equals((java.lang.Object) company28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1759");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company10.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        worker8.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1760");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        worker8.setSalary((double) 10.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1761");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '4');
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = worker12.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1762");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification14.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification14.toDTO();
        java.lang.String str24 = qualification14.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification28.addWorker(worker36);
        java.lang.String str38 = qualification28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification28.getWorkers();
        boolean boolean40 = qualification14.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getAssignedWorkers();
        boolean boolean50 = qualification14.equals((java.lang.Object) company42);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company52.getUnassignedWorkers();
        java.lang.String str56 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company52.getProjects();
        java.lang.String str58 = company52.toString();
        edu.colostate.cs415.model.Qualification qualification60 = company52.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company52.getEmployedWorkers();
        java.lang.String str62 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company52.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company52.getUnassignedWorkers();
        boolean boolean65 = qualification14.equals((java.lang.Object) workerSet64);
        boolean boolean66 = worker10.equals((java.lang.Object) workerSet64);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1763");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        worker12.setSalary((double) ' ');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1764");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification11.getWorkers();
        java.lang.String str14 = qualification11.toString();
        worker7.addQualification(qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1765");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.lang.String str7 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet9, (double) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: worker11.equals(worker11)", worker11.equals(worker11));
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1766");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        edu.colostate.cs415.model.Qualification qualification11 = null;
        worker10.addQualification(qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1767");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company35.getProjects();
        boolean boolean38 = qualification33.equals((java.lang.Object) projectSet37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification42.toDTO();
        boolean boolean45 = qualification42.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean56 = qualification49.equals((java.lang.Object) qualification54);
        boolean boolean57 = qualification42.equals((java.lang.Object) boolean56);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification42.getWorkers();
        java.lang.String str59 = qualification42.toString();
        boolean boolean60 = qualification33.equals((java.lang.Object) str59);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification33.toDTO();
        java.lang.String str62 = qualification33.toString();
        java.lang.String str63 = qualification33.toString();
        worker8.addQualification(qualification33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1768");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        boolean boolean13 = qualification6.equals((java.lang.Object) qualification11);
        java.lang.String str14 = qualification6.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        java.lang.Class<?> wildcardClass24 = qualificationSet23.getClass();
        boolean boolean25 = qualification6.equals((java.lang.Object) qualificationSet23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification6.toDTO();
        boolean boolean27 = company1.equals((java.lang.Object) qualificationDTO26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification30 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = company32.createWorker("hi!", qualificationSet45, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification30.removeWorker(worker47);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1769");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getEmployedWorkers();
        boolean boolean24 = worker15.equals((java.lang.Object) workerSet23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1770");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company74.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet76 = company74.getProjects();
        edu.colostate.cs415.model.Qualification qualification78 = company74.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet79 = company74.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company74.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company74.getUnassignedWorkers();
        boolean boolean82 = worker72.equals((java.lang.Object) workerSet81);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1771");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = company11.equals(obj16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 100.0f);
        company1.unassignAll(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1772");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company10.getProjects();
        java.lang.String str15 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) (short) 0);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker22);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1773");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        worker12.setSalary((double) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1774");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet11, (double) ' ');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker13);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1775");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification41.addWorker(worker44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification41.equals((java.lang.Object) workerSet50);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company53.getEmployedWorkers();
        boolean boolean55 = qualification41.equals((java.lang.Object) company53);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet56, (double) 10.0f);
        qualification24.addWorker(worker58);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker58.", company1.equals(worker58) == worker58.equals(company1));
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1776");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet14, (double) 100L);
        org.junit.Assert.assertTrue("Contract failed: worker16.equals(worker16)", worker16.equals(worker16));
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1777");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company1.getAssignedWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1778");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getAssignedWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getUnassignedWorkers();
        java.lang.String str35 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getEmployedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = company31.createWorker("hi!", qualificationSet44, (double) (short) 1);
        company20.unassignAll(worker46);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker46.", company1.equals(worker46) == worker46.equals(company1));
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1779");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, 0.0d);
        qualification9.addWorker(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1780");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company16.getProjects();
        java.lang.String str22 = company16.toString();
        edu.colostate.cs415.model.Qualification qualification24 = company16.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        java.lang.String str27 = qualification24.toString();
        boolean boolean28 = worker14.equals((java.lang.Object) qualification24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1781");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = worker49.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1782");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        worker10.setSalary((double) 0.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1783");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification3.toDTO();
        java.lang.String str18 = qualification3.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification25 = company21.createQualification("hi!");
        java.lang.Object obj26 = null;
        boolean boolean27 = company21.equals(obj26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company21.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 100.0f);
        qualification3.addWorker(worker31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1784");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        worker8.setSalary((double) 0.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1785");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company17.createQualification("hi!:0:0:0:0");
        worker15.addQualification(qualification23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1786");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet5, (double) 1);
        org.junit.Assert.assertTrue("Contract failed: worker7.equals(worker7)", worker7.equals(worker7));
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1787");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str17 = qualification16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification16.getWorkers();
        worker10.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1788");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification22 = company14.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str23 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company14.createQualification("hi!:0:0:0:0");
        worker12.addQualification(qualification29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1789");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        boolean boolean24 = qualification16.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnassignedWorkers();
        java.lang.String str30 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company26.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company26.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company26.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company26.getEmployedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company37.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        boolean boolean45 = company41.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company41.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company41.getQualifications();
        boolean boolean48 = company37.equals((java.lang.Object) qualificationSet47);
        edu.colostate.cs415.model.Worker worker50 = company26.createWorker("hi!", qualificationSet47, 100.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification16.removeWorker(worker50);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1790");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getEmployedWorkers();
        boolean boolean38 = qualification27.equals((java.lang.Object) company29);
        java.lang.String str39 = company29.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company29.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str44 = company43.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company43.getQualifications();
        java.lang.String str46 = company43.getName();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company48.getUnassignedWorkers();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company48.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company48.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company48.getUnassignedWorkers();
        boolean boolean56 = company43.equals((java.lang.Object) company48);
        java.lang.String str57 = company48.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 1.0f);
        company29.unassignAll(worker60);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker60.", company1.equals(worker60) == worker60.equals(company1));
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1791");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) '4');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker18);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1792");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        worker11.setSalary((double) 10L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1793");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0L);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1794");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        worker10.setSalary((double) 12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1795");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company19.getQualifications();
        java.lang.String str26 = company19.getName();
        java.lang.String str27 = company19.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company19.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) (short) 1);
        company1.unassignAll(worker31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1796");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company13.getProjects();
        java.lang.Object obj18 = null;
        boolean boolean19 = company13.equals(obj18);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company13.getQualifications();
        boolean boolean21 = qualification11.equals((java.lang.Object) qualificationSet20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification11.", company1.equals(qualification11) == qualification11.equals(company1));
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1797");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company20.getAssignedWorkers();
        boolean boolean27 = worker18.equals((java.lang.Object) workerSet26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1798");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '4');
        double double13 = worker12.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1799");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        boolean boolean18 = company15.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company15.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 1L);
        company1.unassignAll(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1800");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification24 = company16.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification30.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification35.addWorker(worker38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification35.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getEmployedWorkers();
        boolean boolean49 = qualification35.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company47.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company47.getProjects();
        edu.colostate.cs415.model.Qualification qualification54 = company47.createQualification("hi!");
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company56.getUnassignedWorkers();
        java.lang.String str60 = company56.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company56.getProjects();
        java.lang.String str62 = company56.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company56.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company56.getEmployedWorkers();
        boolean boolean65 = qualification54.equals((java.lang.Object) company56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification54.toDTO();
        boolean boolean67 = qualification24.equals((java.lang.Object) qualification54);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification54.toDTO();
        worker14.addQualification(qualification54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1801");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) '4');
        java.lang.String str10 = worker9.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1802");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification15.getWorkers();
        java.lang.String str18 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification15.toDTO();
        boolean boolean20 = company1.equals((java.lang.Object) qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1803");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str24 = company23.toString();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company23.getProjects();
        java.lang.String str28 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company23.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company23.getQualifications();
        boolean boolean33 = qualification3.equals((java.lang.Object) company23);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str37 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getUnavailableWorkers();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker45);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1804");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str22 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company21.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getUnavailableWorkers();
        java.lang.String str27 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 1L);
        company1.unassignAll(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1805");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        boolean boolean37 = qualification22.equals((java.lang.Object) boolean36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification22.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification22.getWorkers();
        java.lang.String str40 = qualification22.toString();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        boolean boolean45 = company42.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getAvailableWorkers();
        boolean boolean47 = qualification22.equals((java.lang.Object) workerSet46);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification22.getWorkers();
        java.lang.String str49 = qualification22.toString();
        boolean boolean50 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str54 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company53.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet56, (double) ' ');
        qualification17.addWorker(worker58);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker58.", company1.equals(worker58) == worker58.equals(company1));
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1806");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) '4');
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company11.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification30.addWorker(worker33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification30.equals((java.lang.Object) workerSet39);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getEmployedWorkers();
        boolean boolean44 = qualification30.equals((java.lang.Object) company42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company42.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        edu.colostate.cs415.model.Qualification qualification49 = company42.createQualification("hi!");
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company51.getUnassignedWorkers();
        java.lang.String str55 = company51.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet56 = company51.getProjects();
        java.lang.String str57 = company51.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company51.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company51.getEmployedWorkers();
        boolean boolean60 = qualification49.equals((java.lang.Object) company51);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification49.toDTO();
        boolean boolean62 = qualification19.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification49.toDTO();
        worker9.addQualification(qualification49);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1807");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1808");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet6, 10.0d);
        org.junit.Assert.assertTrue("Contract failed: worker8.equals(worker8)", worker8.equals(worker8));
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1809");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        java.lang.String str29 = qualification21.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification21.toDTO();
        boolean boolean31 = qualification3.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str35 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification38 = company34.createQualification("hi!");
        java.lang.Object obj39 = null;
        boolean boolean40 = company34.equals(obj39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) (byte) 10);
        qualification21.addWorker(worker43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker43.", company1.equals(worker43) == worker43.equals(company1));
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1810");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        worker25.setSalary(10.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1811");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        java.lang.String str20 = qualification9.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str24 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        java.lang.Object obj28 = null;
        boolean boolean29 = company23.equals(obj28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (byte) 10);
        qualification9.addWorker(worker32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker32.", company1.equals(worker32) == worker32.equals(company1));
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1812");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        java.lang.String str60 = qualification52.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO61 = qualification52.toDTO();
        java.lang.String str62 = qualification52.toString();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = qualification66.getWorkers();
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean73 = qualification66.equals((java.lang.Object) qualification71);
        java.lang.String str74 = qualification66.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO75 = qualification66.toDTO();
        java.lang.String str76 = qualification66.toString();
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification80 = company78.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification80.getWorkers();
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification85 = company83.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = qualification85.getWorkers();
        boolean boolean87 = qualification80.equals((java.lang.Object) qualification85);
        edu.colostate.cs415.model.Worker worker88 = null;
        qualification80.addWorker(worker88);
        java.lang.String str90 = qualification80.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet91 = qualification80.getWorkers();
        boolean boolean92 = qualification66.equals((java.lang.Object) qualification80);
        boolean boolean93 = qualification52.equals((java.lang.Object) boolean92);
        java.lang.String str94 = qualification52.toString();
        java.lang.String str95 = qualification52.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet96 = qualification52.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet97 = qualification52.getWorkers();
        boolean boolean98 = worker48.equals((java.lang.Object) qualification52);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1813");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification13.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company19.getProjects();
        edu.colostate.cs415.model.Qualification qualification23 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company19.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) '4');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification13.removeWorker(worker27);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1814");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet6, (double) (short) 10);
        org.junit.Assert.assertTrue("Contract failed: worker8.equals(worker8)", worker8.equals(worker8));
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1815");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str55 = company54.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet56 = company54.getProjects();
        boolean boolean57 = company51.equals((java.lang.Object) projectSet56);
        edu.colostate.cs415.model.Qualification qualification59 = company51.createQualification("hi!");
        java.lang.String str60 = qualification59.toString();
        worker49.addQualification(qualification59);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1816");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        java.lang.String str25 = qualification24.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company27.getProjects();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        boolean boolean40 = company36.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getAssignedWorkers();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = company27.createWorker("hi!", qualificationSet43, (double) 100);
        qualification24.addWorker(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1817");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        java.lang.String str8 = qualification5.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification5.toDTO();
        java.lang.String str10 = qualification5.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.lang.String str14 = company12.toString();
        java.lang.String str15 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification19 = company12.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification22 = company12.createQualification("hi!:0:0:0:0");
        boolean boolean23 = qualification5.equals((java.lang.Object) company12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification19.", company1.equals(qualification19) == qualification19.equals(company1));
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1818");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1819");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet14, (double) 100.0f);
        org.junit.Assert.assertTrue("Contract failed: worker16.equals(worker16)", worker16.equals(worker16));
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1820");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str51 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company50.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification54 = company50.createQualification("hi!");
        java.lang.Object obj55 = null;
        boolean boolean56 = company50.equals(obj55);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company50.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company50.getProjects();
        java.lang.String str60 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company50.getEmployedWorkers();
        boolean boolean62 = worker48.equals((java.lang.Object) workerSet61);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1821");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        java.lang.String str16 = company1.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 0L);
        company1.unassignAll(worker27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker27.", company1.equals(worker27) == worker27.equals(company1));
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1822");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification27.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification32.addWorker(worker35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean42 = qualification32.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getEmployedWorkers();
        boolean boolean46 = qualification32.equals((java.lang.Object) company44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company44.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company44.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company44.getProjects();
        edu.colostate.cs415.model.Qualification qualification51 = company44.createQualification("hi!");
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company53.getUnassignedWorkers();
        java.lang.String str57 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company53.getProjects();
        java.lang.String str59 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company53.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company53.getEmployedWorkers();
        boolean boolean62 = qualification51.equals((java.lang.Object) company53);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification51.toDTO();
        boolean boolean64 = qualification21.equals((java.lang.Object) qualification51);
        java.lang.String str65 = qualification21.toString();
        boolean boolean66 = worker11.equals((java.lang.Object) str65);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1823");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        worker12.setSalary((double) 12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1824");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company9.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str18 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company9.getAvailableWorkers();
        boolean boolean22 = company1.equals((java.lang.Object) workerSet21);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        boolean boolean29 = company25.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) 10L);
        company1.unassignAll(worker32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker32.", company1.equals(worker32) == worker32.equals(company1));
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1825");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification4.addWorker(worker5);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.lang.String str13 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        boolean boolean40 = company8.equals((java.lang.Object) qualification39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company8.getQualifications();
        java.lang.String str44 = company8.getName();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str48 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company47.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification51 = company47.createQualification("hi!");
        java.lang.Object obj52 = null;
        boolean boolean53 = company47.equals(obj52);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = company8.createWorker("hi!", qualificationSet54, (double) 10);
        qualification4.addWorker(worker56);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker56.", company1.equals(worker56) == worker56.equals(company1));
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1826");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 0.0f);
        qualification13.addWorker(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1827");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        worker19.setSalary((double) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1828");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company17.getUnavailableWorkers();
        boolean boolean30 = worker15.equals((java.lang.Object) workerSet29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1829");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        worker10.setSalary((double) 'a');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1830");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str52 = company51.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company51.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company51.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company51.getEmployedWorkers();
        boolean boolean57 = worker49.equals((java.lang.Object) workerSet56);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1831");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 0L);
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1832");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        edu.colostate.cs415.model.Qualification qualification14 = company11.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean21 = qualification18.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification18.getWorkers();
        boolean boolean23 = company11.equals((java.lang.Object) qualification18);
        boolean boolean24 = worker9.equals((java.lang.Object) qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1833");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getAssignedWorkers();
        java.lang.Class<?> wildcardClass24 = company17.getClass();
        boolean boolean25 = worker15.equals((java.lang.Object) company17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1834");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet9, (double) 1L);
        org.junit.Assert.assertTrue("Contract failed: worker11.equals(worker11)", worker11.equals(worker11));
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1835");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAssignedWorkers();
        boolean boolean19 = company9.equals((java.lang.Object) company13);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) (byte) 10);
        company1.unassignAll(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1836");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getAvailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company18.getUnavailableWorkers();
        boolean boolean30 = company12.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Qualification qualification32 = company18.createQualification("hi!:0:0");
        boolean boolean33 = worker10.equals((java.lang.Object) "hi!:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1837");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification15.addWorker(worker16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str21 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.lang.String str30 = company28.toString();
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company20.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company20.createQualification("hi!");
        boolean boolean36 = qualification15.equals((java.lang.Object) qualification35);
        java.lang.String str37 = qualification35.toString();
        worker11.addQualification(qualification35);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1838");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company16.getUnavailableWorkers();
        boolean boolean25 = worker14.equals((java.lang.Object) company16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1839");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        worker11.setSalary(0.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1840");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        java.lang.String str8 = qualification6.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        java.lang.String str14 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 0.0f);
        qualification6.addWorker(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1841");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.lang.String str18 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getAssignedWorkers();
        boolean boolean24 = worker14.equals((java.lang.Object) company16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1842");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification14.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification14.toDTO();
        java.lang.String str24 = qualification14.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification28.addWorker(worker36);
        java.lang.String str38 = qualification28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification28.getWorkers();
        boolean boolean40 = qualification14.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnassignedWorkers();
        java.lang.String str46 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company42.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean61 = qualification54.equals((java.lang.Object) qualification59);
        edu.colostate.cs415.model.Worker worker62 = null;
        qualification59.addWorker(worker62);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        boolean boolean69 = qualification59.equals((java.lang.Object) workerSet68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getEmployedWorkers();
        boolean boolean73 = qualification59.equals((java.lang.Object) company71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = company71.getQualifications();
        boolean boolean75 = company42.equals((java.lang.Object) company71);
        boolean boolean76 = qualification14.equals((java.lang.Object) company71);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = qualification14.getWorkers();
        boolean boolean78 = worker10.equals((java.lang.Object) qualification14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1843");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) '4');
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = worker9.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1844");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        java.lang.String str50 = worker49.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1845");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.lang.Object obj17 = null;
        boolean boolean18 = company12.equals(obj17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getAssignedWorkers();
        boolean boolean26 = company12.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Qualification qualification28 = company12.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification28.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        boolean boolean36 = qualification33.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean47 = qualification40.equals((java.lang.Object) qualification45);
        boolean boolean48 = qualification33.equals((java.lang.Object) boolean47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification33.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification33.getWorkers();
        java.lang.String str51 = qualification33.toString();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company53.getUnavailableWorkers();
        boolean boolean56 = company53.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company53.getAvailableWorkers();
        boolean boolean58 = qualification33.equals((java.lang.Object) workerSet57);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification33.getWorkers();
        java.lang.String str60 = qualification33.toString();
        boolean boolean61 = qualification28.equals((java.lang.Object) qualification33);
        worker10.addQualification(qualification33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1846");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification43 = company35.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getAvailableWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification43.toDTO();
        boolean boolean52 = qualification32.equals((java.lang.Object) qualification43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company57.getUnassignedWorkers();
        java.lang.String str61 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company57.getEmployedWorkers();
        boolean boolean64 = company57.equals((java.lang.Object) 10);
        boolean boolean65 = company55.equals((java.lang.Object) company57);
        java.lang.String str66 = company57.getName();
        boolean boolean67 = qualification43.equals((java.lang.Object) str66);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str71 = company70.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company70.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification74 = company70.createQualification("hi!");
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company76.getAssignedWorkers();
        boolean boolean78 = company70.equals((java.lang.Object) workerSet77);
        boolean boolean79 = qualification43.equals((java.lang.Object) company70);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification43 and company70.", qualification43.equals(company70) == company70.equals(qualification43));
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1847");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '4');
        worker12.setSalary((double) 100L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1848");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = company13.equals((java.lang.Object) qualification20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification20.getWorkers();
        java.lang.String str33 = qualification20.toString();
        worker11.addQualification(qualification20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1849");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str25 = company24.toString();
        java.lang.String str26 = company24.toString();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = company16.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company33.getUnassignedWorkers();
        java.lang.String str37 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company33.getProjects();
        java.lang.String str39 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company33.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company33.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean52 = qualification45.equals((java.lang.Object) qualification50);
        edu.colostate.cs415.model.Worker worker53 = null;
        qualification50.addWorker(worker53);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean60 = qualification50.equals((java.lang.Object) workerSet59);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company62.getEmployedWorkers();
        boolean boolean64 = qualification50.equals((java.lang.Object) company62);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company62.getQualifications();
        boolean boolean66 = company33.equals((java.lang.Object) company62);
        boolean boolean67 = qualification31.equals((java.lang.Object) company33);
        worker14.addQualification(qualification31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1850");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) ' ');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker23);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1851");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company15.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company15.createQualification("hi!");
        java.lang.Object obj20 = null;
        boolean boolean21 = company15.equals(obj20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 100.0f);
        qualification10.addWorker(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1852");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification9.removeWorker(worker20);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1853");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        java.lang.String str50 = worker49.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1854");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification13.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        boolean boolean25 = qualification13.equals((java.lang.Object) company20);
        boolean boolean27 = qualification13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company30.getUnavailableWorkers();
        boolean boolean33 = qualification13.equals((java.lang.Object) workerSet32);
        worker9.addQualification(qualification13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1855");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getAssignedWorkers();
        boolean boolean15 = company12.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 12);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification9.removeWorker(worker18);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1856");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company14.createWorker("hi!", qualificationSet27, (double) (short) 1);
        qualification12.addWorker(worker29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker29.", company1.equals(worker29) == worker29.equals(company1));
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1857");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        java.lang.String str28 = qualification20.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification20.toDTO();
        java.lang.String str30 = qualification20.toString();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification34.equals((java.lang.Object) qualification39);
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification34.addWorker(worker42);
        java.lang.String str44 = qualification34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification34.getWorkers();
        boolean boolean46 = qualification20.equals((java.lang.Object) qualification34);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str50 = company49.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company49.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification53 = company49.createQualification("hi!");
        java.lang.Object obj54 = null;
        boolean boolean55 = company49.equals(obj54);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company57.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        java.lang.String str61 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company57.getAssignedWorkers();
        boolean boolean63 = company49.equals((java.lang.Object) workerSet62);
        boolean boolean64 = qualification20.equals((java.lang.Object) company49);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification20.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification20.toDTO();
        boolean boolean67 = worker16.equals((java.lang.Object) qualificationDTO66);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1858");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        worker14.setSalary((double) 'a');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1859");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = worker32.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1860");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company34.getUnassignedWorkers();
        java.lang.String str38 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company34.getProjects();
        java.lang.String str40 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company34.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company34.getEmployedWorkers();
        java.lang.String str43 = company34.getName();
        edu.colostate.cs415.model.Qualification qualification45 = company34.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification47 = company34.createQualification("hi!:0:0:0:0:0:0");
        worker32.addQualification(qualification47);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1861");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        edu.colostate.cs415.model.Qualification qualification28 = company20.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getEmployedWorkers();
        java.lang.String str30 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company20.getUnavailableWorkers();
        boolean boolean32 = worker18.equals((java.lang.Object) company20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1862");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        boolean boolean6 = company3.equals((java.lang.Object) "");
        java.lang.String str7 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        java.lang.String str9 = company3.getName();
        java.lang.String str10 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet11, (double) 10.0f);
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet11, (double) (byte) 0);
        org.junit.Assert.assertTrue("Contract failed: worker15.equals(worker15)", worker15.equals(worker15));
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1863");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        boolean boolean28 = qualification3.equals((java.lang.Object) company23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification3.toDTO();
        java.lang.String str30 = qualification3.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        boolean boolean37 = company33.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company33.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker41);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1864");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.lang.String str17 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnavailableWorkers();
        boolean boolean20 = worker9.equals((java.lang.Object) workerSet19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1865");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company13.getProjects();
        java.lang.String str18 = company13.getName();
        edu.colostate.cs415.model.Qualification qualification20 = company13.createQualification("hi!:0:0:0:0:0:0");
        worker11.addQualification(qualification20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1866");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company16.getEmployedWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company31.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company31.getQualifications();
        boolean boolean38 = company27.equals((java.lang.Object) qualificationSet37);
        edu.colostate.cs415.model.Worker worker40 = company16.createWorker("hi!", qualificationSet37, 100.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker40);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1867");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) '4');
        int int10 = worker9.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1868");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1);
        java.lang.String str12 = worker11.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1869");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, 0.0d);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1870");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet9, (double) 10);
        org.junit.Assert.assertTrue("Contract failed: worker11.equals(worker11)", worker11.equals(worker11));
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1871");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        java.lang.String str15 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getAssignedWorkers();
        java.lang.String str17 = company12.toString();
        java.lang.String str18 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company12.createQualification("hi!:0:0:0:0");
        worker10.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1872");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) "");
        java.lang.String str13 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 100L);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1873");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = worker11.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1874");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        java.lang.String str33 = worker32.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1875");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1876");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str6 = qualification5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company11.getQualifications();
        java.lang.String str14 = company11.getName();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getUnassignedWorkers();
        boolean boolean24 = company11.equals((java.lang.Object) company16);
        java.lang.String str25 = company16.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 1.0f);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification5.removeWorker(worker28);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1877");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 1L);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1878");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str9 = qualification8.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification8.", company1.equals(qualification8) == qualification8.equals(company1));
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1879");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0");
        java.lang.String str12 = qualification11.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification11.", company1.equals(qualification11) == qualification11.equals(company1));
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1880");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 'a');
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1881");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) '4');
        company1.unassignAll(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1882");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = worker14.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1883");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1884");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str35 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification38 = company34.createQualification("hi!");
        java.lang.Object obj39 = null;
        boolean boolean40 = qualification38.equals(obj39);
        java.lang.String str41 = qualification38.toString();
        worker32.addQualification(qualification38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1885");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = qualification4.equals((java.lang.Object) str7);
        java.lang.String str9 = qualification4.toString();
        java.lang.String str10 = qualification4.toString();
        java.lang.String str11 = qualification4.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company13.createWorker("hi!", qualificationSet26, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification4.removeWorker(worker28);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1886");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.lang.String str26 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getEmployedWorkers();
        boolean boolean28 = qualification3.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str32 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company31.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet34, (double) ' ');
        qualification3.addWorker(worker36);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker36.", company1.equals(worker36) == worker36.equals(company1));
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1887");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, 0.0d);
        qualification24.addWorker(worker41);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker41.", company1.equals(worker41) == worker41.equals(company1));
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1888");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification43 = company35.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getAvailableWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification43.toDTO();
        boolean boolean52 = qualification32.equals((java.lang.Object) qualification43);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str56 = company55.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company55.getQualifications();
        java.lang.String str58 = company55.getName();
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company60.getUnassignedWorkers();
        java.lang.String str64 = company60.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company60.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company60.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company60.getUnassignedWorkers();
        boolean boolean68 = company55.equals((java.lang.Object) company60);
        java.lang.String str69 = company60.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company60.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 1.0f);
        qualification43.addWorker(worker72);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker72.", company1.equals(worker72) == worker72.equals(company1));
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1889");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        worker8.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1890");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker14 = null;
        qualification10.addWorker(worker14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        boolean boolean22 = qualification10.equals((java.lang.Object) company17);
        boolean boolean23 = qualification5.equals((java.lang.Object) boolean22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company26.getProjects();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company35.getAssignedWorkers();
        java.lang.String str41 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = company26.createWorker("hi!", qualificationSet42, (double) 100);
        qualification5.addWorker(worker44);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker44.", company1.equals(worker44) == worker44.equals(company1));
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1891");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification43 = company35.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getAvailableWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification43.toDTO();
        boolean boolean52 = qualification32.equals((java.lang.Object) qualification43);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet56 = company55.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company55.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company59.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company59.getProjects();
        java.lang.String str63 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company59.getAssignedWorkers();
        boolean boolean65 = company55.equals((java.lang.Object) company59);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet66 = company59.getQualifications();
        edu.colostate.cs415.model.Worker worker68 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet66, (double) (byte) 10);
        qualification32.addWorker(worker68);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker68.", company1.equals(worker68) == worker68.equals(company1));
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1892");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification36.toDTO();
        boolean boolean39 = qualification36.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        boolean boolean51 = qualification36.equals((java.lang.Object) boolean50);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification36.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification36.toDTO();
        java.lang.String str54 = qualification36.toString();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str57 = company56.toString();
        java.lang.String str58 = company56.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company56.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company56.getProjects();
        java.lang.String str61 = company56.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company56.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company56.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company56.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company56.getQualifications();
        boolean boolean66 = qualification36.equals((java.lang.Object) company56);
        boolean boolean67 = worker32.equals((java.lang.Object) company56);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1893");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getUnassignedWorkers();
        boolean boolean15 = worker7.equals((java.lang.Object) workerSet14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1894");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean7 = company1.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str13 = qualification12.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getUnavailableWorkers();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification12.removeWorker(worker25);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1895");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        double double12 = worker11.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1896");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        worker10.setSalary(100.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1897");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.lang.String str37 = company1.getName();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company1.createWorker("hi!", qualificationSet47, (double) 10);
        double double50 = worker49.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1898");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = worker19.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1899");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) 1L);
        qualification6.addWorker(worker16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1900");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification19.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification19.equals((java.lang.Object) workerSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        boolean boolean33 = qualification19.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company31.getQualifications();
        java.lang.String str36 = company31.toString();
        boolean boolean37 = worker10.equals((java.lang.Object) company31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1901");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification73 = company69.createQualification("hi!");
        java.lang.String str74 = qualification73.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO75 = qualification73.toDTO();
        worker48.addQualification(qualification73);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1902");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.lang.String str14 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) '#');
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1903");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company5.getUnassignedWorkers();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company5.getProjects();
        java.lang.String str11 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company5.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company5.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification22.addWorker(worker25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification22.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getEmployedWorkers();
        boolean boolean36 = qualification22.equals((java.lang.Object) company34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company34.getQualifications();
        boolean boolean38 = company5.equals((java.lang.Object) company34);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        boolean boolean45 = company41.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company41.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company41.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = company5.createWorker("hi!", qualificationSet50, (double) 100.0f);
        boolean boolean53 = company1.equals((java.lang.Object) worker52);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker52.", company1.equals(worker52) == worker52.equals(company1));
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1904");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str18 = company17.toString();
        java.lang.String str19 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 1);
        qualification3.addWorker(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1905");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        boolean boolean6 = company3.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.lang.String str9 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company3.getProjects();
        java.lang.String str11 = company3.getName();
        java.lang.String str12 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 10L);
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet13, (double) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: worker17.equals(worker17)", worker17.equals(worker17));
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1906");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        int int15 = worker14.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1907");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company17.getQualifications();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company22.getUnavailableWorkers();
        boolean boolean25 = company17.equals((java.lang.Object) company22);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getUnavailableWorkers();
        boolean boolean27 = worker15.equals((java.lang.Object) company22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1908");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        java.lang.String str18 = company14.getName();
        boolean boolean19 = company8.equals((java.lang.Object) company14);
        boolean boolean20 = qualification6.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification6.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnassignedWorkers();
        java.lang.String str27 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company23.getEmployedWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company38.getQualifications();
        boolean boolean45 = company34.equals((java.lang.Object) qualificationSet44);
        edu.colostate.cs415.model.Worker worker47 = company23.createWorker("hi!", qualificationSet44, 100.0d);
        qualification6.addWorker(worker47);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker47.", company1.equals(worker47) == worker47.equals(company1));
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1909");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker6 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet4, (double) 100.0f);
        org.junit.Assert.assertTrue("Contract failed: worker6.equals(worker6)", worker6.equals(worker6));
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1910");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) '4');
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.lang.Object obj16 = null;
        boolean boolean17 = company11.equals(obj16);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        boolean boolean29 = company11.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification26.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification26.toDTO();
        boolean boolean32 = worker9.equals((java.lang.Object) qualificationDTO31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1911");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company13.getQualifications();
        java.lang.String str16 = company13.getName();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getUnassignedWorkers();
        boolean boolean26 = company13.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = company28.equals(obj33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company28.getAvailableWorkers();
        boolean boolean38 = company18.equals((java.lang.Object) company28);
        java.lang.String str39 = company18.toString();
        boolean boolean40 = worker11.equals((java.lang.Object) company18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1912");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.toString();
        java.lang.String str23 = company21.toString();
        edu.colostate.cs415.model.Qualification qualification25 = company21.createQualification("hi!");
        boolean boolean26 = company13.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company30.getQualifications();
        boolean boolean36 = qualification28.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification28.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification28.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification28.getWorkers();
        boolean boolean40 = worker11.equals((java.lang.Object) qualification28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1913");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.lang.String str15 = company11.getName();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        boolean boolean20 = company17.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company17.getProjects();
        boolean boolean23 = company17.equals((java.lang.Object) (short) -1);
        boolean boolean24 = company11.equals((java.lang.Object) company17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company17.getEmployedWorkers();
        boolean boolean26 = worker9.equals((java.lang.Object) company17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1914");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker26);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1915");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1);
        boolean boolean12 = worker11.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1916");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company34.getProjects();
        edu.colostate.cs415.model.Qualification qualification38 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company34.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company34.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company34.getEmployedWorkers();
        boolean boolean42 = worker32.equals((java.lang.Object) company34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1917");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company13.getQualifications();
        java.lang.String str16 = company13.getName();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getUnassignedWorkers();
        boolean boolean26 = company13.equals((java.lang.Object) company18);
        java.lang.String str27 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 1.0f);
        company1.unassignAll(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1918");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company9.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company9.getAvailableWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        java.lang.String str28 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company22.getEmployedWorkers();
        java.lang.String str31 = company22.getName();
        edu.colostate.cs415.model.Qualification qualification33 = company22.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification35 = company22.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str38 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company37.getProjects();
        boolean boolean40 = qualification35.equals((java.lang.Object) projectSet39);
        boolean boolean41 = company9.equals((java.lang.Object) qualification35);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification33.", company1.equals(qualification33) == qualification33.equals(company1));
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1919");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        worker12.setSalary((double) (byte) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1920");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, 0.0d);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1921");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        boolean boolean30 = qualification27.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification34.equals((java.lang.Object) qualification39);
        boolean boolean42 = qualification27.equals((java.lang.Object) boolean41);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification27.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification27.getWorkers();
        java.lang.String str45 = qualification27.toString();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company47.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification51 = company47.createQualification("hi!");
        boolean boolean52 = qualification27.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) (short) 100);
        qualification3.addWorker(worker55);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker55.", company1.equals(worker55) == worker55.equals(company1));
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1922");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company1.getProjects();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) "");
        java.lang.String str24 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getEmployedWorkers();
        java.lang.String str26 = company20.getName();
        java.lang.String str27 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 10.0f);
        company1.unassignAll(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1923");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        boolean boolean10 = company6.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company6.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company6.getQualifications();
        boolean boolean13 = company2.equals((java.lang.Object) qualificationSet12);
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet12, (double) 10);
        org.junit.Assert.assertTrue("Contract failed: worker15.equals(worker15)", worker15.equals(worker15));
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1924");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = worker32.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1925");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company13.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification19.addWorker(worker20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification19.getWorkers();
        worker11.addQualification(qualification19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1926");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        edu.colostate.cs415.dto.WorkerDTO workerDTO33 = worker32.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker32.", company2.equals(worker32) == worker32.equals(company2));
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1927");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '4');
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification21.addWorker(worker24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification21.equals((java.lang.Object) workerSet30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getEmployedWorkers();
        boolean boolean35 = qualification21.equals((java.lang.Object) company33);
        edu.colostate.cs415.model.Qualification qualification37 = company33.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification37.toDTO();
        java.lang.String str39 = qualification37.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification37.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company43.getProjects();
        edu.colostate.cs415.model.Qualification qualification47 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean49 = qualification37.equals((java.lang.Object) qualification47);
        java.lang.String str50 = qualification37.toString();
        java.lang.String str51 = qualification37.toString();
        worker12.addQualification(qualification37);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1928");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        java.lang.String str16 = worker15.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1929");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAssignedWorkers();
        boolean boolean19 = worker9.equals((java.lang.Object) company11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1930");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        worker14.setSalary((double) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1931");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        worker26.setSalary((double) 12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1932");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = qualification4.equals((java.lang.Object) str7);
        java.lang.String str9 = qualification4.toString();
        java.lang.String str10 = qualification4.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) ' ');
        qualification4.addWorker(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1933");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        java.lang.String str8 = qualification6.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = company11.equals(obj16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) '4');
        qualification6.addWorker(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1934");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification24.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification24.toString();
        java.lang.String str38 = qualification24.toString();
        java.lang.String str39 = qualification24.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company48.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company48.getProjects();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company48.getAssignedWorkers();
        boolean boolean54 = company41.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company48.getQualifications();
        boolean boolean56 = qualification24.equals((java.lang.Object) company48);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company58.getUnassignedWorkers();
        java.lang.String str62 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company58.getProjects();
        java.lang.String str64 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company58.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company58.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company58.getUnassignedWorkers();
        java.lang.String str68 = company58.toString();
        edu.colostate.cs415.model.Qualification qualification70 = company58.createQualification("hi!:0:0:0:0");
        boolean boolean71 = qualification24.equals((java.lang.Object) qualification70);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str74 = company73.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company73.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company73.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company73.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company73.getAvailableWorkers();
        boolean boolean79 = qualification24.equals((java.lang.Object) company73);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification70 and company73.", qualification70.equals(company73) == company73.equals(qualification70));
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1935");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean19 = company16.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company16.getProjects();
        java.lang.String str24 = company16.getName();
        java.lang.String str25 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 10L);
        qualification3.removeWorker(worker28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker28.", company1.equals(worker28) == worker28.equals(company1));
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1936");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        java.lang.String str34 = qualification26.toString();
        java.lang.String str35 = qualification26.toString();
        boolean boolean36 = qualification3.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company38.getAssignedWorkers();
        boolean boolean45 = qualification26.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        boolean boolean52 = company48.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company48.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker56 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet54, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification26.removeWorker(worker56);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1937");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification9.toDTO();
        java.lang.String str18 = qualification9.toString();
        java.lang.String str19 = qualification9.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        java.lang.String str29 = company22.getName();
        java.lang.String str30 = company22.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company22.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) (short) 1);
        qualification9.addWorker(worker34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker34.", company1.equals(worker34) == worker34.equals(company1));
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1938");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getEmployedWorkers();
        java.lang.String str19 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company10.getAssignedWorkers();
        boolean boolean21 = company1.equals((java.lang.Object) workerSet20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification24 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification26 = company1.createQualification("hi!:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification24.", company1.equals(qualification24) == qualification24.equals(company1));
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1939");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.lang.String str30 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) 1);
        boolean boolean38 = worker25.equals((java.lang.Object) "hi!");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1940");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnavailableWorkers();
        java.lang.String str20 = company13.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getEmployedWorkers();
        boolean boolean29 = company22.equals((java.lang.Object) 10);
        java.lang.String str30 = company22.toString();
        boolean boolean31 = company13.equals((java.lang.Object) company22);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str34 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company33.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company33.getProjects();
        boolean boolean37 = company22.equals((java.lang.Object) projectSet36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company22.getUnavailableWorkers();
        boolean boolean39 = worker11.equals((java.lang.Object) workerSet38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1941");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1);
        double double12 = worker11.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1942");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        java.lang.String str23 = company16.getName();
        edu.colostate.cs415.model.Qualification qualification25 = company16.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification12.removeWorker(worker28);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1943");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.lang.String str10 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet14, 1.0d);
        org.junit.Assert.assertTrue("Contract failed: worker16.equals(worker16)", worker16.equals(worker16));
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1944");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnassignedWorkers();
        java.lang.String str16 = company6.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company6.getAssignedWorkers();
        boolean boolean18 = qualification3.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 10L);
        qualification3.addWorker(worker28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker28.", company1.equals(worker28) == worker28.equals(company1));
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1945");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification20.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification20.toDTO();
        worker11.addQualification(qualification20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest3.test1946");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.lang.String str20 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = company9.createWorker("hi!", qualificationSet24, 1.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker26);
    }
}

