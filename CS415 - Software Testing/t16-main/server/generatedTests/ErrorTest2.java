import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ErrorTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1001");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 0L);
        company1.unassignAll(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1002");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = qualification4.equals((java.lang.Object) str7);
        java.lang.String str9 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification4.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company12.createWorker("hi!", qualificationSet27, 1.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification4.removeWorker(worker29);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1003");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, 0.0d);
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet6, (double) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1004");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        boolean boolean10 = worker9.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1005");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = worker14.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1006");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        worker25.setSalary((double) 100L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1007");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification11.getWorkers();
        java.lang.String str16 = qualification11.toString();
        worker7.addQualification(qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1008");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.dto.WorkerDTO workerDTO10 = worker9.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1009");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, 0.0d);
        company1.unassignAll(worker14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker14.", company1.equals(worker14) == worker14.equals(company1));
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1010");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification8.getWorkers();
        java.lang.String str12 = qualification8.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company15.getQualifications();
        java.lang.String str22 = company15.getName();
        java.lang.String str23 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company15.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification8.removeWorker(worker27);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1011");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company20.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = company32.createWorker("hi!", qualificationSet45, (double) (short) 1);
        company20.unassignAll(worker47);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker47.", company1.equals(worker47) == worker47.equals(company1));
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1012");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification23.equals((java.lang.Object) qualification28);
        java.lang.String str31 = qualification23.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification23.toDTO();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company34.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company34.getQualifications();
        java.lang.Class<?> wildcardClass41 = qualificationSet40.getClass();
        boolean boolean42 = qualification23.equals((java.lang.Object) qualificationSet40);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification23.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification23.toDTO();
        worker19.addQualification(qualification23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1013");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification18 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification18.toDTO();
        worker12.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1014");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getAssignedWorkers();
        boolean boolean17 = qualification7.equals((java.lang.Object) company9);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1015");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str22 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company21.getProjects();
        boolean boolean24 = company18.equals((java.lang.Object) projectSet23);
        java.lang.String str25 = company18.getName();
        boolean boolean26 = worker16.equals((java.lang.Object) str25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1016");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.lang.String str32 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company28.getProjects();
        java.lang.String str34 = company28.toString();
        edu.colostate.cs415.model.Qualification qualification36 = company28.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company28.getEmployedWorkers();
        java.lang.String str38 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company28.getUnavailableWorkers();
        boolean boolean40 = worker26.equals((java.lang.Object) company28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1017");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAssignedWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 12);
        company1.unassignAll(worker15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker15.", company1.equals(worker15) == worker15.equals(company1));
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1018");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 10L);
        company1.unassignAll(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1019");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        boolean boolean18 = worker8.equals((java.lang.Object) company10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1020");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1021");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.lang.String str9 = company2.toString();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet12, (double) (byte) 100);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1022");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) '4');
        qualification8.addWorker(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification8.", company1.equals(qualification8) == qualification8.equals(company1));
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1023");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.lang.String str15 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getAssignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification22.addWorker(worker23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company27.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company27.getEmployedWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str36 = company35.toString();
        java.lang.String str37 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        boolean boolean40 = company27.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company27.createQualification("hi!");
        boolean boolean43 = qualification22.equals((java.lang.Object) qualification42);
        boolean boolean44 = company10.equals((java.lang.Object) qualification42);
        boolean boolean45 = worker8.equals((java.lang.Object) qualification42);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1024");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        boolean boolean18 = company12.equals((java.lang.Object) projectSet17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getAssignedWorkers();
        boolean boolean20 = qualification9.equals((java.lang.Object) workerSet19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        java.lang.String str32 = qualification29.toString();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification36.addWorker(worker44);
        java.lang.String str46 = qualification36.toString();
        boolean boolean47 = qualification29.equals((java.lang.Object) str46);
        boolean boolean48 = qualification9.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str51 = company50.getName();
        edu.colostate.cs415.model.Qualification qualification53 = company50.createQualification("hi!");
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str56 = company55.toString();
        boolean boolean57 = qualification53.equals((java.lang.Object) str56);
        java.lang.String str58 = qualification53.toString();
        java.lang.String str59 = qualification53.toString();
        java.lang.Class<?> wildcardClass60 = qualification53.getClass();
        boolean boolean61 = qualification9.equals((java.lang.Object) qualification53);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification9 and company50.", qualification9.equals(company50) == company50.equals(qualification9));
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1025");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification20.addWorker(worker23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification20.equals((java.lang.Object) workerSet29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        boolean boolean34 = qualification20.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        worker11.addQualification(qualification39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1026");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.lang.String str5 = qualification3.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAssignedWorkers();
        java.lang.String str11 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 0.0f);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker17);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1027");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company23.getProjects();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getAssignedWorkers();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = company23.createWorker("hi!", qualificationSet39, (double) 100);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker41);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1028");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        boolean boolean15 = company12.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification17 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company12.getProjects();
        java.lang.String str19 = company12.getName();
        edu.colostate.cs415.model.Qualification qualification21 = company12.createQualification("hi!:0:0:0:0");
        worker10.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1029");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getEmployedWorkers();
        java.lang.String str19 = company10.getName();
        edu.colostate.cs415.model.Qualification qualification21 = company10.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification23 = company10.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = worker8.equals((java.lang.Object) qualification23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1030");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet8, (double) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1031");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company27.getQualifications();
        boolean boolean34 = company23.equals((java.lang.Object) qualificationSet33);
        edu.colostate.cs415.model.Worker worker36 = company12.createWorker("hi!", qualificationSet33, 100.0d);
        company1.unassignAll(worker36);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker36.", company1.equals(worker36) == worker36.equals(company1));
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1032");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str21 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification24.toDTO();
        java.lang.String str27 = qualification24.toString();
        worker18.addQualification(qualification24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1033");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification30.toDTO();
        boolean boolean33 = qualification30.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification37.equals((java.lang.Object) qualification42);
        boolean boolean45 = qualification30.equals((java.lang.Object) boolean44);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification30.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification30.getWorkers();
        java.lang.String str48 = qualification30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean60 = qualification53.equals((java.lang.Object) qualification58);
        java.lang.String str61 = qualification53.toString();
        java.lang.String str62 = qualification53.toString();
        boolean boolean63 = qualification30.equals((java.lang.Object) qualification53);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company65.getUnassignedWorkers();
        java.lang.String str69 = company65.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet70 = company65.getProjects();
        java.lang.String str71 = company65.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company65.getEmployedWorkers();
        boolean boolean73 = qualification30.equals((java.lang.Object) workerSet72);
        worker26.addQualification(qualification30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1034");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = worker9.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1035");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification31 = company27.createQualification("hi!");
        java.lang.Object obj32 = null;
        boolean boolean33 = company27.equals(obj32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company35.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company35.getAssignedWorkers();
        boolean boolean41 = company27.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.model.Qualification qualification43 = company27.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification43.getWorkers();
        worker25.addQualification(qualification43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1036");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Worker worker27 = null;
        qualification24.addWorker(worker27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification24.equals((java.lang.Object) workerSet33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getEmployedWorkers();
        boolean boolean38 = qualification24.equals((java.lang.Object) company36);
        edu.colostate.cs415.model.Qualification qualification40 = company36.createQualification("hi!");
        boolean boolean41 = company11.equals((java.lang.Object) company36);
        edu.colostate.cs415.model.Qualification qualification43 = company36.createQualification("hi!:0:0:0:0");
        worker9.addQualification(qualification43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1037");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = worker10.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1038");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        boolean boolean28 = qualification8.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, 0.0d);
        qualification8.addWorker(worker39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker39.", company1.equals(worker39) == worker39.equals(company1));
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1039");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company23.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company23.getQualifications();
        java.lang.Class<?> wildcardClass30 = qualificationSet29.getClass();
        boolean boolean31 = qualification12.equals((java.lang.Object) qualificationSet29);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification12.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company35.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company35.getProjects();
        java.lang.String str39 = company35.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.lang.String str45 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.Object obj47 = null;
        boolean boolean48 = company41.equals(obj47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company41.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company41.getAvailableWorkers();
        boolean boolean51 = company35.equals((java.lang.Object) company41);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company35.getUnassignedWorkers();
        boolean boolean53 = qualification12.equals((java.lang.Object) workerSet52);
        boolean boolean54 = worker8.equals((java.lang.Object) boolean53);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1040");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification15.toDTO();
        java.lang.String str25 = qualification15.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification29.addWorker(worker37);
        java.lang.String str39 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification29.getWorkers();
        boolean boolean41 = qualification15.equals((java.lang.Object) qualification29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification15.getWorkers();
        java.lang.Class<?> wildcardClass43 = qualification15.getClass();
        boolean boolean44 = worker11.equals((java.lang.Object) qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1041");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getUnavailableWorkers();
        boolean boolean20 = worker12.equals((java.lang.Object) company14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1042");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.lang.String str18 = company12.toString();
        edu.colostate.cs415.model.Qualification qualification20 = company12.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str27 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = company23.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getAssignedWorkers();
        boolean boolean31 = qualification20.equals((java.lang.Object) workerSet30);
        boolean boolean32 = worker10.equals((java.lang.Object) boolean31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1043");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        java.lang.String str12 = qualification3.toString();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        java.lang.String str23 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company19.getProjects();
        java.lang.String str25 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company19.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company14.createWorker("hi!", qualificationSet29, 1.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker31);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1044");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker8 = null;
        qualification7.addWorker(worker8);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        boolean boolean17 = company11.equals((java.lang.Object) (short) -1);
        java.lang.String str18 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company11.getUnavailableWorkers();
        boolean boolean21 = qualification7.equals((java.lang.Object) workerSet20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification7 and company11.", qualification7.equals(company11) == company11.equals(qualification7));
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1045");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        java.lang.String str34 = qualification26.toString();
        java.lang.String str35 = qualification26.toString();
        boolean boolean36 = qualification3.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company38.getAssignedWorkers();
        boolean boolean45 = qualification26.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company47.getUnassignedWorkers();
        java.lang.String str51 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company47.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company47.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company47.getEmployedWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company58.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company58.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        boolean boolean66 = company62.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company62.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company62.getQualifications();
        boolean boolean69 = company58.equals((java.lang.Object) qualificationSet68);
        edu.colostate.cs415.model.Worker worker71 = company47.createWorker("hi!", qualificationSet68, 100.0d);
        qualification26.addWorker(worker71);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker71.", company1.equals(worker71) == worker71.equals(company1));
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1046");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification14.removeWorker(worker25);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1047");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company25.getUnassignedWorkers();
        java.lang.String str29 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company25.getProjects();
        java.lang.String str31 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company25.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company25.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company20.createWorker("hi!", qualificationSet35, 1.0d);
        qualification9.addWorker(worker37);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker37.", company1.equals(worker37) == worker37.equals(company1));
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1048");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification23.toDTO();
        boolean boolean26 = qualification23.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker27 = null;
        qualification23.addWorker(worker27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        boolean boolean35 = qualification23.equals((java.lang.Object) company30);
        boolean boolean37 = qualification23.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getUnavailableWorkers();
        boolean boolean43 = qualification23.equals((java.lang.Object) workerSet42);
        java.lang.Class<?> wildcardClass44 = workerSet42.getClass();
        boolean boolean45 = worker19.equals((java.lang.Object) workerSet42);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1049");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        java.lang.String str12 = worker11.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1050");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company9.getProjects();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getAssignedWorkers();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company9.createWorker("hi!", qualificationSet25, (double) 100);
        qualification5.addWorker(worker27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker27.", company1.equals(worker27) == worker27.equals(company1));
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1051");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet8, (double) 100);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1052");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) '#');
        company1.unassignAll(worker14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker14.", company1.equals(worker14) == worker14.equals(company1));
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1053");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAvailableWorkers();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet6, 100.0d);
        org.junit.Assert.assertTrue("Contract failed: worker8.equals(worker8)", worker8.equals(worker8));
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1054");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = qualification13.equals(obj14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification13.toDTO();
        worker7.addQualification(qualification13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1055");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getEmployedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = company8.createWorker("hi!", qualificationSet21, (double) (short) 1);
        qualification5.addWorker(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1056");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, 0.0d);
        company1.unassignAll(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1057");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        worker10.setSalary(1.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1058");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        boolean boolean26 = qualification11.equals((java.lang.Object) boolean25);
        worker7.addQualification(qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1059");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        boolean boolean31 = company20.equals((java.lang.Object) qualificationSet30);
        edu.colostate.cs415.model.Worker worker33 = company9.createWorker("hi!", qualificationSet30, 100.0d);
        company1.unassignAll(worker33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker33.", company1.equals(worker33) == worker33.equals(company1));
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1060");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        boolean boolean41 = company38.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company38.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, (double) 1L);
        company1.unassignAll(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1061");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.lang.String str18 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!:0:0:0:0");
        java.lang.String str22 = qualification21.toString();
        worker11.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1062");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.lang.String str12 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0.0f);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification6.removeWorker(worker18);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1063");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        java.lang.String str10 = worker9.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1064");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company35.getUnavailableWorkers();
        boolean boolean40 = worker14.equals((java.lang.Object) workerSet39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1065");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary((double) 12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1066");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        boolean boolean34 = company2.equals((java.lang.Object) qualification33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet37, (double) '#');
        org.junit.Assert.assertTrue("Contract failed: worker39.equals(worker39)", worker39.equals(worker39));
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1067");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        boolean boolean15 = worker14.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1068");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) ' ');
        company6.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1069");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.lang.String str32 = company27.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company27.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification37.equals((java.lang.Object) qualification42);
        edu.colostate.cs415.model.Worker worker45 = null;
        qualification42.addWorker(worker45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean52 = qualification42.equals((java.lang.Object) workerSet51);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getEmployedWorkers();
        boolean boolean56 = qualification42.equals((java.lang.Object) company54);
        edu.colostate.cs415.model.Qualification qualification58 = company54.createQualification("hi!");
        boolean boolean59 = company27.equals((java.lang.Object) qualification58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company27.getAssignedWorkers();
        boolean boolean61 = worker25.equals((java.lang.Object) company27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1070");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str5 = qualification4.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.lang.String str15 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getEmployedWorkers();
        boolean boolean17 = qualification4.equals((java.lang.Object) workerSet16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        boolean boolean24 = company21.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 1L);
        qualification4.addWorker(worker28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker28.", company1.equals(worker28) == worker28.equals(company1));
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1071");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.lang.String str6 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company3.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 0.0f);
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet10, (double) 10L);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1072");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        double double10 = worker9.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1073");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification7.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification7.toDTO();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = company11.createWorker("hi!", qualificationSet24, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker26);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1074");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.lang.String str32 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company28.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company28.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str37 = company28.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company28.getEmployedWorkers();
        boolean boolean41 = worker26.equals((java.lang.Object) company28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1075");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        boolean boolean28 = qualification8.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        boolean boolean36 = qualification8.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company39.getQualifications();
        java.lang.String str46 = company39.getName();
        java.lang.String str47 = company39.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company39.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) (short) 1);
        qualification8.addWorker(worker51);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker51.", company1.equals(worker51) == worker51.equals(company1));
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1076");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 10L);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1077");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification16.toDTO();
        java.lang.String str19 = qualification16.toString();
        worker10.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1078");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) '4');
        qualification8.addWorker(worker21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker21.", company1.equals(worker21) == worker21.equals(company1));
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1079");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str5 = qualification4.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company8.getQualifications();
        java.lang.String str15 = company8.getName();
        java.lang.String str16 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) (short) 1);
        qualification4.addWorker(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1080");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        worker8.setSalary((double) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1081");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.lang.String str14 = qualification3.toString();
        edu.colostate.cs415.model.Worker worker15 = null;
        qualification3.addWorker(worker15);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getAssignedWorkers();
        java.lang.String str23 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 0.0f);
        qualification3.removeWorker(worker29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker29.", company1.equals(worker29) == worker29.equals(company1));
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1082");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        boolean boolean18 = company15.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company15.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 1L);
        qualification8.addWorker(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1083");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getEmployedWorkers();
        java.lang.String str19 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company10.getAssignedWorkers();
        boolean boolean21 = company1.equals((java.lang.Object) workerSet20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getAvailableWorkers();
        java.lang.String str28 = company25.toString();
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!:0:0");
        boolean boolean31 = company1.equals((java.lang.Object) company25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company10 and qualification30.", company10.equals(qualification30) == qualification30.equals(company10));
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1084");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        int int11 = worker10.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1085");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1086");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet8, (double) 12);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1087");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet11, 10.0d);
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1088");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        worker9.setSalary((double) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1089");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company1.getQualifications();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, 0.0d);
        company1.unassignAll(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1090");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker13 = null;
        qualification12.addWorker(worker13);
        worker8.addQualification(qualification12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1091");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getEmployedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = company15.createWorker("hi!", qualificationSet28, (double) (short) 1);
        qualification3.addWorker(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1092");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, 0.0d);
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1093");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company10.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 10L);
        qualification18.addWorker(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1094");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.Class<?> wildcardClass21 = qualificationSet20.getClass();
        boolean boolean22 = qualification3.equals((java.lang.Object) qualificationSet20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company27.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) '#');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker33);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1095");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet10, (double) '#');
        org.junit.Assert.assertTrue("Contract failed: worker12.equals(worker12)", worker12.equals(worker12));
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1096");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1097");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        java.lang.String str12 = company9.getName();
        java.lang.String str13 = company9.getName();
        boolean boolean14 = worker7.equals((java.lang.Object) company9);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1098");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = worker25.equals((java.lang.Object) qualification31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1099");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = qualification4.equals((java.lang.Object) str7);
        java.lang.String str9 = qualification4.toString();
        java.lang.String str10 = qualification4.toString();
        java.lang.String str11 = qualification4.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company13.getQualifications();
        edu.colostate.cs415.model.Qualification qualification18 = company13.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        boolean boolean37 = qualification22.equals((java.lang.Object) boolean36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification22.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification22.getWorkers();
        java.lang.String str40 = qualification22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification22.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification22.toDTO();
        boolean boolean43 = qualification18.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company45.getUnassignedWorkers();
        java.lang.String str49 = company45.toString();
        java.lang.String str50 = company45.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company45.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company45.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass53 = company45.getClass();
        boolean boolean54 = qualification18.equals((java.lang.Object) company45);
        boolean boolean55 = qualification4.equals((java.lang.Object) boolean54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification18.", company1.equals(qualification18) == qualification18.equals(company1));
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1100");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification19.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification19.equals((java.lang.Object) workerSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        boolean boolean33 = qualification19.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        boolean boolean35 = company2.equals((java.lang.Object) company31);
        java.lang.String str36 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet37, (double) (short) 1);
        org.junit.Assert.assertTrue("Contract failed: worker39.equals(worker39)", worker39.equals(worker39));
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1101");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        boolean boolean12 = worker11.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1102");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.toString();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = company13.createWorker("hi!", qualificationSet28, 1.0d);
        qualification11.addWorker(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1103");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAssignedWorkers();
        java.lang.String str13 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getAssignedWorkers();
        java.lang.String str15 = company10.toString();
        edu.colostate.cs415.model.Qualification qualification17 = company10.createQualification("hi!:0:0:0:0");
        worker8.addQualification(qualification17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1104");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, 0.0d);
        qualification6.addWorker(worker16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1105");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        java.lang.String str28 = qualification20.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification20.toDTO();
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = worker16.equals((java.lang.Object) str30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1106");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        boolean boolean27 = company24.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company24.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 1L);
        qualification8.addWorker(worker31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1107");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.lang.String str5 = qualification3.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company7.getQualifications();
        java.lang.String str14 = company7.getName();
        edu.colostate.cs415.model.Qualification qualification16 = company7.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company7.getAvailableWorkers();
        boolean boolean18 = qualification3.equals((java.lang.Object) workerSet17);
        java.lang.String str19 = qualification3.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company22.getProjects();
        edu.colostate.cs415.model.Qualification qualification26 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) '4');
        qualification3.addWorker(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1108");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company82.getAssignedWorkers();
        boolean boolean85 = company82.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company82.getQualifications();
        edu.colostate.cs415.model.Worker worker88 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet86, (double) 12);
        company1.unassignAll(worker88);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker88.", company1.equals(worker88) == worker88.equals(company1));
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1109");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company6.getAvailableWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str20 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company19.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) '#');
        company6.unassignAll(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1110");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        worker16.setSalary((double) 100.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1111");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnassignedWorkers();
        boolean boolean19 = worker14.equals((java.lang.Object) company16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1112");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        boolean boolean24 = company13.equals((java.lang.Object) qualificationSet23);
        edu.colostate.cs415.model.Worker worker26 = company2.createWorker("hi!", qualificationSet23, 100.0d);
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet23, 1.0d);
        org.junit.Assert.assertTrue("Contract failed: worker28.equals(worker28)", worker28.equals(worker28));
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1113");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        boolean boolean15 = worker14.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1114");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification11.", company1.equals(qualification11) == qualification11.equals(company1));
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1115");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, (double) ' ');
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0d);
        java.lang.String str15 = qualification11.toString();
        java.lang.String str16 = qualification11.toString();
        boolean boolean17 = worker7.equals((java.lang.Object) str16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1116");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary((double) (byte) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1117");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet12, 0.0d);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1118");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        boolean boolean54 = company50.equals((java.lang.Object) 10L);
        java.lang.String str55 = company50.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company50.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = company32.createWorker("hi!:0:0", qualificationSet59, (double) '4');
        org.junit.Assert.assertTrue("Contract failed: worker61.equals(worker61)", worker61.equals(worker61));
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1119");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification19.addWorker(worker23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = qualification19.equals((java.lang.Object) company26);
        boolean boolean32 = qualification14.equals((java.lang.Object) boolean31);
        java.lang.Object obj33 = null;
        boolean boolean34 = qualification14.equals(obj33);
        worker8.addQualification(qualification14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1120");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification34.addWorker(worker37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification34.equals((java.lang.Object) workerSet43);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        boolean boolean48 = qualification34.equals((java.lang.Object) company46);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company46.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company46.getProjects();
        edu.colostate.cs415.model.Qualification qualification53 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        worker25.addQualification(qualification53);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1121");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        worker11.addQualification(qualification17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1122");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.lang.String str14 = qualification3.toString();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 'a');
        qualification3.removeWorker(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1123");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAssignedWorkers();
        java.lang.String str13 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0.0f);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker19);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1124");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = worker14.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1125");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getUnavailableWorkers();
        boolean boolean15 = worker7.equals((java.lang.Object) company9);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1126");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.toString();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company20.getProjects();
        java.lang.String str25 = company20.toString();
        java.lang.Class<?> wildcardClass26 = company20.getClass();
        boolean boolean27 = worker18.equals((java.lang.Object) company20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1127");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = qualification5.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        boolean boolean13 = qualification5.equals((java.lang.Object) projectSet12);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) '#');
        qualification5.addWorker(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1128");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        worker11.setSalary((double) (byte) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1129");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification16.addWorker(worker24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification16.getWorkers();
        boolean boolean27 = qualification9.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company30.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 0L);
        qualification9.addWorker(worker38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker38.", company1.equals(worker38) == worker38.equals(company1));
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1130");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        java.lang.String str6 = qualification4.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company8.getQualifications();
        java.lang.String str15 = company8.getName();
        edu.colostate.cs415.model.Qualification qualification17 = company8.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company8.getAvailableWorkers();
        boolean boolean19 = qualification4.equals((java.lang.Object) workerSet18);
        java.lang.String str20 = qualification4.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        boolean boolean25 = company22.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        java.lang.String str28 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company22.getProjects();
        java.lang.String str30 = company22.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company22.getQualifications();
        boolean boolean32 = qualification4.equals((java.lang.Object) qualificationSet31);
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet31, (double) 0);
        org.junit.Assert.assertTrue("Contract failed: worker34.equals(worker34)", worker34.equals(worker34));
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1131");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        java.lang.String str18 = qualification15.toString();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification22.addWorker(worker30);
        java.lang.String str32 = qualification22.toString();
        boolean boolean33 = qualification15.equals((java.lang.Object) str32);
        boolean boolean35 = qualification15.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification15.getWorkers();
        boolean boolean37 = company2.equals((java.lang.Object) qualification15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet38, (double) (byte) 1);
        org.junit.Assert.assertTrue("Contract failed: worker40.equals(worker40)", worker40.equals(worker40));
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1132");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = company9.createWorker("hi!", qualificationSet22, (double) (short) 1);
        qualification7.addWorker(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1133");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification29.toDTO();
        java.lang.String str38 = qualification29.toString();
        java.lang.String str39 = qualification29.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification29.toDTO();
        java.lang.String str41 = qualification29.toString();
        worker25.addQualification(qualification29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1134");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.lang.String str10 = company1.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1135");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        company1.unassignAll(worker14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker14.", company1.equals(worker14) == worker14.equals(company1));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1136");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str11 = qualification10.toString();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) '#');
        qualification10.addWorker(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1137");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        edu.colostate.cs415.model.Qualification qualification16 = company13.createQualification("hi!:0:0:0:0");
        java.lang.String str17 = qualification16.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        java.lang.String str23 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company19.getProjects();
        java.lang.String str25 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company19.getEmployedWorkers();
        java.lang.String str27 = company19.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company19.getEmployedWorkers();
        boolean boolean29 = qualification16.equals((java.lang.Object) workerSet28);
        worker11.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1138");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.lang.String str14 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company18.getProjects();
        java.lang.String str28 = company18.getName();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        boolean boolean33 = company30.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company30.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        boolean boolean36 = company18.equals((java.lang.Object) projectSet35);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company18.getUnassignedWorkers();
        java.lang.String str39 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company18.getProjects();
        boolean boolean41 = company11.equals((java.lang.Object) company18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company18.getEmployedWorkers();
        boolean boolean43 = qualification9.equals((java.lang.Object) workerSet42);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification9 and company11.", qualification9.equals(company11) == company11.equals(qualification9));
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1139");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 1L);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1140");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.dto.WorkerDTO workerDTO15 = worker14.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1141");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification17.toDTO();
        worker11.addQualification(qualification17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1142");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 0L);
        qualification8.addWorker(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1143");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company7.getProjects();
        boolean boolean13 = company7.equals((java.lang.Object) (short) -1);
        boolean boolean14 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 10L);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1144");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.lang.String str35 = qualification34.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification34.toDTO();
        boolean boolean37 = worker9.equals((java.lang.Object) qualification34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1145");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, (double) ' ');
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification18.addWorker(worker19);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification18.getWorkers();
        boolean boolean22 = qualification13.equals((java.lang.Object) workerSet21);
        boolean boolean23 = worker7.equals((java.lang.Object) boolean22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1146");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        boolean boolean6 = company3.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 1L);
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet8, (double) '4');
        org.junit.Assert.assertTrue("Contract failed: worker12.equals(worker12)", worker12.equals(worker12));
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1147");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification16.addWorker(worker24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification16.getWorkers();
        boolean boolean27 = qualification9.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification32.equals((java.lang.Object) qualification37);
        edu.colostate.cs415.model.Worker worker40 = null;
        qualification37.addWorker(worker40);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean47 = qualification37.equals((java.lang.Object) workerSet46);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getEmployedWorkers();
        boolean boolean51 = qualification37.equals((java.lang.Object) company49);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company49.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet52, (double) 10.0f);
        qualification16.removeWorker(worker54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker54.", company1.equals(worker54) == worker54.equals(company1));
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1148");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification8.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company22.getProjects();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company31.getAssignedWorkers();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = company22.createWorker("hi!", qualificationSet38, (double) 100);
        qualification8.removeWorker(worker40);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker40.", company1.equals(worker40) == worker40.equals(company1));
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1149");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.lang.String str14 = qualification13.toString();
        java.lang.Object obj15 = null;
        boolean boolean16 = qualification13.equals(obj15);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company19.getProjects();
        edu.colostate.cs415.model.Qualification qualification23 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company19.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) '4');
        qualification13.addWorker(worker27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker27.", company1.equals(worker27) == worker27.equals(company1));
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1150");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        edu.colostate.cs415.model.Qualification qualification19 = company16.createQualification("hi!:0:0:0:0");
        java.lang.String str20 = company16.getName();
        boolean boolean21 = worker14.equals((java.lang.Object) company16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1151");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        boolean boolean40 = company36.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company36.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company36.getQualifications();
        java.lang.String str43 = company36.getName();
        java.lang.String str44 = company36.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company36.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet46, (double) (short) 1);
        company1.unassignAll(worker48);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1152");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet10, (double) (short) 1);
        org.junit.Assert.assertTrue("Contract failed: worker12.equals(worker12)", worker12.equals(worker12));
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1153");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet11, (double) ' ');
        qualification5.addWorker(worker13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker13.", company1.equals(worker13) == worker13.equals(company1));
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1154");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = worker9.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1155");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        java.lang.String str20 = company13.getName();
        java.lang.String str21 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) (short) 1);
        company1.unassignAll(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1156");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker14 = null;
        qualification10.addWorker(worker14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        boolean boolean22 = qualification10.equals((java.lang.Object) company17);
        boolean boolean23 = qualification5.equals((java.lang.Object) boolean22);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification5.toDTO();
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification5.addWorker(worker25);
        java.lang.String str27 = qualification5.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company34.getUnassignedWorkers();
        java.lang.String str38 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company34.getProjects();
        java.lang.String str40 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company34.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company34.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = company29.createWorker("hi!", qualificationSet44, 1.0d);
        qualification5.addWorker(worker46);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker46.", company1.equals(worker46) == worker46.equals(company1));
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1157");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification12 = company9.createQualification("hi!:0:0:0:0");
        java.lang.String str13 = qualification12.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company15.getProjects();
        java.lang.String str21 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getEmployedWorkers();
        java.lang.String str23 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company15.getEmployedWorkers();
        boolean boolean25 = qualification12.equals((java.lang.Object) workerSet24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification12.getWorkers();
        java.lang.String str27 = qualification12.toString();
        worker7.addQualification(qualification12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1158");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        worker14.setSalary((double) 1.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1159");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.lang.String str17 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getAssignedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification24.addWorker(worker25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str30 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company29.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company29.getEmployedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str38 = company37.toString();
        java.lang.String str39 = company37.toString();
        edu.colostate.cs415.model.Qualification qualification41 = company37.createQualification("hi!");
        boolean boolean42 = company29.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company29.createQualification("hi!");
        boolean boolean45 = qualification24.equals((java.lang.Object) qualification44);
        boolean boolean46 = company12.equals((java.lang.Object) qualification44);
        worker10.addQualification(qualification44);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1160");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        boolean boolean17 = company14.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.lang.String str20 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company14.getProjects();
        java.lang.String str22 = company14.getName();
        java.lang.String str23 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification11.removeWorker(worker26);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1161");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) '#');
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1162");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        boolean boolean28 = qualification3.equals((java.lang.Object) company23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company31.getProjects();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        boolean boolean44 = company40.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker49 = company31.createWorker("hi!", qualificationSet47, (double) 100);
        qualification3.addWorker(worker49);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker49.", company1.equals(worker49) == worker49.equals(company1));
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1163");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        edu.colostate.cs415.model.Qualification qualification18 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getUnassignedWorkers();
        boolean boolean22 = company1.equals((java.lang.Object) workerSet21);
        edu.colostate.cs415.model.Qualification qualification24 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification29.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification29.toDTO();
        java.lang.String str39 = qualification29.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.model.Worker worker51 = null;
        qualification43.addWorker(worker51);
        java.lang.String str53 = qualification43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification43.getWorkers();
        boolean boolean55 = qualification29.equals((java.lang.Object) qualification43);
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company57.getUnassignedWorkers();
        java.lang.String str61 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company57.getProjects();
        java.lang.String str63 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company57.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company57.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification74.getWorkers();
        boolean boolean76 = qualification69.equals((java.lang.Object) qualification74);
        edu.colostate.cs415.model.Worker worker77 = null;
        qualification74.addWorker(worker77);
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification82 = company80.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = qualification82.getWorkers();
        boolean boolean84 = qualification74.equals((java.lang.Object) workerSet83);
        edu.colostate.cs415.model.Company company86 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company86.getEmployedWorkers();
        boolean boolean88 = qualification74.equals((java.lang.Object) company86);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet89 = company86.getQualifications();
        boolean boolean90 = company57.equals((java.lang.Object) company86);
        boolean boolean91 = qualification29.equals((java.lang.Object) company86);
        edu.colostate.cs415.model.Qualification qualification93 = company86.createQualification("hi!:0:0:0:0");
        java.lang.String str94 = company86.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet95 = company86.getQualifications();
        edu.colostate.cs415.model.Worker worker97 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet95, (double) 0);
        company1.unassignAll(worker97);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker97.", company1.equals(worker97) == worker97.equals(company1));
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1164");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.lang.Object obj17 = null;
        boolean boolean18 = qualification16.equals(obj17);
        worker10.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1165");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, 0.0d);
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet6, (double) 100.0f);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1166");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        worker14.setSalary((double) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1167");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        boolean boolean15 = company12.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1L);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1168");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification20.toDTO();
        boolean boolean23 = qualification20.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification20.addWorker(worker24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company27.createQualification("hi!");
        boolean boolean32 = qualification20.equals((java.lang.Object) company27);
        boolean boolean33 = qualification15.equals((java.lang.Object) boolean32);
        edu.colostate.cs415.model.Qualification qualification35 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification35.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getAvailableWorkers();
        boolean boolean41 = qualification35.equals((java.lang.Object) workerSet40);
        boolean boolean42 = qualification15.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getUnavailableWorkers();
        boolean boolean47 = company44.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company44.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company44.getQualifications();
        boolean boolean50 = qualification15.equals((java.lang.Object) company44);
        java.lang.String str51 = company44.getName();
        boolean boolean52 = worker9.equals((java.lang.Object) company44);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1169");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str75 = company74.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet76 = company74.getProjects();
        edu.colostate.cs415.model.Qualification qualification78 = company74.createQualification("hi!");
        edu.colostate.cs415.model.Company company80 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification82 = company80.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company80.getUnassignedWorkers();
        java.lang.String str84 = company80.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet85 = company80.getAssignedWorkers();
        boolean boolean86 = qualification78.equals((java.lang.Object) company80);
        worker72.addQualification(qualification78);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1170");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet14, (double) 100);
        org.junit.Assert.assertTrue("Contract failed: worker16.equals(worker16)", worker16.equals(worker16));
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1171");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        worker14.setSalary((double) (short) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1172");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        java.lang.String str15 = worker14.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1173");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.dto.WorkerDTO workerDTO49 = worker48.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1174");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.lang.String str19 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.lang.String str21 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        boolean boolean34 = company13.equals((java.lang.Object) qualification26);
        worker11.addQualification(qualification26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1175");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet10, (double) '#');
        org.junit.Assert.assertTrue("Contract failed: worker12.equals(worker12)", worker12.equals(worker12));
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1176");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 0L);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1177");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        boolean boolean12 = qualification5.equals((java.lang.Object) qualification10);
        edu.colostate.cs415.model.Worker worker13 = null;
        qualification10.addWorker(worker13);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification10.equals((java.lang.Object) workerSet19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getEmployedWorkers();
        boolean boolean24 = qualification10.equals((java.lang.Object) company22);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 10.0f);
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet25, 10.0d);
        org.junit.Assert.assertTrue("Contract failed: worker29.equals(worker29)", worker29.equals(worker29));
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1178");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet12, (double) 10L);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1179");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        boolean boolean34 = company2.equals((java.lang.Object) qualification33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet37, (double) 100);
        org.junit.Assert.assertTrue("Contract failed: worker39.equals(worker39)", worker39.equals(worker39));
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1180");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company17.getProjects();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getAssignedWorkers();
        boolean boolean23 = company9.equals((java.lang.Object) workerSet22);
        edu.colostate.cs415.model.Qualification qualification25 = company9.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification30.toDTO();
        boolean boolean33 = qualification30.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification37.equals((java.lang.Object) qualification42);
        boolean boolean45 = qualification30.equals((java.lang.Object) boolean44);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification30.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification30.getWorkers();
        java.lang.String str48 = qualification30.toString();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company50.getUnavailableWorkers();
        boolean boolean53 = company50.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company50.getAvailableWorkers();
        boolean boolean55 = qualification30.equals((java.lang.Object) workerSet54);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification30.getWorkers();
        java.lang.String str57 = qualification30.toString();
        boolean boolean58 = qualification25.equals((java.lang.Object) qualification30);
        worker7.addQualification(qualification30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1181");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company15.getProjects();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getAssignedWorkers();
        boolean boolean21 = company11.equals((java.lang.Object) company15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) (byte) 10);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1182");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker8 = null;
        qualification7.addWorker(worker8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification7.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification15.toDTO();
        java.lang.String str25 = qualification15.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification29.addWorker(worker37);
        java.lang.String str39 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification29.getWorkers();
        boolean boolean41 = qualification15.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean62 = qualification55.equals((java.lang.Object) qualification60);
        edu.colostate.cs415.model.Worker worker63 = null;
        qualification60.addWorker(worker63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean70 = qualification60.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getEmployedWorkers();
        boolean boolean74 = qualification60.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company72.getQualifications();
        boolean boolean76 = company43.equals((java.lang.Object) company72);
        boolean boolean77 = qualification15.equals((java.lang.Object) company72);
        edu.colostate.cs415.model.Qualification qualification79 = company72.createQualification("hi!:0:0:0:0");
        java.lang.String str80 = company72.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = company72.getQualifications();
        edu.colostate.cs415.model.Worker worker83 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet81, (double) 0);
        qualification7.removeWorker(worker83);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification79.", company1.equals(qualification79) == qualification79.equals(company1));
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1183");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) ' ');
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1184");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company7.getProjects();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getAssignedWorkers();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = company7.createWorker("hi!", qualificationSet23, (double) 100);
        company1.unassignAll(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1185");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = company3.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) (byte) 10);
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) (byte) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company3 and worker16.", company3.equals(worker16) == worker16.equals(company3));
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1186");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getEmployedWorkers();
        boolean boolean26 = worker18.equals((java.lang.Object) workerSet25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1187");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.lang.String str9 = company2.toString();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet11, (double) ' ');
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1188");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company18.getUnassignedWorkers();
        boolean boolean23 = worker16.equals((java.lang.Object) company18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1189");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        java.lang.String str17 = qualification9.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification9.toDTO();
        java.lang.String str19 = qualification9.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification23.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Worker worker31 = null;
        qualification23.addWorker(worker31);
        java.lang.String str33 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification23.getWorkers();
        boolean boolean35 = qualification9.equals((java.lang.Object) qualification23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str39 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification42 = company38.createQualification("hi!");
        java.lang.Object obj43 = null;
        boolean boolean44 = company38.equals(obj43);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company46.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company46.getProjects();
        java.lang.String str50 = company46.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company46.getAssignedWorkers();
        boolean boolean52 = company38.equals((java.lang.Object) workerSet51);
        boolean boolean53 = qualification9.equals((java.lang.Object) company38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification9.getWorkers();
        boolean boolean55 = qualification5.equals((java.lang.Object) workerSet54);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification60.equals((java.lang.Object) qualification65);
        edu.colostate.cs415.model.Worker worker68 = null;
        qualification65.addWorker(worker68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification73 = company71.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = qualification73.getWorkers();
        boolean boolean75 = qualification65.equals((java.lang.Object) workerSet74);
        edu.colostate.cs415.model.Company company77 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company77.getEmployedWorkers();
        boolean boolean79 = qualification65.equals((java.lang.Object) company77);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company77.getQualifications();
        edu.colostate.cs415.model.Worker worker82 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet80, (double) 10.0f);
        qualification5.addWorker(worker82);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker82.", company1.equals(worker82) == worker82.equals(company1));
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1190");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        java.lang.String str14 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        worker9.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1191");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company50.getUnassignedWorkers();
        java.lang.String str54 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company50.getEmployedWorkers();
        boolean boolean57 = company50.equals((java.lang.Object) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company50.getUnavailableWorkers();
        java.lang.String str59 = company50.getName();
        boolean boolean60 = worker48.equals((java.lang.Object) company50);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1192");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.lang.String str15 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        boolean boolean17 = worker8.equals((java.lang.Object) company10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1193");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        boolean boolean49 = worker48.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1194");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        company1.unassignAll(worker14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker14.", company1.equals(worker14) == worker14.equals(company1));
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1195");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean32 = qualification29.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        boolean boolean44 = qualification29.equals((java.lang.Object) boolean43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getAssignedWorkers();
        boolean boolean50 = company47.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company47.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company47.getUnassignedWorkers();
        boolean boolean53 = qualification29.equals((java.lang.Object) workerSet52);
        worker25.addQualification(qualification29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1196");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company29.createQualification("hi!");
        boolean boolean37 = worker8.equals((java.lang.Object) "hi!");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1197");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification26.addWorker(worker29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification26.equals((java.lang.Object) workerSet35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getEmployedWorkers();
        boolean boolean40 = qualification26.equals((java.lang.Object) company38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 10.0f);
        qualification3.addWorker(worker43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker43.", company1.equals(worker43) == worker43.equals(company1));
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1198");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company10.getProjects();
        java.lang.String str20 = company10.getName();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        boolean boolean25 = company22.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        boolean boolean28 = company10.equals((java.lang.Object) projectSet27);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company10.getUnassignedWorkers();
        java.lang.String str31 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company10.getProjects();
        boolean boolean33 = company1.equals((java.lang.Object) projectSet32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.lang.String str35 = company1.toString();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = company1.createWorker("hi!:0:0:0:0", qualificationSet41, (double) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: worker43.equals(worker43)", worker43.equals(worker43));
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1199");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.getName();
        edu.colostate.cs415.model.Qualification qualification31 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification31.addWorker(worker32);
        java.lang.String str34 = qualification31.toString();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification38.toDTO();
        boolean boolean41 = qualification38.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean52 = qualification45.equals((java.lang.Object) qualification50);
        boolean boolean53 = qualification38.equals((java.lang.Object) boolean52);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification38.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification38.getWorkers();
        java.lang.String str56 = qualification38.toString();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company58.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification62 = company58.createQualification("hi!");
        boolean boolean63 = qualification38.equals((java.lang.Object) company58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification38.toDTO();
        boolean boolean65 = qualification31.equals((java.lang.Object) qualification38);
        worker26.addQualification(qualification38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1200");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification15.toDTO();
        java.lang.String str25 = qualification15.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification29.addWorker(worker37);
        java.lang.String str39 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification29.getWorkers();
        boolean boolean41 = qualification15.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean62 = qualification55.equals((java.lang.Object) qualification60);
        edu.colostate.cs415.model.Worker worker63 = null;
        qualification60.addWorker(worker63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean70 = qualification60.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getEmployedWorkers();
        boolean boolean74 = qualification60.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company72.getQualifications();
        boolean boolean76 = company43.equals((java.lang.Object) company72);
        boolean boolean77 = qualification15.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification15.getWorkers();
        java.lang.String str79 = qualification15.toString();
        worker11.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1201");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        java.lang.String str13 = worker12.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1202");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        java.lang.String str24 = qualification16.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification16.toDTO();
        java.lang.String str26 = qualification16.toString();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification30.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification30.addWorker(worker38);
        java.lang.String str40 = qualification30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification30.getWorkers();
        boolean boolean42 = qualification16.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company44.getUnassignedWorkers();
        java.lang.String str48 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company44.getProjects();
        java.lang.String str50 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company44.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company44.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        boolean boolean63 = qualification56.equals((java.lang.Object) qualification61);
        edu.colostate.cs415.model.Worker worker64 = null;
        qualification61.addWorker(worker64);
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        boolean boolean71 = qualification61.equals((java.lang.Object) workerSet70);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company73.getEmployedWorkers();
        boolean boolean75 = qualification61.equals((java.lang.Object) company73);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company73.getQualifications();
        boolean boolean77 = company44.equals((java.lang.Object) company73);
        boolean boolean78 = qualification16.equals((java.lang.Object) company73);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = qualification16.getWorkers();
        worker12.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1203");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = company2.createWorker("hi!", qualificationSet15, (double) (short) 1);
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet15, (double) (short) 100);
        org.junit.Assert.assertTrue("Contract failed: worker19.equals(worker19)", worker19.equals(worker19));
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1204");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Qualification qualification21 = company7.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        java.lang.String str32 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAssignedWorkers();
        boolean boolean34 = company24.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) (byte) 10);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification21.removeWorker(worker37);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1205");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification30.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification35.addWorker(worker38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification35.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getEmployedWorkers();
        boolean boolean49 = qualification35.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company47.getQualifications();
        boolean boolean51 = company18.equals((java.lang.Object) company47);
        boolean boolean52 = qualification16.equals((java.lang.Object) company18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company55.getUnassignedWorkers();
        java.lang.String str59 = company55.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company55.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company55.getEmployedWorkers();
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet68 = company65.getQualifications();
        edu.colostate.cs415.model.Worker worker70 = company55.createWorker("hi!", qualificationSet68, (double) (short) 1);
        qualification16.addWorker(worker70);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker70.", company1.equals(worker70) == worker70.equals(company1));
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1206");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company7.getProjects();
        boolean boolean13 = company7.equals((java.lang.Object) (short) -1);
        boolean boolean14 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getUnavailableWorkers();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 1L);
        company1.unassignAll(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1207");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1208");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary(1.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1209");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification23.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification23.getWorkers();
        worker19.addQualification(qualification23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1210");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        boolean boolean16 = worker15.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1211");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company10.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification16.addWorker(worker17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification16.getWorkers();
        worker8.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1212");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.getName();
        edu.colostate.cs415.model.Qualification qualification19 = company16.createQualification("hi!");
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str22 = company21.toString();
        boolean boolean23 = qualification19.equals((java.lang.Object) str22);
        java.lang.String str24 = qualification19.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification19.toDTO();
        worker14.addQualification(qualification19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1213");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        double double12 = worker11.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1214");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = company1.equals((java.lang.Object) str7);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, 0.0d);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1215");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1216");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary((double) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1217");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        worker25.setSalary((double) 0L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1218");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, (double) ' ');
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        java.lang.String str19 = qualification11.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification11.toDTO();
        java.lang.String str21 = qualification11.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification25.addWorker(worker33);
        java.lang.String str35 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification25.getWorkers();
        boolean boolean37 = qualification11.equals((java.lang.Object) qualification25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str41 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        java.lang.Object obj45 = null;
        boolean boolean46 = company40.equals(obj45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company48.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company48.getProjects();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company48.getAssignedWorkers();
        boolean boolean54 = company40.equals((java.lang.Object) workerSet53);
        boolean boolean55 = qualification11.equals((java.lang.Object) company40);
        java.lang.String str56 = qualification11.toString();
        worker7.addQualification(qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1219");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getEmployedWorkers();
        java.lang.String str27 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company18.getAssignedWorkers();
        boolean boolean29 = company9.equals((java.lang.Object) workerSet28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company1.createWorker("hi!:0:0:0:0:0:0", qualificationSet30, (double) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: worker32.equals(worker32)", worker32.equals(worker32));
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1220");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company74.getUnassignedWorkers();
        java.lang.String str78 = company74.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet79 = company74.getProjects();
        java.lang.Object obj80 = null;
        boolean boolean81 = company74.equals(obj80);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company74.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company74.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification85 = company74.createQualification("hi!");
        worker72.addQualification(qualification85);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1221");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        double double11 = worker10.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1222");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = worker48.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1223");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        boolean boolean15 = worker14.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1224");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.dto.WorkerDTO workerDTO13 = worker12.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1225");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        java.lang.String str15 = worker14.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1226");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        worker72.setSalary((double) 1L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1227");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = worker14.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1228");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        java.lang.String str15 = worker14.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1229");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 10L);
        qualification7.addWorker(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1230");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        java.lang.String str16 = worker15.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1231");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.getName();
        edu.colostate.cs415.model.Qualification qualification13 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnassignedWorkers();
        java.lang.String str15 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        boolean boolean17 = worker8.equals((java.lang.Object) company10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1232");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.lang.Class<?> wildcardClass14 = company9.getClass();
        boolean boolean15 = company1.equals((java.lang.Object) wildcardClass14);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str19 = company18.toString();
        java.lang.String str20 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company18.getProjects();
        java.lang.String str23 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company18.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) (short) 0);
        company1.unassignAll(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1233");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        java.lang.String str7 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getAssignedWorkers();
        boolean boolean22 = company12.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) (byte) 10);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker25);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1234");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company5.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company5.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getUnavailableWorkers();
        boolean boolean13 = company5.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company5.getEmployedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) workerSet14);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet16, 0.0d);
        org.junit.Assert.assertTrue("Contract failed: worker18.equals(worker18)", worker18.equals(worker18));
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1235");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification21.toDTO();
        worker12.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1236");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 0L);
        qualification11.addWorker(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1237");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company35.getEmployedWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company45.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company35.createWorker("hi!", qualificationSet48, (double) (short) 1);
        qualification32.addWorker(worker50);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker50.", company1.equals(worker50) == worker50.equals(company1));
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1238");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet14, (double) 1);
        org.junit.Assert.assertTrue("Contract failed: worker16.equals(worker16)", worker16.equals(worker16));
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1239");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        int int15 = worker14.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1240");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.lang.String str16 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) (short) 0);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker23);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1241");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company12.getProjects();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getAssignedWorkers();
        java.lang.String str27 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = company12.createWorker("hi!", qualificationSet28, (double) 100);
        qualification10.addWorker(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1242");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnassignedWorkers();
        java.lang.String str22 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        boolean boolean30 = company27.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company27.getQualifications();
        java.lang.String str33 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company27.getProjects();
        java.lang.String str35 = company27.getName();
        java.lang.String str36 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 10L);
        company1.unassignAll(worker39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker39.", company1.equals(worker39) == worker39.equals(company1));
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1243");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 10L);
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1244");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        boolean boolean16 = qualification9.equals((java.lang.Object) company12);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 1L);
        qualification9.addWorker(worker27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker27.", company1.equals(worker27) == worker27.equals(company1));
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1245");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker13 = null;
        qualification12.addWorker(worker13);
        boolean boolean16 = qualification12.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification12.getWorkers();
        boolean boolean18 = company1.equals((java.lang.Object) qualification12);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.toString();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company20.getProjects();
        java.lang.String str25 = company20.toString();
        boolean boolean26 = qualification12.equals((java.lang.Object) str25);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.lang.String str33 = company29.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company29.getEmployedWorkers();
        java.lang.String str35 = company29.getName();
        java.lang.String str36 = company29.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 10.0f);
        qualification12.addWorker(worker39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker39.", company1.equals(worker39) == worker39.equals(company1));
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1246");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        java.lang.String str49 = worker48.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1247");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1248");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        java.lang.String str49 = worker48.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1249");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 1L);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1250");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        boolean boolean12 = worker11.isAvailable();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1251");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company17.getProjects();
        java.lang.String str26 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company17.getQualifications();
        boolean boolean30 = worker15.equals((java.lang.Object) qualificationSet29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1252");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification24 = company16.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str25 = company16.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company16.getAssignedWorkers();
        boolean boolean29 = worker14.equals((java.lang.Object) workerSet28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1253");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        java.lang.String str13 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getEmployedWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) workerSet14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification8 and company10.", qualification8.equals(company10) == company10.equals(qualification8));
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1254");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        java.lang.String str16 = qualification13.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = qualification13.equals((java.lang.Object) str30);
        java.lang.String str32 = qualification13.toString();
        boolean boolean33 = company1.equals((java.lang.Object) str32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet43, 0.0d);
        company1.unassignAll(worker45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker45.", company1.equals(worker45) == worker45.equals(company1));
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1255");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        worker14.setSalary((double) 10L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1256");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        java.lang.String str15 = worker14.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1257");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        java.lang.String str23 = qualification3.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str27 = company26.toString();
        java.lang.String str28 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company26.getProjects();
        java.lang.String str31 = company26.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company26.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company26.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) (short) 0);
        qualification3.addWorker(worker38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker38.", company1.equals(worker38) == worker38.equals(company1));
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1258");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.lang.String str17 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getEmployedWorkers();
        java.lang.String str20 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company11.getAssignedWorkers();
        boolean boolean22 = company2.equals((java.lang.Object) workerSet21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet23, (double) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: worker25.equals(worker25)", worker25.equals(worker25));
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1259");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = worker11.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1260");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification26 = company20.createQualification("hi!:0:0");
        java.lang.String str27 = company20.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification26.", company1.equals(qualification26) == qualification26.equals(company1));
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1261");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company41.getProjects();
        boolean boolean44 = qualification39.equals((java.lang.Object) projectSet43);
        worker14.addQualification(qualification39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1262");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        qualification3.addWorker(worker4);
        boolean boolean7 = qualification3.equals((java.lang.Object) "hi!");
        java.lang.String str8 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, 0.0d);
        qualification3.addWorker(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1263");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.Object obj13 = null;
        boolean boolean14 = company7.equals(obj13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getAvailableWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company22.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company22.getEmployedWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company33.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company33.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company37.getQualifications();
        boolean boolean44 = company33.equals((java.lang.Object) qualificationSet43);
        edu.colostate.cs415.model.Worker worker46 = company22.createWorker("hi!", qualificationSet43, 100.0d);
        company7.unassignAll(worker46);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker46.", company1.equals(worker46) == worker46.equals(company1));
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1264");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 'a');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification9.removeWorker(worker20);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1265");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.dto.WorkerDTO workerDTO16 = worker15.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1266");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        worker11.setSalary((double) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1267");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification27.addWorker(worker30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification27.equals((java.lang.Object) workerSet36);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        boolean boolean41 = qualification27.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company39.getProjects();
        edu.colostate.cs415.model.Qualification qualification46 = company39.createQualification("hi!");
        java.lang.String str47 = qualification46.toString();
        worker18.addQualification(qualification46);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1268");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.lang.String str6 = company3.getName();
        boolean boolean7 = qualification1.equals((java.lang.Object) str6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification1.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification1.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) ' ');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification1.removeWorker(worker17);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1269");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        double double12 = worker11.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1270");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification21.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company29.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company29.getProjects();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification36.addWorker(worker44);
        java.lang.String str46 = qualification36.toString();
        boolean boolean47 = company29.equals((java.lang.Object) qualification36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification36.getWorkers();
        java.lang.String str49 = qualification36.toString();
        boolean boolean50 = qualification21.equals((java.lang.Object) str49);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO55 = qualification54.toDTO();
        boolean boolean57 = qualification54.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker58 = null;
        qualification54.addWorker(worker58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company61.getProjects();
        edu.colostate.cs415.model.Qualification qualification65 = company61.createQualification("hi!");
        boolean boolean66 = qualification54.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company61.getAssignedWorkers();
        java.lang.Class<?> wildcardClass68 = company61.getClass();
        boolean boolean69 = qualification21.equals((java.lang.Object) company61);
        worker15.addQualification(qualification21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1271");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.lang.String str26 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getEmployedWorkers();
        boolean boolean28 = qualification3.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        boolean boolean35 = company31.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 10L);
        qualification3.addWorker(worker38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker38.", company1.equals(worker38) == worker38.equals(company1));
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1272");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        worker9.setSalary((double) 'a');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1273");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        worker19.setSalary((double) 'a');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1274");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean21 = qualification18.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        boolean boolean33 = qualification18.equals((java.lang.Object) boolean32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification18.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification18.getWorkers();
        java.lang.String str36 = qualification18.toString();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        boolean boolean41 = company38.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company38.getAvailableWorkers();
        boolean boolean43 = qualification18.equals((java.lang.Object) workerSet42);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification18.getWorkers();
        boolean boolean45 = worker14.equals((java.lang.Object) qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1275");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        worker15.setSalary(1.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1276");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification19.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification19.equals((java.lang.Object) workerSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        boolean boolean33 = qualification19.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        boolean boolean35 = company2.equals((java.lang.Object) company31);
        java.lang.String str36 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet37, 0.0d);
        org.junit.Assert.assertTrue("Contract failed: worker39.equals(worker39)", worker39.equals(worker39));
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1277");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = worker15.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1278");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        int int49 = worker48.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1279");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.getName();
        edu.colostate.cs415.model.Qualification qualification30 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getUnassignedWorkers();
        java.lang.String str32 = company27.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company27.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass34 = company27.getClass();
        boolean boolean35 = worker25.equals((java.lang.Object) wildcardClass34);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1280");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) ' ');
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet6, (double) 1);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1281");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company3.getUnavailableWorkers();
        boolean boolean6 = company3.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.lang.String str9 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company3.getProjects();
        java.lang.String str11 = company3.getName();
        java.lang.String str12 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 10L);
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet13, (double) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: worker17.equals(worker17)", worker17.equals(worker17));
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1282");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification18 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company13.getProjects();
        java.lang.String str20 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company13.getQualifications();
        boolean boolean22 = company2.equals((java.lang.Object) qualificationSet21);
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet21, (double) 12);
        org.junit.Assert.assertTrue("Contract failed: worker24.equals(worker24)", worker24.equals(worker24));
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1283");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 10.0f);
        company1.unassignAll(worker33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker33.", company1.equals(worker33) == worker33.equals(company1));
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1284");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        boolean boolean27 = qualification12.equals((java.lang.Object) boolean26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification12.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification12.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification12.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification12.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification12.getWorkers();
        boolean boolean33 = company1.equals((java.lang.Object) workerSet32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification8.", company1.equals(qualification8) == qualification8.equals(company1));
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1285");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str24 = company23.toString();
        java.lang.String str25 = company23.toString();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        java.lang.String str28 = company23.getName();
        java.lang.String str29 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getUnavailableWorkers();
        boolean boolean31 = qualification8.equals((java.lang.Object) company23);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company38.getUnassignedWorkers();
        java.lang.String str42 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company38.getProjects();
        java.lang.String str44 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company38.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company38.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company33.createWorker("hi!", qualificationSet48, 1.0d);
        qualification8.removeWorker(worker50);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker50.", company1.equals(worker50) == worker50.equals(company1));
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1286");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = worker12.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1287");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker8 = null;
        qualification7.addWorker(worker8);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.lang.Object obj17 = null;
        boolean boolean18 = company12.equals(obj17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 100.0f);
        qualification7.addWorker(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1288");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '#');
        company1.unassignAll(worker12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker12.", company1.equals(worker12) == worker12.equals(company1));
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1289");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        boolean boolean32 = qualification29.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification29.addWorker(worker33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company36.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company36.createQualification("hi!");
        boolean boolean41 = qualification29.equals((java.lang.Object) company36);
        boolean boolean43 = qualification29.equals((java.lang.Object) 10L);
        worker25.addQualification(qualification29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1290");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        double double15 = worker14.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1291");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 'a');
        company20.unassignAll(worker35);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker35.", company1.equals(worker35) == worker35.equals(company1));
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1292");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        worker14.setSalary((double) (short) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1293");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.lang.String str19 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = company8.createWorker("hi!", qualificationSet23, 1.0d);
        qualification6.addWorker(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1294");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = company13.createWorker("hi!", qualificationSet28, 1.0d);
        company1.unassignAll(worker30);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker30.", company1.equals(worker30) == worker30.equals(company1));
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1295");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        java.lang.String str16 = company1.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = company18.createWorker("hi!", qualificationSet31, (double) (short) 1);
        company1.unassignAll(worker33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker33.", company1.equals(worker33) == worker33.equals(company1));
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1296");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        java.lang.String str16 = qualification13.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = qualification13.equals((java.lang.Object) str30);
        boolean boolean33 = qualification13.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company36.getUnassignedWorkers();
        java.lang.String str40 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company36.getProjects();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company36.getEmployedWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str46 = company45.toString();
        java.lang.String str47 = company45.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company45.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company45.getUnavailableWorkers();
        boolean boolean50 = company36.equals((java.lang.Object) company45);
        boolean boolean51 = qualification13.equals((java.lang.Object) boolean50);
        java.lang.String str52 = qualification13.toString();
        boolean boolean53 = company1.equals((java.lang.Object) str52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company55.getUnassignedWorkers();
        java.lang.String str59 = company55.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company55.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company55.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company55.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company55.getEmployedWorkers();
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet67 = company66.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company66.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        boolean boolean74 = company70.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company70.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company70.getQualifications();
        boolean boolean77 = company66.equals((java.lang.Object) qualificationSet76);
        edu.colostate.cs415.model.Worker worker79 = company55.createWorker("hi!", qualificationSet76, 100.0d);
        company1.unassignAll(worker79);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker79.", company1.equals(worker79) == worker79.equals(company1));
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1297");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = company10.createWorker("hi!", qualificationSet23, (double) (short) 1);
        qualification7.addWorker(worker25);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1298");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = company10.createWorker("hi!", qualificationSet23, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification8.removeWorker(worker25);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1299");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 0L);
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1300");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getAssignedWorkers();
        java.lang.String str26 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company11.createWorker("hi!", qualificationSet27, (double) 100);
        company1.unassignAll(worker29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker29.", company1.equals(worker29) == worker29.equals(company1));
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1301");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company16.getProjects();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company11.createWorker("hi!", qualificationSet26, 1.0d);
        company1.unassignAll(worker28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker28.", company1.equals(worker28) == worker28.equals(company1));
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1302");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, (double) ' ');
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        java.lang.String str19 = qualification16.toString();
        java.lang.String str20 = qualification16.toString();
        worker7.addQualification(qualification16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1303");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.lang.String str13 = company1.getName();
        java.lang.String str14 = company1.getName();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        java.lang.String str27 = qualification19.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification19.toDTO();
        java.lang.String str29 = qualification19.toString();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification33.equals((java.lang.Object) qualification38);
        edu.colostate.cs415.model.Worker worker41 = null;
        qualification33.addWorker(worker41);
        java.lang.String str43 = qualification33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification33.getWorkers();
        boolean boolean45 = qualification19.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company47.getUnassignedWorkers();
        java.lang.String str51 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company47.getProjects();
        java.lang.String str53 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company47.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company47.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        boolean boolean66 = qualification59.equals((java.lang.Object) qualification64);
        edu.colostate.cs415.model.Worker worker67 = null;
        qualification64.addWorker(worker67);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification72.getWorkers();
        boolean boolean74 = qualification64.equals((java.lang.Object) workerSet73);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company76.getEmployedWorkers();
        boolean boolean78 = qualification64.equals((java.lang.Object) company76);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = company76.getQualifications();
        boolean boolean80 = company47.equals((java.lang.Object) company76);
        boolean boolean81 = qualification19.equals((java.lang.Object) company76);
        edu.colostate.cs415.model.Qualification qualification83 = company76.createQualification("hi!:0:0:0:0");
        java.lang.String str84 = company76.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = company76.getQualifications();
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet85, (double) 0);
        company1.unassignAll(worker87);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker87.", company1.equals(worker87) == worker87.equals(company1));
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1304");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean11 = company1.equals((java.lang.Object) qualificationDTO10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.lang.String str13 = company1.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) '4');
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1305");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, 0.0d);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1306");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification10.", company1.equals(qualification10) == qualification10.equals(company1));
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1307");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company74.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet76 = company74.getProjects();
        edu.colostate.cs415.model.Qualification qualification78 = company74.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str79 = qualification78.toString();
        boolean boolean80 = worker72.equals((java.lang.Object) qualification78);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1308");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        java.lang.String str31 = qualification3.toString();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str35 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getAssignedWorkers();
        java.lang.String str37 = company34.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company34.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0.0f);
        qualification3.addWorker(worker43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker43.", company1.equals(worker43) == worker43.equals(company1));
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1309");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        worker18.setSalary(10.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1310");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company14.getProjects();
        java.lang.String str19 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company14.getProjects();
        java.lang.Class<?> wildcardClass21 = company14.getClass();
        boolean boolean22 = worker12.equals((java.lang.Object) wildcardClass21);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1311");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification5.", company1.equals(qualification5) == qualification5.equals(company1));
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1312");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 10L);
        company1.unassignAll(worker31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1313");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet9, (double) 100.0f);
        org.junit.Assert.assertTrue("Contract failed: worker11.equals(worker11)", worker11.equals(worker11));
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1314");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification39.toDTO();
        java.lang.String str41 = qualification39.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification39.toDTO();
        boolean boolean43 = worker14.equals((java.lang.Object) qualification39);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1315");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = worker14.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1316");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company16.getProjects();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getEmployedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str26 = company25.toString();
        java.lang.String str27 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company25.getUnavailableWorkers();
        boolean boolean30 = company16.equals((java.lang.Object) company25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company25.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification33 = company25.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification33.getWorkers();
        worker14.addQualification(qualification33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1317");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1318");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0L);
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet9, (double) (short) 10);
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1319");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getAssignedWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company13.getQualifications();
        java.lang.String str18 = company13.getName();
        java.lang.String str19 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getUnassignedWorkers();
        boolean boolean21 = worker11.equals((java.lang.Object) workerSet20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1320");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company13.createWorker("hi!", qualificationSet26, (double) (short) 1);
        boolean boolean29 = worker11.equals((java.lang.Object) (short) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1321");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        boolean boolean17 = company14.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification19 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification19.toDTO();
        worker12.addQualification(qualification19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1322");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = qualification5.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getAssignedWorkers();
        java.lang.String str20 = company17.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 0.0f);
        company7.unassignAll(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1323");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company1.getQualifications();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company15.getProjects();
        java.lang.String str21 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company15.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification27.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification32.addWorker(worker35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean42 = qualification32.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getEmployedWorkers();
        boolean boolean46 = qualification32.equals((java.lang.Object) company44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company44.getQualifications();
        boolean boolean48 = company15.equals((java.lang.Object) company44);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        boolean boolean55 = company51.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company51.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company51.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company51.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company51.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company51.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = company15.createWorker("hi!", qualificationSet60, (double) 100.0f);
        company1.unassignAll(worker62);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker62.", company1.equals(worker62) == worker62.equals(company1));
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1324");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker9 = null;
        qualification8.addWorker(worker9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 'a');
        qualification8.removeWorker(worker22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker22.", company1.equals(worker22) == worker22.equals(company1));
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1325");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        java.lang.String str11 = worker10.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1326");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.lang.Object obj21 = null;
        boolean boolean22 = company16.equals(obj21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 100.0f);
        company1.unassignAll(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1327");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        java.lang.String str29 = qualification21.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification21.toDTO();
        boolean boolean31 = qualification3.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str35 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company34.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company34.getUnavailableWorkers();
        java.lang.String str40 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 1L);
        qualification3.addWorker(worker43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker43.", company1.equals(worker43) == worker43.equals(company1));
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1328");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str11 = qualification10.toString();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getAssignedWorkers();
        boolean boolean17 = company14.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 12);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification10.removeWorker(worker20);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1329");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        boolean boolean24 = qualification9.equals((java.lang.Object) boolean23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification9.getWorkers();
        java.lang.String str27 = qualification9.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getAvailableWorkers();
        boolean boolean34 = qualification9.equals((java.lang.Object) workerSet33);
        boolean boolean35 = qualification5.equals((java.lang.Object) boolean34);
        java.lang.String str36 = qualification5.toString();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        java.lang.String str43 = company38.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company38.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification47 = company38.createQualification("hi!:0:0:0:0");
        java.lang.String str48 = company38.getName();
        boolean boolean49 = qualification5.equals((java.lang.Object) company38);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification47.", company1.equals(qualification47) == qualification47.equals(company1));
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1330");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        boolean boolean24 = company21.equals((java.lang.Object) "");
        java.lang.String str25 = company21.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getEmployedWorkers();
        java.lang.String str27 = company21.getName();
        java.lang.String str28 = company21.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 10.0f);
        qualification9.addWorker(worker31);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker31.", company1.equals(worker31) == worker31.equals(company1));
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1331");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification20.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company25.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        java.lang.String str29 = company25.toString();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getUnassignedWorkers();
        java.lang.String str35 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.Object obj37 = null;
        boolean boolean38 = company31.equals(obj37);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company31.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company31.getAvailableWorkers();
        boolean boolean41 = company25.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company31.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company31.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company31.getEmployedWorkers();
        boolean boolean45 = qualification20.equals((java.lang.Object) company31);
        worker11.addQualification(qualification20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1332");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (short) 10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company3 and worker11.", company3.equals(worker11) == worker11.equals(company3));
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1333");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str23 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company22.getUnavailableWorkers();
        boolean boolean25 = company13.equals((java.lang.Object) workerSet24);
        boolean boolean26 = worker11.equals((java.lang.Object) company13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1334");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet12, (double) 10);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1335");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = worker15.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1336");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification13.", company1.equals(qualification13) == qualification13.equals(company1));
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1337");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        int int15 = worker14.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1338");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        worker12.setSalary((double) (short) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1339");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification39.toDTO();
        java.lang.String str41 = qualification39.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification39.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification39.getWorkers();
        java.lang.Class<?> wildcardClass44 = workerSet43.getClass();
        boolean boolean45 = worker14.equals((java.lang.Object) workerSet43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1340");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0L);
        worker10.setSalary(10.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1341");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.lang.String str17 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company11.getProjects();
        java.lang.String str19 = company11.getName();
        java.lang.String str20 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 10L);
        company1.unassignAll(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1342");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 0L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification6.removeWorker(worker17);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1343");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        boolean boolean21 = company18.equals((java.lang.Object) "");
        java.lang.String str22 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getEmployedWorkers();
        java.lang.String str24 = company18.getName();
        java.lang.String str25 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 10.0f);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker28);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1344");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        int int13 = worker12.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1345");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = worker12.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1346");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 0.0f);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company13.getProjects();
        boolean boolean20 = worker11.equals((java.lang.Object) projectSet19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1347");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company50.getUnassignedWorkers();
        java.lang.String str54 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company50.getProjects();
        java.lang.String str56 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company50.getEmployedWorkers();
        boolean boolean59 = worker48.equals((java.lang.Object) company50);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1348");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        java.lang.String str12 = worker11.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1349");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        boolean boolean25 = qualification10.equals((java.lang.Object) boolean24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification10.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification10.getWorkers();
        java.lang.String str28 = qualification10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification10.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification10.toDTO();
        boolean boolean31 = qualification6.equals((java.lang.Object) qualification10);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company33.getUnassignedWorkers();
        java.lang.String str37 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company33.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company33.getEmployedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company33.createWorker("hi!", qualificationSet46, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification10.removeWorker(worker48);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1350");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        worker14.setSalary((double) 'a');
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1351");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        boolean boolean25 = company21.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company21.getQualifications();
        java.lang.String str28 = company21.getName();
        java.lang.String str29 = company21.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company21.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) (short) 1);
        company1.unassignAll(worker33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1352");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        java.lang.String str21 = qualification13.toString();
        java.lang.String str22 = qualification13.toString();
        java.lang.String str23 = qualification13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification13.getWorkers();
        java.lang.String str25 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification13.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification13.toDTO();
        java.lang.String str28 = qualification13.toString();
        worker9.addQualification(qualification13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1353");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        int int12 = worker11.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1354");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 1L);
        company1.unassignAll(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1355");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        java.lang.String str8 = qualification5.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) '#');
        qualification5.addWorker(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1356");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        java.lang.String str17 = qualification9.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification9.toDTO();
        java.lang.String str19 = qualification9.toString();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification23.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Worker worker31 = null;
        qualification23.addWorker(worker31);
        java.lang.String str33 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification23.getWorkers();
        boolean boolean35 = qualification9.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company37.getUnassignedWorkers();
        java.lang.String str41 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company37.getProjects();
        java.lang.String str43 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company37.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean56 = qualification49.equals((java.lang.Object) qualification54);
        edu.colostate.cs415.model.Worker worker57 = null;
        qualification54.addWorker(worker57);
        edu.colostate.cs415.model.Company company60 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification62 = company60.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification62.getWorkers();
        boolean boolean64 = qualification54.equals((java.lang.Object) workerSet63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company66.getEmployedWorkers();
        boolean boolean68 = qualification54.equals((java.lang.Object) company66);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company66.getQualifications();
        boolean boolean70 = company37.equals((java.lang.Object) company66);
        boolean boolean71 = qualification9.equals((java.lang.Object) company66);
        edu.colostate.cs415.model.Qualification qualification73 = company66.createQualification("hi!:0:0:0:0");
        java.lang.String str74 = company66.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company66.getQualifications();
        edu.colostate.cs415.model.Worker worker77 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet75, (double) 0);
        company1.unassignAll(worker77);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker77.", company1.equals(worker77) == worker77.equals(company1));
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1357");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 1L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.lang.String str15 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnassignedWorkers();
        java.lang.String str17 = company11.getName();
        edu.colostate.cs415.model.Qualification qualification19 = company11.createQualification("hi!:0:0:0:0:0:0");
        boolean boolean20 = worker9.equals((java.lang.Object) company11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1358");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getUnassignedWorkers();
        java.lang.String str16 = company10.getName();
        edu.colostate.cs415.model.Qualification qualification18 = company10.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str21 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company20.getProjects();
        java.lang.String str27 = company20.getName();
        boolean boolean28 = qualification18.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company30.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company34.getProjects();
        java.lang.String str38 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company34.getAssignedWorkers();
        boolean boolean40 = company30.equals((java.lang.Object) company34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company34.getQualifications();
        boolean boolean42 = qualification18.equals((java.lang.Object) company34);
        java.lang.String str43 = qualification18.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification18.toDTO();
        worker8.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1359");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        java.lang.String str12 = worker11.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1360");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.lang.String str28 = qualification27.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company35.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company35.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = company30.createWorker("hi!", qualificationSet45, 1.0d);
        qualification27.addWorker(worker47);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker47.", company1.equals(worker47) == worker47.equals(company1));
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1361");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnassignedWorkers();
        java.lang.String str46 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company42.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker54 = company37.createWorker("hi!", qualificationSet52, 1.0d);
        company1.unassignAll(worker54);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker54.", company1.equals(worker54) == worker54.equals(company1));
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1362");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.lang.String str11 = qualification9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company20.getProjects();
        boolean boolean24 = company14.equals((java.lang.Object) projectSet23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company14.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification31 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company27.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company27.getUnassignedWorkers();
        boolean boolean35 = company14.equals((java.lang.Object) workerSet34);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company14.getUnassignedWorkers();
        boolean boolean37 = qualification9.equals((java.lang.Object) company14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification9 and company14.", qualification9.equals(company14) == company14.equals(qualification9));
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1363");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO2 = qualification1.toDTO();
        java.lang.String str3 = qualification1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company5.getUnassignedWorkers();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company5.getEmployedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = company5.createWorker("hi!", qualificationSet18, (double) (short) 1);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification1.removeWorker(worker20);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1364");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.lang.String str14 = qualification3.toString();
        java.lang.String str15 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10L);
        qualification3.removeWorker(worker26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1365");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        double double15 = worker14.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1366");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary((double) 1L);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1367");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.String str21 = company14.getName();
        java.lang.String str22 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) (short) 1);
        boolean boolean27 = qualification10.equals((java.lang.Object) "hi!");
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker26.", company1.equals(worker26) == worker26.equals(company1));
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1368");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        worker8.setSalary((double) 12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1369");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification23.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Worker worker31 = null;
        qualification28.addWorker(worker31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification28.equals((java.lang.Object) workerSet37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getEmployedWorkers();
        boolean boolean42 = qualification28.equals((java.lang.Object) company40);
        edu.colostate.cs415.model.Qualification qualification44 = company40.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification44.toDTO();
        java.lang.String str46 = qualification44.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO47 = qualification44.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification44.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification44.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification44.toDTO();
        boolean boolean51 = worker19.equals((java.lang.Object) qualification44);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1370");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company10.getProjects();
        java.lang.String str20 = company10.getName();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        boolean boolean25 = company22.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        boolean boolean28 = company10.equals((java.lang.Object) projectSet27);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company10.getUnassignedWorkers();
        java.lang.String str31 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company10.getProjects();
        boolean boolean33 = company1.equals((java.lang.Object) projectSet32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.lang.String str35 = company1.toString();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company38.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company38.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company42.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company42.getProjects();
        java.lang.String str46 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company42.getAssignedWorkers();
        boolean boolean48 = company38.equals((java.lang.Object) company42);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) (byte) 10);
        company1.unassignAll(worker51);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker51.", company1.equals(worker51) == worker51.equals(company1));
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1371");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) ' ');
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet6, (double) 12);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1372");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company6.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, 1.0d);
        worker18.setSalary((double) 0.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1373");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company32.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getEmployedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company43.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        boolean boolean51 = company47.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company47.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company47.getQualifications();
        boolean boolean54 = company43.equals((java.lang.Object) qualificationSet53);
        edu.colostate.cs415.model.Worker worker56 = company32.createWorker("hi!", qualificationSet53, 100.0d);
        edu.colostate.cs415.model.Worker worker58 = company20.createWorker("hi!:0:0", qualificationSet53, (double) 12);
        org.junit.Assert.assertTrue("Contract failed: worker58.equals(worker58)", worker58.equals(worker58));
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1374");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        java.lang.Object obj18 = null;
        boolean boolean19 = company13.equals(obj18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 100.0f);
        company1.unassignAll(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1375");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.Class<?> wildcardClass21 = qualificationSet20.getClass();
        boolean boolean22 = qualification3.equals((java.lang.Object) qualificationSet20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        java.lang.String str30 = company26.toString();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.Object obj38 = null;
        boolean boolean39 = company32.equals(obj38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company32.getAvailableWorkers();
        boolean boolean42 = company26.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company26.getUnassignedWorkers();
        boolean boolean44 = qualification3.equals((java.lang.Object) workerSet43);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        boolean boolean51 = company47.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company47.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company47.getQualifications();
        edu.colostate.cs415.model.Worker worker55 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet53, (double) 0L);
        qualification3.addWorker(worker55);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker55.", company1.equals(worker55) == worker55.equals(company1));
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1376");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        java.lang.Class<?> wildcardClass17 = qualification15.getClass();
        boolean boolean18 = worker9.equals((java.lang.Object) wildcardClass17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1377");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!:0:0:0:0:0:0");
        worker16.addQualification(qualification22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1378");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getAvailableWorkers();
        boolean boolean14 = worker8.equals((java.lang.Object) workerSet13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1379");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification29.toDTO();
        boolean boolean33 = qualification29.equals((java.lang.Object) (short) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification29.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification29.getWorkers();
        worker25.addQualification(qualification29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1380");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.lang.String str18 = company16.toString();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        boolean boolean21 = worker14.equals((java.lang.Object) company16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1381");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.lang.String str6 = company2.toString();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.lang.Object obj14 = null;
        boolean boolean15 = company8.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company8.getAvailableWorkers();
        boolean boolean18 = company2.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company8.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet21, (double) (short) 0);
        org.junit.Assert.assertTrue("Contract failed: worker23.equals(worker23)", worker23.equals(worker23));
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1382");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0L);
        qualification7.addWorker(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1383");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company14.createWorker("hi!", qualificationSet27, (double) (short) 1);
        qualification10.addWorker(worker29);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker29.", company1.equals(worker29) == worker29.equals(company1));
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1384");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.lang.String str12 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0.0f);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1385");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        java.lang.String str26 = qualification18.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification18.toDTO();
        java.lang.String str28 = qualification18.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification32.equals((java.lang.Object) qualification37);
        edu.colostate.cs415.model.Worker worker40 = null;
        qualification32.addWorker(worker40);
        java.lang.String str42 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification32.getWorkers();
        boolean boolean44 = qualification18.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str48 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company47.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification51 = company47.createQualification("hi!");
        java.lang.Object obj52 = null;
        boolean boolean53 = company47.equals(obj52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company55.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company55.getProjects();
        java.lang.String str59 = company55.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company55.getAssignedWorkers();
        boolean boolean61 = company47.equals((java.lang.Object) workerSet60);
        boolean boolean62 = qualification18.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification18.getWorkers();
        java.lang.String str64 = qualification18.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO65 = qualification18.toDTO();
        worker14.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1386");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification25 = company21.createQualification("hi!");
        java.lang.Object obj26 = null;
        boolean boolean27 = company21.equals(obj26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company21.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company21.getProjects();
        boolean boolean31 = company13.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company21.getEmployedWorkers();
        boolean boolean33 = worker11.equals((java.lang.Object) workerSet32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1387");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company35.getProjects();
        boolean boolean38 = qualification33.equals((java.lang.Object) projectSet37);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification33.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification33.getWorkers();
        java.lang.String str41 = qualification33.toString();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        boolean boolean50 = qualification33.equals((java.lang.Object) str49);
        boolean boolean51 = worker8.equals((java.lang.Object) str49);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1388");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification26.addWorker(worker29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification26.equals((java.lang.Object) workerSet35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getEmployedWorkers();
        boolean boolean40 = qualification26.equals((java.lang.Object) company38);
        edu.colostate.cs415.model.Qualification qualification42 = company38.createQualification("hi!");
        boolean boolean43 = company13.equals((java.lang.Object) company38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company13.getAvailableWorkers();
        boolean boolean45 = company1.equals((java.lang.Object) company13);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company47.getUnassignedWorkers();
        java.lang.String str51 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company47.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company47.getEmployedWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company57.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = company47.createWorker("hi!", qualificationSet60, (double) (short) 1);
        company1.unassignAll(worker62);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker62.", company1.equals(worker62) == worker62.equals(company1));
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1389");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company15.getAssignedWorkers();
        java.lang.String str18 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company15.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 0.0f);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1390");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification19.getWorkers();
        worker10.addQualification(qualification19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1391");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification10.", company1.equals(qualification10) == qualification10.equals(company1));
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1392");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, 0.0d);
        company1.unassignAll(worker20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker20.", company1.equals(worker20) == worker20.equals(company1));
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1393");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        worker9.setSalary((double) (short) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1394");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        boolean boolean17 = worker10.equals((java.lang.Object) company12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1395");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        java.lang.String str17 = qualification3.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        java.lang.String str29 = qualification21.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification21.toDTO();
        boolean boolean31 = qualification3.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        boolean boolean38 = company34.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, 0.0d);
        qualification3.addWorker(worker41);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker41.", company1.equals(worker41) == worker41.equals(company1));
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1396");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 'a');
        company1.unassignAll(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1397");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        java.lang.Object obj15 = null;
        boolean boolean16 = worker14.equals(obj15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1398");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str8 = qualification7.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getAssignedWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 12);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification7.removeWorker(worker17);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1399");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        java.lang.Object obj8 = null;
        boolean boolean9 = worker7.equals(obj8);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1400");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getAvailableWorkers();
        boolean boolean17 = worker11.equals((java.lang.Object) company13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1401");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        java.lang.String str15 = worker14.toString();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1402");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        edu.colostate.cs415.model.Qualification qualification12 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        java.lang.String str17 = company14.getName();
        boolean boolean18 = qualification12.equals((java.lang.Object) str17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification12.getWorkers();
        worker10.addQualification(qualification12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1403");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        double double13 = worker12.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1404");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        java.lang.String str12 = worker11.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1405");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification27.addWorker(worker30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification27.equals((java.lang.Object) workerSet36);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        boolean boolean41 = qualification27.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company39.getQualifications();
        boolean boolean43 = company10.equals((java.lang.Object) company39);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        boolean boolean50 = company46.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company46.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company46.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = company46.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company46.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company10.createWorker("hi!", qualificationSet55, (double) 100.0f);
        company1.unassignAll(worker57);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker57.", company1.equals(worker57) == worker57.equals(company1));
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1406");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company38.getUnassignedWorkers();
        java.lang.String str42 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company38.getProjects();
        java.lang.String str44 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company38.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company38.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company33.createWorker("hi!", qualificationSet48, 1.0d);
        boolean boolean51 = qualification3.equals((java.lang.Object) company33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker50.", company1.equals(worker50) == worker50.equals(company1));
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1407");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = company1.createWorker("hi!:0:0:0:0", qualificationSet19, (double) (byte) 1);
        org.junit.Assert.assertTrue("Contract failed: worker21.equals(worker21)", worker21.equals(worker21));
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1408");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification31 = company27.createQualification("hi!");
        java.lang.Object obj32 = null;
        boolean boolean33 = company27.equals(obj32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company27.getAssignedWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company36.getUnassignedWorkers();
        java.lang.String str40 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company36.getProjects();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company36.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company36.getEmployedWorkers();
        java.lang.String str45 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company36.getAssignedWorkers();
        boolean boolean47 = company27.equals((java.lang.Object) workerSet46);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company27.getUnassignedWorkers();
        boolean boolean50 = worker25.equals((java.lang.Object) company27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker25.", company1.equals(worker25) == worker25.equals(company1));
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1409");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company20.getProjects();
        java.lang.String str30 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company20.getProjects();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 'a');
        company20.unassignAll(worker43);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker43.", company1.equals(worker43) == worker43.equals(company1));
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1410");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company20.getQualifications();
        boolean boolean27 = company16.equals((java.lang.Object) qualificationSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!:0:0:0:0");
        boolean boolean34 = company16.equals((java.lang.Object) qualification33);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company16.getProjects();
        boolean boolean36 = worker14.equals((java.lang.Object) projectSet35);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1411");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        boolean boolean20 = worker12.equals((java.lang.Object) projectSet19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1412");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company15.getProjects();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getAssignedWorkers();
        boolean boolean21 = company11.equals((java.lang.Object) company15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) (byte) 10);
        company1.unassignAll(worker24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker24.", company1.equals(worker24) == worker24.equals(company1));
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1413");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        java.lang.String str26 = qualification18.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification18.toDTO();
        java.lang.String str28 = qualification18.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification32.equals((java.lang.Object) qualification37);
        edu.colostate.cs415.model.Worker worker40 = null;
        qualification32.addWorker(worker40);
        java.lang.String str42 = qualification32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification32.getWorkers();
        boolean boolean44 = qualification18.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getUnassignedWorkers();
        java.lang.String str50 = company46.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company46.getProjects();
        java.lang.String str52 = company46.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company46.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification63.getWorkers();
        boolean boolean65 = qualification58.equals((java.lang.Object) qualification63);
        edu.colostate.cs415.model.Worker worker66 = null;
        qualification63.addWorker(worker66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        boolean boolean73 = qualification63.equals((java.lang.Object) workerSet72);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = company75.getEmployedWorkers();
        boolean boolean77 = qualification63.equals((java.lang.Object) company75);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet78 = company75.getQualifications();
        boolean boolean79 = company46.equals((java.lang.Object) company75);
        boolean boolean80 = qualification18.equals((java.lang.Object) company75);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification18.getWorkers();
        worker14.addQualification(qualification18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1414");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        java.lang.String str17 = qualification9.toString();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.toString();
        java.lang.String str22 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company20.getProjects();
        java.lang.String str25 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 0);
        qualification9.addWorker(worker32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker32.", company1.equals(worker32) == worker32.equals(company1));
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1415");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        double double11 = worker10.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1416");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.lang.String str20 = company14.toString();
        edu.colostate.cs415.model.Qualification qualification22 = company14.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company25.getAvailableWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) workerSet28);
        java.lang.String str30 = qualification22.toString();
        worker12.addQualification(qualification22);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1417");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = company74.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet76 = company74.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification78 = company74.createQualification("hi!");
        boolean boolean79 = worker72.equals((java.lang.Object) company74);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1418");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        int int15 = worker14.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1419");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker8 = null;
        qualification7.addWorker(worker8);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        java.lang.String str23 = company19.toString();
        java.lang.Class<?> wildcardClass24 = company19.getClass();
        boolean boolean25 = company11.equals((java.lang.Object) wildcardClass24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company11.getEmployedWorkers();
        boolean boolean27 = qualification7.equals((java.lang.Object) workerSet26);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification7 and company11.", qualification7.equals(company11) == company11.equals(qualification7));
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1420");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO39 = qualification12.toDTO();
        worker8.addQualification(qualification12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1421");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        worker8.setSalary((double) 100.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1422");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        int int20 = worker19.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1423");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet11, (double) ' ');
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1424");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        worker15.setSalary(0.0d);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1425");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        worker12.setSalary((double) (byte) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1426");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        java.lang.String str18 = company14.getName();
        boolean boolean19 = company8.equals((java.lang.Object) company14);
        boolean boolean20 = qualification6.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification6.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        boolean boolean27 = company24.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company24.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 1L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification6.removeWorker(worker31);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1427");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getEmployedWorkers();
        boolean boolean19 = company12.equals((java.lang.Object) 10);
        boolean boolean20 = company10.equals((java.lang.Object) company12);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company10.getUnavailableWorkers();
        boolean boolean22 = worker8.equals((java.lang.Object) company10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1428");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        java.lang.String str17 = qualification14.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification21.addWorker(worker29);
        java.lang.String str31 = qualification21.toString();
        boolean boolean32 = qualification14.equals((java.lang.Object) str31);
        boolean boolean34 = qualification14.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification14.getWorkers();
        boolean boolean36 = company1.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        boolean boolean42 = company39.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company39.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company39.getQualifications();
        java.lang.String str45 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company39.getProjects();
        java.lang.String str47 = company39.getName();
        java.lang.String str48 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 10L);
        company1.unassignAll(worker51);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker51.", company1.equals(worker51) == worker51.equals(company1));
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1429");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.lang.String str14 = qualification3.toString();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company17.getEmployedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company32.getQualifications();
        boolean boolean39 = company28.equals((java.lang.Object) qualificationSet38);
        edu.colostate.cs415.model.Worker worker41 = company17.createWorker("hi!", qualificationSet38, 100.0d);
        qualification3.removeWorker(worker41);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker41.", company1.equals(worker41) == worker41.equals(company1));
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1430");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAvailableWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification37.equals((java.lang.Object) qualification42);
        edu.colostate.cs415.model.Worker worker45 = null;
        qualification37.addWorker(worker45);
        java.lang.String str47 = qualification37.toString();
        java.lang.String str48 = qualification37.toString();
        edu.colostate.cs415.model.Worker worker49 = null;
        qualification37.addWorker(worker49);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification37.getWorkers();
        boolean boolean52 = company28.equals((java.lang.Object) qualification37);
        worker26.addQualification(qualification37);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1431");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.lang.String str16 = company10.getName();
        java.lang.String str17 = company10.getName();
        boolean boolean18 = worker8.equals((java.lang.Object) company10);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1432");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        worker12.setSalary((double) 0);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1433");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification19.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        boolean boolean37 = qualification19.equals((java.lang.Object) str36);
        boolean boolean39 = qualification19.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification19.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification19.getWorkers();
        worker10.addQualification(qualification19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1434");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.lang.String str19 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification29.addWorker(worker32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification29.equals((java.lang.Object) workerSet38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getEmployedWorkers();
        boolean boolean43 = qualification29.equals((java.lang.Object) company41);
        edu.colostate.cs415.model.Qualification qualification45 = company41.createQualification("hi!");
        boolean boolean46 = company14.equals((java.lang.Object) qualification45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company48.getUnassignedWorkers();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet53 = company48.getProjects();
        java.lang.String str54 = company48.toString();
        edu.colostate.cs415.model.Qualification qualification56 = company48.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification56.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company59.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company59.getAvailableWorkers();
        boolean boolean63 = qualification56.equals((java.lang.Object) workerSet62);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO64 = qualification56.toDTO();
        boolean boolean65 = qualification45.equals((java.lang.Object) qualification56);
        worker12.addQualification(qualification45);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker12.", company2.equals(worker12) == worker12.equals(company2));
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1435");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        boolean boolean36 = company32.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company32.getProjects();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        boolean boolean45 = company41.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getAssignedWorkers();
        java.lang.String str47 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company41.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company32.createWorker("hi!", qualificationSet48, (double) 100);
        qualification24.addWorker(worker50);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker50.", company1.equals(worker50) == worker50.equals(company1));
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1436");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet11, (double) 0);
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1437");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 10L);
        qualification9.addWorker(worker27);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker27.", company1.equals(worker27) == worker27.equals(company1));
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1438");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) 10L);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0d);
        java.lang.String str17 = qualification13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification13.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification13.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification13.toDTO();
        boolean boolean21 = worker9.equals((java.lang.Object) qualification13);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1439");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.lang.String str7 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet8, 10.0d);
        org.junit.Assert.assertTrue("Contract failed: worker10.equals(worker10)", worker10.equals(worker10));
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1440");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getAssignedWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 12);
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1441");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = worker19.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker19.", company2.equals(worker19) == worker19.equals(company2));
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1442");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 'a');
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet9, 0.0d);
        org.junit.Assert.assertTrue("Contract failed: worker13.equals(worker13)", worker13.equals(worker13));
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1443");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = worker48.getQualifications();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1444");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) '4');
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification8.removeWorker(worker20);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1445");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.lang.String str12 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0.0f);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1446");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        worker10.setSalary((double) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1447");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str8 = company1.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification7.", company1.equals(qualification7) == qualification7.equals(company1));
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1448");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getAssignedWorkers();
        boolean boolean15 = worker9.equals((java.lang.Object) company11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1449");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        double double16 = worker15.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1450");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification6.", company1.equals(qualification6) == qualification6.equals(company1));
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1451");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0.0f);
        java.lang.String str11 = worker10.getName();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1452");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 10.0f);
        company1.unassignAll(worker33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker33.", company1.equals(worker33) == worker33.equals(company1));
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1453");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        double double49 = worker48.getSalary();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1454");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 0L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification11.removeWorker(worker23);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1455");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company16.getProjects();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getAssignedWorkers();
        boolean boolean22 = company12.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) (byte) 10);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification8.removeWorker(worker25);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1456");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company9.getProjects();
        java.lang.String str16 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company9.getProjects();
        boolean boolean19 = worker7.equals((java.lang.Object) projectSet18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1457");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) '4');
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.getName();
        edu.colostate.cs415.model.Qualification qualification15 = company12.createQualification("hi!");
        java.lang.String str16 = qualification15.toString();
        worker10.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1458");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        worker10.setSalary((double) 100);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1459");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification25.addWorker(worker28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification25.equals((java.lang.Object) workerSet34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getEmployedWorkers();
        boolean boolean39 = qualification25.equals((java.lang.Object) company37);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet40, (double) 10.0f);
        qualification13.addWorker(worker42);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker42.", company1.equals(worker42) == worker42.equals(company1));
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1460");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) (short) 1);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        java.lang.String str28 = qualification20.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification20.toDTO();
        java.lang.String str30 = qualification20.toString();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification34.equals((java.lang.Object) qualification39);
        java.lang.String str42 = qualification34.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO43 = qualification34.toDTO();
        java.lang.String str44 = qualification34.toString();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        boolean boolean55 = qualification48.equals((java.lang.Object) qualification53);
        edu.colostate.cs415.model.Worker worker56 = null;
        qualification48.addWorker(worker56);
        java.lang.String str58 = qualification48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification48.getWorkers();
        boolean boolean60 = qualification34.equals((java.lang.Object) qualification48);
        boolean boolean61 = qualification20.equals((java.lang.Object) boolean60);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification20.toDTO();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company64.getUnassignedWorkers();
        java.lang.String str68 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet69 = company64.getProjects();
        java.lang.String str70 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company64.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company64.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet73 = company64.getProjects();
        java.lang.String str74 = company64.getName();
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company76.getUnavailableWorkers();
        boolean boolean79 = company76.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company76.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet81 = company76.getProjects();
        boolean boolean82 = company64.equals((java.lang.Object) projectSet81);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet83 = company64.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company64.getUnassignedWorkers();
        java.lang.String str85 = company64.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet86 = company64.getProjects();
        boolean boolean87 = qualification20.equals((java.lang.Object) projectSet86);
        worker16.addQualification(qualification20);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker16.", company1.equals(worker16) == worker16.equals(company1));
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1461");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1462");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification30.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Worker worker38 = null;
        qualification35.addWorker(worker38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification35.equals((java.lang.Object) workerSet44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company47.getEmployedWorkers();
        boolean boolean49 = qualification35.equals((java.lang.Object) company47);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company47.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company47.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company47.getProjects();
        edu.colostate.cs415.model.Qualification qualification54 = company47.createQualification("hi!");
        boolean boolean55 = worker26.equals((java.lang.Object) company47);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1463");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and qualification9.", company1.equals(qualification9) == qualification9.equals(company1));
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1464");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 10.0f);
        company1.unassignAll(worker33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker33.", company1.equals(worker33) == worker33.equals(company1));
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1465");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        int int16 = worker15.getWorkload();
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker15.", company2.equals(worker15) == worker15.equals(company2));
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1466");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        java.lang.String str2 = qualification1.toString();
        java.lang.String str3 = qualification1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        boolean boolean9 = company5.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company5.getUnassignedWorkers();
        boolean boolean12 = qualification1.equals((java.lang.Object) workerSet11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on qualification1 and company5.", qualification1.equals(company5) == company5.equals(qualification1));
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1467");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        worker48.setSalary((double) (short) 1);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1468");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 10.0f);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification32.equals((java.lang.Object) workerSet37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean54 = qualification47.equals((java.lang.Object) qualification52);
        edu.colostate.cs415.model.Worker worker55 = null;
        qualification47.addWorker(worker55);
        java.lang.String str57 = qualification47.toString();
        boolean boolean58 = company40.equals((java.lang.Object) qualification47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification47.getWorkers();
        java.lang.String str60 = qualification47.toString();
        boolean boolean61 = qualification32.equals((java.lang.Object) str60);
        worker26.addQualification(qualification32);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker26.", company2.equals(worker26) == worker26.equals(company2));
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1469");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO77 = qualification76.toDTO();
        boolean boolean79 = qualification76.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = qualification76.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = qualification76.getWorkers();
        worker72.addQualification(qualification76);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1470");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        boolean boolean24 = qualification9.equals((java.lang.Object) boolean23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification9.getWorkers();
        java.lang.String str27 = qualification9.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getAvailableWorkers();
        boolean boolean34 = qualification9.equals((java.lang.Object) workerSet33);
        boolean boolean35 = qualification5.equals((java.lang.Object) boolean34);
        java.lang.String str36 = qualification5.toString();
        java.lang.String str37 = qualification5.toString();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company44.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company44.getProjects();
        java.lang.String str48 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company44.getAssignedWorkers();
        boolean boolean50 = company40.equals((java.lang.Object) company44);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company44.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet51, (double) (byte) 10);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification5.removeWorker(worker53);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1471");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        worker7.setSalary((double) 100.0f);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1472");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        java.lang.String str27 = qualification8.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification31.toDTO();
        boolean boolean34 = qualification31.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification38.equals((java.lang.Object) qualification43);
        boolean boolean46 = qualification31.equals((java.lang.Object) boolean45);
        boolean boolean47 = qualification8.equals((java.lang.Object) boolean45);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company49.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company49.getProjects();
        edu.colostate.cs415.model.Qualification qualification53 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = company49.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet55 = company49.getProjects();
        java.lang.String str56 = company49.toString();
        java.lang.String str57 = company49.getName();
        edu.colostate.cs415.model.Qualification qualification59 = company49.createQualification("hi!");
        boolean boolean60 = qualification8.equals((java.lang.Object) qualification59);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str64 = company63.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company63.getAssignedWorkers();
        java.lang.String str66 = company63.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company63.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet68 = company63.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company63.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company63.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0.0f);
        qualification59.addWorker(worker72);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker72.", company1.equals(worker72) == worker72.equals(company1));
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1473");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getAssignedWorkers();
        boolean boolean20 = company10.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) (byte) 10);
        qualification3.addWorker(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1474");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker7 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet5, 0.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        boolean boolean14 = qualification11.equals((java.lang.Object) 10.0d);
        java.lang.String str15 = qualification11.toString();
        java.lang.String str16 = qualification11.toString();
        boolean boolean17 = worker7.equals((java.lang.Object) qualification11);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker7.", company2.equals(worker7) == worker7.equals(company2));
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1475");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet9, (double) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: worker11.equals(worker11)", worker11.equals(worker11));
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1476");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, (double) 1L);
        qualification7.addWorker(worker17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker17.", company1.equals(worker17) == worker17.equals(company1));
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1477");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.lang.Object obj20 = null;
        boolean boolean21 = company14.equals(obj20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = company1.createWorker("hi!:0:0:0:0", qualificationSet24, 1.0d);
        org.junit.Assert.assertTrue("Contract failed: worker26.equals(worker26)", worker26.equals(worker26));
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1478");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.lang.String str16 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) (short) 0);
        company1.unassignAll(worker23);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker23.", company1.equals(worker23) == worker23.equals(company1));
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1479");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        java.lang.String str12 = qualification4.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification4.toDTO();
        java.lang.String str14 = qualification4.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification18.addWorker(worker26);
        java.lang.String str28 = qualification18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification18.getWorkers();
        boolean boolean30 = qualification4.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnassignedWorkers();
        java.lang.String str36 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        java.lang.String str38 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company32.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification44.equals((java.lang.Object) qualification49);
        edu.colostate.cs415.model.Worker worker52 = null;
        qualification49.addWorker(worker52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification49.equals((java.lang.Object) workerSet58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company61.getEmployedWorkers();
        boolean boolean63 = qualification49.equals((java.lang.Object) company61);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company61.getQualifications();
        boolean boolean65 = company32.equals((java.lang.Object) company61);
        boolean boolean66 = qualification4.equals((java.lang.Object) company61);
        edu.colostate.cs415.model.Qualification qualification68 = company61.createQualification("hi!:0:0:0:0");
        java.lang.String str69 = company61.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company61.getQualifications();
        edu.colostate.cs415.model.Worker worker72 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet70, (double) 0);
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str75 = company74.toString();
        java.lang.String str76 = company74.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company74.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company74.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification80 = company74.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company74.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification83 = company74.createQualification("hi!:0:0:0:0:0:0");
        worker72.addQualification(qualification83);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker72.", company2.equals(worker72) == worker72.equals(company2));
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1480");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        java.lang.String str35 = qualification33.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification33.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company39.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification33.equals((java.lang.Object) qualification43);
        java.lang.String str46 = qualification33.toString();
        java.lang.String str47 = qualification33.toString();
        java.lang.String str48 = qualification33.toString();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company50.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company50.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company50.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company57.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company57.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company57.getProjects();
        java.lang.String str61 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company57.getAssignedWorkers();
        boolean boolean63 = company50.equals((java.lang.Object) company57);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company57.getQualifications();
        boolean boolean65 = qualification33.equals((java.lang.Object) company57);
        worker8.addQualification(qualification33);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1481");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company10.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        java.lang.String str28 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company22.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification34.equals((java.lang.Object) qualification39);
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification39.addWorker(worker42);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean49 = qualification39.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getEmployedWorkers();
        boolean boolean53 = qualification39.equals((java.lang.Object) company51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company51.getQualifications();
        boolean boolean55 = company22.equals((java.lang.Object) company51);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        boolean boolean62 = company58.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company58.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company58.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company58.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet66 = company58.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company58.getQualifications();
        edu.colostate.cs415.model.Worker worker69 = company22.createWorker("hi!", qualificationSet67, (double) 100.0f);
        qualification18.addWorker(worker69);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker69.", company1.equals(worker69) == worker69.equals(company1));
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1482");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.Class<?> wildcardClass21 = qualificationSet20.getClass();
        boolean boolean22 = qualification3.equals((java.lang.Object) qualificationSet20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, 0.0d);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification3.removeWorker(worker33);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1483");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.Object obj8 = null;
        boolean boolean9 = company2.equals(obj8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet12, (double) 0);
        org.junit.Assert.assertTrue("Contract failed: worker14.equals(worker14)", worker14.equals(worker14));
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1484");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, (double) 100);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str22 = company21.toString();
        edu.colostate.cs415.model.Qualification qualification24 = company21.createQualification("hi!:0:0:0:0");
        worker19.addQualification(qualification24);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1485");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean9 = company6.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company6.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company6.getQualifications();
        java.lang.String str12 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company6.getProjects();
        java.lang.String str14 = company6.getName();
        java.lang.String str15 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 10L);
        company1.unassignAll(worker18);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker18.", company1.equals(worker18) == worker18.equals(company1));
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1486");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean8 = company2.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet10, (double) 100);
        org.junit.Assert.assertTrue("Contract failed: worker12.equals(worker12)", worker12.equals(worker12));
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1487");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.lang.String str26 = company18.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getEmployedWorkers();
        boolean boolean28 = qualification3.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        boolean boolean34 = company30.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company39.getAssignedWorkers();
        java.lang.String str45 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company30.createWorker("hi!", qualificationSet46, (double) 100);
        qualification3.addWorker(worker48);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker48.", company1.equals(worker48) == worker48.equals(company1));
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1488");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getUnavailableWorkers();
        boolean boolean12 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean19 = company16.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company16.getProjects();
        java.lang.String str24 = company16.getName();
        java.lang.String str25 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 10L);
        company1.unassignAll(worker28);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker28.", company1.equals(worker28) == worker28.equals(company1));
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1489");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        java.lang.Object obj12 = null;
        boolean boolean13 = worker11.equals(obj12);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1490");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.getName();
        java.lang.String str15 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        boolean boolean17 = worker11.equals((java.lang.Object) workerSet16);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker11.", company2.equals(worker11) == worker11.equals(company2));
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1491");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) '#');
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company10.createQualification("hi!:0:0");
        worker8.addQualification(qualification17);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker8.", company2.equals(worker8) == worker8.equals(company2));
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1492");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) '4');
        company1.unassignAll(worker19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker19.", company1.equals(worker19) == worker19.equals(company1));
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1493");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company1.getProjects();
        java.lang.String str16 = company1.getName();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        java.lang.String str29 = qualification21.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification21.toDTO();
        java.lang.String str31 = qualification21.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean42 = qualification35.equals((java.lang.Object) qualification40);
        edu.colostate.cs415.model.Worker worker43 = null;
        qualification35.addWorker(worker43);
        java.lang.String str45 = qualification35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification35.getWorkers();
        boolean boolean47 = qualification21.equals((java.lang.Object) qualification35);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company49.getUnassignedWorkers();
        java.lang.String str53 = company49.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = company49.getProjects();
        java.lang.String str55 = company49.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company49.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company49.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification61.getWorkers();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = qualification66.getWorkers();
        boolean boolean68 = qualification61.equals((java.lang.Object) qualification66);
        edu.colostate.cs415.model.Worker worker69 = null;
        qualification66.addWorker(worker69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification74 = company72.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet75 = qualification74.getWorkers();
        boolean boolean76 = qualification66.equals((java.lang.Object) workerSet75);
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company78.getEmployedWorkers();
        boolean boolean80 = qualification66.equals((java.lang.Object) company78);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = company78.getQualifications();
        boolean boolean82 = company49.equals((java.lang.Object) company78);
        boolean boolean83 = qualification21.equals((java.lang.Object) company78);
        edu.colostate.cs415.model.Qualification qualification85 = company78.createQualification("hi!:0:0:0:0");
        java.lang.String str86 = company78.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet87 = company78.getQualifications();
        edu.colostate.cs415.model.Worker worker89 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet87, (double) 0);
        company1.unassignAll(worker89);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker89.", company1.equals(worker89) == worker89.equals(company1));
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1494");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 0L);
        // during test generation this statement threw an exception of type java.lang.NullPointerException in error
        qualification13.removeWorker(worker25);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1495");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str20 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company19.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification23 = company19.createQualification("hi!");
        java.lang.Object obj24 = null;
        boolean boolean25 = company19.equals(obj24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company19.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company19.getProjects();
        boolean boolean29 = company11.equals((java.lang.Object) company19);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company19.getAvailableWorkers();
        boolean boolean31 = worker9.equals((java.lang.Object) company19);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker9.", company2.equals(worker9) == worker9.equals(company2));
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1496");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Qualification qualification15 = null;
        worker14.addQualification(qualification15);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker14.", company2.equals(worker14) == worker14.equals(company2));
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1497");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        java.lang.String str27 = qualification8.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification31.toDTO();
        boolean boolean34 = qualification31.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification38.equals((java.lang.Object) qualification43);
        boolean boolean46 = qualification31.equals((java.lang.Object) boolean45);
        boolean boolean47 = qualification8.equals((java.lang.Object) boolean45);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company50.getUnavailableWorkers();
        boolean boolean53 = company50.equals((java.lang.Object) "");
        java.lang.String str54 = company50.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company50.getEmployedWorkers();
        java.lang.String str56 = company50.getName();
        java.lang.String str57 = company50.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker60 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet58, (double) 10.0f);
        qualification8.addWorker(worker60);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company1 and worker60.", company1.equals(worker60) == worker60.equals(company1));
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1498");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = company3.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) (byte) 10);
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet14, (double) (byte) 10);
        org.junit.Assert.assertTrue("Contract failed: worker18.equals(worker18)", worker18.equals(worker18));
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1499");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 0L);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        java.lang.String str16 = qualification14.toString();
        worker10.addQualification(qualification14);
        // This assertion (symmetry of equals) fails
        org.junit.Assert.assertTrue("Contract failed: equals-symmetric on company2 and worker10.", company2.equals(worker10) == worker10.equals(company2));
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "ErrorTest2.test1500");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        java.lang.String str10 = company3.getName();
        java.lang.String str11 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (short) 1);
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet13, 10.0d);
        org.junit.Assert.assertTrue("Contract failed: worker17.equals(worker17)", worker17.equals(worker17));
    }
}

