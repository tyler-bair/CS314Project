import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        java.lang.String str8 = qualification5.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification5.toDTO();
        java.lang.String str10 = qualification5.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.lang.Object obj21 = null;
        boolean boolean22 = company16.equals(obj21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company16.getAvailableWorkers();
        boolean boolean26 = company6.equals((java.lang.Object) company16);
        java.lang.String str27 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company6.getEmployedWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str32 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company31.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification35 = company31.createQualification("hi!");
        java.lang.String str36 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company31.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker39 = company6.createWorker("", qualificationSet37, (double) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0:0:0" + "'", str32, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0:0:0" + "'", str36, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.lang.String str7 = company1.toString();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        java.lang.String str17 = qualification9.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification9.toDTO();
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification9.addWorker(worker19);
        java.lang.Class<?> wildcardClass21 = qualification9.getClass();
        boolean boolean22 = company1.equals((java.lang.Object) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification33 = company26.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationDTO34);
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        java.lang.String str20 = qualification9.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification9.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0:0:0" + "'", str20, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO21);
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.lang.String str35 = company1.getName();
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company1.getProjects();
        java.lang.String str38 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification40 = company1.createQualification("hi!");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(qualification40);
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getEmployedWorkers();
        boolean boolean11 = qualification3.equals((java.lang.Object) company5);
        java.lang.String str12 = company5.toString();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company5.start(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = company1.equals((java.lang.Object) str7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification27.addWorker(worker30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification27.equals((java.lang.Object) workerSet36);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        boolean boolean41 = qualification27.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company39.getQualifications();
        boolean boolean43 = company10.equals((java.lang.Object) company39);
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        boolean boolean50 = company46.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company46.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company46.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = company46.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company46.getQualifications();
        edu.colostate.cs415.model.Worker worker57 = company10.createWorker("hi!", qualificationSet55, (double) 100.0f);
        edu.colostate.cs415.model.Project project58 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker57, project58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationSet51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(projectSet54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(worker57);
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company26.getProjects();
        boolean boolean35 = company1.equals((java.lang.Object) company26);
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company30.getProjects();
        java.lang.String str38 = company30.toString();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company40.getQualifications();
        boolean boolean44 = company30.equals((java.lang.Object) qualificationSet43);
        edu.colostate.cs415.model.Qualification qualification46 = company30.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification46);
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet13);
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean19 = company16.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company16.getProjects();
        java.lang.String str24 = company16.getName();
        java.lang.String str25 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker28 = company1.createWorker("hi!:0:0:0:0", qualificationSet26, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        java.lang.String str13 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.lang.String str14 = qualification13.toString();
        java.lang.Object obj15 = null;
        boolean boolean16 = qualification13.equals(obj15);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification13.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification19.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification19.equals((java.lang.Object) workerSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        boolean boolean33 = qualification19.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet34, (double) 10.0f);
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker36, project37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationSet34);
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company13.createQualification("hi!");
        java.lang.String str20 = company13.getName();
        boolean boolean21 = company1.equals((java.lang.Object) company13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company24.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company24.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company24.getAssignedWorkers();
        boolean boolean32 = company1.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0:0:0" + "'", str25, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(workerSet33);
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project22 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet20, projectSize21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project19 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet17, projectSize18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = company11.equals(obj16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification8.removeWorker(worker21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize5 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project6 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet4, projectSize5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getAssignedWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 12);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker19, project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = company1.createProject("hi!:0:0", qualificationSet15, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        java.lang.String str25 = qualification17.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification17.toDTO();
        java.lang.String str27 = qualification17.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification31.equals((java.lang.Object) qualification36);
        edu.colostate.cs415.model.Worker worker39 = null;
        qualification31.addWorker(worker39);
        java.lang.String str41 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification31.getWorkers();
        boolean boolean43 = qualification17.equals((java.lang.Object) qualification31);
        boolean boolean44 = qualification3.equals((java.lang.Object) boolean43);
        java.lang.String str45 = qualification3.toString();
        java.lang.String str46 = qualification3.toString();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean57 = qualification50.equals((java.lang.Object) qualification55);
        edu.colostate.cs415.model.Worker worker58 = null;
        qualification55.addWorker(worker58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification63.getWorkers();
        boolean boolean65 = qualification55.equals((java.lang.Object) workerSet64);
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getEmployedWorkers();
        boolean boolean69 = qualification55.equals((java.lang.Object) company67);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company67.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company67.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet72 = company67.getProjects();
        edu.colostate.cs415.model.Qualification qualification74 = company67.createQualification("hi!");
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification78 = company76.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company76.getUnassignedWorkers();
        java.lang.String str80 = company76.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet81 = company76.getProjects();
        java.lang.String str82 = company76.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company76.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company76.getEmployedWorkers();
        boolean boolean85 = qualification74.equals((java.lang.Object) company76);
        java.lang.String str86 = company76.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company76.getUnavailableWorkers();
        boolean boolean88 = qualification3.equals((java.lang.Object) company76);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertNotNull(projectSet72);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!:0:0" + "'", str80, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "hi!:0:0" + "'", str82, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet83);
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
        org.junit.Assert.assertNotNull(workerSet87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company7.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification16.toDTO();
        boolean boolean19 = qualification16.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification16.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        boolean boolean28 = qualification16.equals((java.lang.Object) company23);
        boolean boolean29 = qualification11.equals((java.lang.Object) boolean28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification11.toDTO();
        edu.colostate.cs415.model.Worker worker31 = null;
        qualification11.addWorker(worker31);
        java.lang.String str33 = qualification11.toString();
        boolean boolean34 = company1.equals((java.lang.Object) qualification11);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        edu.colostate.cs415.model.Qualification qualification10 = company7.createQualification("hi!:0:0:0:0");
        boolean boolean11 = company1.equals((java.lang.Object) "hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = null;
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project13 = company1.createProject("hi!:0:0", qualificationSet11, projectSize12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.Object obj13 = null;
        boolean boolean14 = company7.equals(obj13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getAvailableWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company7);
        java.lang.String str18 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification20 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnassignedWorkers();
        java.lang.String str27 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company23.getProjects();
        java.lang.String str29 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company23.getEmployedWorkers();
        java.lang.String str32 = company23.getName();
        edu.colostate.cs415.model.Qualification qualification34 = company23.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company23.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company23.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker38 = company1.createWorker("hi!:0:0", qualificationSet36, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) '#');
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = company1.createProject("hi!:0:0", qualificationSet13, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.lang.String str21 = company1.getName();
        java.lang.String str22 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        java.lang.String str24 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.lang.String str14 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company8.getProjects();
        java.lang.String str18 = company8.getName();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        boolean boolean26 = company8.equals((java.lang.Object) projectSet25);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company8.getProjects();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean48 = qualification41.equals((java.lang.Object) qualification46);
        edu.colostate.cs415.model.Worker worker49 = null;
        qualification46.addWorker(worker49);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean56 = qualification46.equals((java.lang.Object) workerSet55);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getEmployedWorkers();
        boolean boolean60 = qualification46.equals((java.lang.Object) company58);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company58.getQualifications();
        boolean boolean62 = company29.equals((java.lang.Object) company58);
        java.lang.Class<?> wildcardClass63 = company58.getClass();
        boolean boolean64 = company8.equals((java.lang.Object) wildcardClass63);
        boolean boolean65 = company1.equals((java.lang.Object) boolean64);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company9.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company9.getAvailableWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification22 = company9.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.lang.String str16 = company10.getName();
        java.lang.String str17 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 10.0f);
        edu.colostate.cs415.model.Project project21 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker20, project21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company32.getProjects();
        boolean boolean35 = qualification30.equals((java.lang.Object) projectSet34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification39.toDTO();
        boolean boolean42 = qualification39.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean53 = qualification46.equals((java.lang.Object) qualification51);
        boolean boolean54 = qualification39.equals((java.lang.Object) boolean53);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification39.getWorkers();
        java.lang.String str56 = qualification39.toString();
        boolean boolean57 = qualification30.equals((java.lang.Object) str56);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification30.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification30.getWorkers();
        boolean boolean60 = company1.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Project project61 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualificationDTO40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getEmployedWorkers();
        boolean boolean29 = company22.equals((java.lang.Object) 10);
        boolean boolean30 = company20.equals((java.lang.Object) company22);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.lang.String str34 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getUnavailableWorkers();
        java.lang.String str38 = company32.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company32.getQualifications();
        boolean boolean41 = company22.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company22.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company22.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize44 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project45 = company1.createProject("hi!", qualificationSet43, projectSize44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0:0:0" + "'", str34, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification9.addWorker(worker17);
        java.lang.String str19 = qualification9.toString();
        java.lang.String str20 = qualification9.toString();
        boolean boolean21 = qualification3.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification25.addWorker(worker33);
        java.lang.Class<?> wildcardClass35 = qualification25.getClass();
        boolean boolean36 = qualification3.equals((java.lang.Object) wildcardClass35);
        java.lang.Class<?> wildcardClass37 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = company1.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company21.getUnassignedWorkers();
        java.lang.String str25 = company21.toString();
        java.lang.String str26 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company21.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company21.createQualification("hi!:0:0:0:0");
        java.lang.String str30 = qualification29.toString();
        boolean boolean31 = company1.equals((java.lang.Object) str30);
        java.lang.Object obj32 = null;
        boolean boolean33 = company1.equals(obj32);
        java.lang.String str34 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0:0:0" + "'", str30, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.lang.String str9 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnassignedWorkers();
        java.lang.String str23 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company19.getProjects();
        java.lang.String str25 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company19.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company19.getUnavailableWorkers();
        boolean boolean31 = company13.equals((java.lang.Object) company19);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company19.getUnassignedWorkers();
        java.lang.String str33 = company19.getName();
        boolean boolean34 = company1.equals((java.lang.Object) str33);
        edu.colostate.cs415.model.Qualification qualification36 = company1.createQualification("hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification36);
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification25 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company29.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass39 = company29.getClass();
        boolean boolean40 = company20.equals((java.lang.Object) wildcardClass39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company20.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(workerSet41);
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker7 = null;
        qualification3.addWorker(worker7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = qualification3.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification27.addWorker(worker30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification27.equals((java.lang.Object) workerSet36);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        boolean boolean41 = qualification27.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet42, (double) 10.0f);
        edu.colostate.cs415.model.Project project45 = null;
        // The following exception was thrown during execution in test generation
        try {
            company10.unassign(worker44, project45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.lang.String str9 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnassignedWorkers();
        java.lang.String str22 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getUnassignedWorkers();
        java.lang.String str25 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.lang.String str21 = company1.getName();
        java.lang.String str22 = company1.getName();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company24.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company24.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company24.getProjects();
        boolean boolean32 = company1.equals((java.lang.Object) projectSet31);
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.lang.String str18 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company13.getProjects();
        boolean boolean23 = qualification8.equals((java.lang.Object) company13);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.lang.String str19 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company13.getProjects();
        java.lang.String str23 = company13.getName();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        boolean boolean28 = company25.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company25.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company25.getProjects();
        boolean boolean31 = company13.equals((java.lang.Object) projectSet30);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company13.getProjects();
        java.lang.String str33 = company13.getName();
        java.lang.String str34 = company13.getName();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company36.getProjects();
        boolean boolean44 = company13.equals((java.lang.Object) projectSet43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize46 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project47 = company1.createProject("hi!", qualificationSet45, projectSize46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationSet45);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getUnassignedWorkers();
        java.lang.String str21 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company7.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(projectSet22);
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Worker worker12 = null;
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker12, project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = new edu.colostate.cs415.model.Project("hi!", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker15 = company1.createWorker("", qualificationSet13, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass6 = workerSet5.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = null;
        edu.colostate.cs415.model.ProjectSize projectSize11 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project12 = company1.createProject("", qualificationSet10, projectSize11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str7 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company6.createQualification("hi!");
        java.lang.Object obj11 = null;
        boolean boolean12 = company6.equals(obj11);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize14 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project15 = company1.createProject("hi!:0:0:0:0", qualificationSet13, projectSize14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = company1.equals((java.lang.Object) qualification16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company28.getProjects();
        java.lang.String str32 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAssignedWorkers();
        boolean boolean34 = company24.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) (byte) 10);
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker37, project38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet2 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualificationSet2);
        org.junit.Assert.assertNotNull(projectSet3);
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = worker11.willOverload(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project can not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        java.lang.String str17 = qualification15.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company19.getQualifications();
        java.lang.String str26 = company19.getName();
        edu.colostate.cs415.model.Qualification qualification28 = company19.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company19.getAvailableWorkers();
        boolean boolean30 = qualification15.equals((java.lang.Object) workerSet29);
        java.lang.String str31 = qualification15.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getUnavailableWorkers();
        boolean boolean36 = company33.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company33.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company33.getQualifications();
        java.lang.String str39 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company33.getProjects();
        java.lang.String str41 = company33.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company33.getQualifications();
        boolean boolean43 = qualification15.equals((java.lang.Object) qualificationSet42);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker45 = company1.createWorker("hi!:0:0:0:0:0:0", qualificationSet42, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        boolean boolean7 = qualification3.equals((java.lang.Object) (short) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        java.lang.String str9 = qualification3.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        boolean boolean28 = qualification13.equals((java.lang.Object) boolean27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification13.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification13.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification35.toDTO();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification35.getWorkers();
        boolean boolean40 = qualification13.equals((java.lang.Object) workerSet39);
        boolean boolean41 = qualification3.equals((java.lang.Object) qualification13);
        java.lang.Class<?> wildcardClass42 = qualification13.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.lang.String str8 = company2.getName();
        java.lang.String str9 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 10.0f);
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker12.removeProject(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification43 = company35.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getAvailableWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification43.toDTO();
        boolean boolean52 = qualification32.equals((java.lang.Object) qualification43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        boolean boolean60 = company56.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company56.getQualifications();
        edu.colostate.cs415.model.Worker worker63 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet61, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            qualification43.removeWorker(worker63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationSet61);
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        boolean boolean20 = qualification17.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        boolean boolean32 = qualification17.equals((java.lang.Object) boolean31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification17.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification17.getWorkers();
        java.lang.String str35 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification17.getWorkers();
        boolean boolean37 = company1.equals((java.lang.Object) qualification17);
        java.lang.Object obj38 = null;
        boolean boolean39 = qualification17.equals(obj38);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        boolean boolean45 = company42.equals((java.lang.Object) "");
        java.lang.String str46 = company42.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company42.getEmployedWorkers();
        java.lang.String str48 = company42.getName();
        java.lang.String str49 = company42.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification17.removeWorker(worker52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet50);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company7.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification3.equals((java.lang.Object) qualification17);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company3.getQualifications();
        java.lang.String str6 = company3.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getUnassignedWorkers();
        boolean boolean16 = company3.equals((java.lang.Object) company8);
        java.lang.String str17 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("", qualificationSet18, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker7 = null;
        qualification3.addWorker(worker7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = qualification3.equals((java.lang.Object) company10);
        java.lang.String str16 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getAvailableWorkers();
        java.lang.String str18 = company10.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company5.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company5.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company5.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        boolean boolean35 = company5.equals((java.lang.Object) company30);
        boolean boolean36 = company1.equals((java.lang.Object) company30);
        java.lang.String str37 = company30.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company30.getAvailableWorkers();
        java.lang.String str39 = company30.toString();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnavailableWorkers();
        java.lang.String str19 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getUnassignedWorkers();
        java.lang.String str21 = company15.getName();
        edu.colostate.cs415.model.Qualification qualification23 = company15.createQualification("hi!:0:0:0:0:0:0");
        boolean boolean24 = company1.equals((java.lang.Object) qualification23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification23.getWorkers();
        java.lang.Class<?> wildcardClass26 = qualification23.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker17 = company1.createWorker("hi!:0:0:0:0", qualificationSet15, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.lang.String str11 = company1.toString();
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 10L);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet6, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            worker8.setSalary((double) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: salary can not be a negative number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification27.toDTO();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str31 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company30.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.lang.Object obj35 = null;
        boolean boolean36 = company30.equals(obj35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company30.getAssignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        java.lang.String str43 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company39.getProjects();
        java.lang.String str45 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company39.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company39.getEmployedWorkers();
        java.lang.String str48 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company39.getAssignedWorkers();
        boolean boolean50 = company30.equals((java.lang.Object) workerSet49);
        boolean boolean51 = qualification27.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company53.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company53.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company53.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company53.getAvailableWorkers();
        boolean boolean58 = qualification27.equals((java.lang.Object) company53);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0:0:0" + "'", str31, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification6.getWorkers();
        java.lang.Class<?> wildcardClass8 = qualification6.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        qualification3.addWorker(worker4);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getEmployedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.lang.String str18 = company16.toString();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        boolean boolean21 = company8.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company8.createQualification("hi!");
        boolean boolean24 = qualification3.equals((java.lang.Object) qualification23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification23.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification23.toDTO();
        java.lang.String str27 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification23.getWorkers();
        edu.colostate.cs415.model.Worker worker29 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification23.removeWorker(worker29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot remove null worker");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company9.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str18 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company9.getEmployedWorkers();
        boolean boolean22 = company1.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(workerSet23);
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company9);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        java.lang.String str27 = qualification19.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification19.toDTO();
        java.lang.String str29 = qualification19.toString();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification33.equals((java.lang.Object) qualification38);
        edu.colostate.cs415.model.Worker worker41 = null;
        qualification33.addWorker(worker41);
        java.lang.String str43 = qualification33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification33.getWorkers();
        boolean boolean45 = qualification19.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company47.getUnassignedWorkers();
        java.lang.String str51 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet52 = company47.getProjects();
        java.lang.String str53 = company47.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company47.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company47.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        boolean boolean66 = qualification59.equals((java.lang.Object) qualification64);
        edu.colostate.cs415.model.Worker worker67 = null;
        qualification64.addWorker(worker67);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification72 = company70.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = qualification72.getWorkers();
        boolean boolean74 = qualification64.equals((java.lang.Object) workerSet73);
        edu.colostate.cs415.model.Company company76 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company76.getEmployedWorkers();
        boolean boolean78 = qualification64.equals((java.lang.Object) company76);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = company76.getQualifications();
        boolean boolean80 = company47.equals((java.lang.Object) company76);
        boolean boolean81 = qualification19.equals((java.lang.Object) company76);
        edu.colostate.cs415.model.Qualification qualification83 = company76.createQualification("hi!:0:0:0:0");
        java.lang.String str84 = company76.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet85 = company76.getQualifications();
        edu.colostate.cs415.model.Worker worker87 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet85, (double) 0);
        edu.colostate.cs415.model.Project project88 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker87, project88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0" + "'", str51, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0" + "'", str53, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(qualification72);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(qualificationSet79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(qualification83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "hi!" + "'", str84, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet85);
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company5.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.lang.String str16 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker19 = company5.createWorker("hi!:0:0:0:0:0:0", qualificationSet17, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification18.equals((java.lang.Object) qualification23);
        edu.colostate.cs415.model.Worker worker26 = null;
        qualification23.addWorker(worker26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification23.equals((java.lang.Object) workerSet32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getEmployedWorkers();
        boolean boolean37 = qualification23.equals((java.lang.Object) company35);
        edu.colostate.cs415.model.Qualification qualification39 = company35.createQualification("hi!");
        boolean boolean40 = company10.equals((java.lang.Object) company35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company10.getUnavailableWorkers();
        boolean boolean43 = company1.equals((java.lang.Object) company10);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification47.toDTO();
        boolean boolean50 = qualification47.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean61 = qualification54.equals((java.lang.Object) qualification59);
        boolean boolean62 = qualification47.equals((java.lang.Object) boolean61);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO63 = qualification47.toDTO();
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company65.getAssignedWorkers();
        boolean boolean68 = company65.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company65.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company65.getUnassignedWorkers();
        boolean boolean71 = qualification47.equals((java.lang.Object) workerSet70);
        edu.colostate.cs415.model.Company company73 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company73.getUnavailableWorkers();
        boolean boolean76 = company73.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification78 = company73.createQualification("hi!");
        boolean boolean79 = qualification47.equals((java.lang.Object) qualification78);
        boolean boolean80 = company10.equals((java.lang.Object) qualification47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company10.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company83 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company83.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet85 = company83.getProjects();
        edu.colostate.cs415.model.Qualification qualification87 = company83.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet88 = company83.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = company83.getUnassignedWorkers();
        java.lang.String str90 = company83.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet91 = company83.getAssignedWorkers();
        boolean boolean92 = company10.equals((java.lang.Object) workerSet91);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(qualificationDTO63);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(workerSet81);
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertNotNull(projectSet85);
        org.junit.Assert.assertNotNull(qualification87);
        org.junit.Assert.assertNotNull(projectSet88);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "hi!:0:0" + "'", str90, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification9.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) '4');
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker12.removeProject(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company9.getProjects();
        java.lang.String str14 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) (short) 0);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getEmployedWorkers();
        java.lang.String str23 = company1.getName();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str27 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company26.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company26.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company26.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker37 = company1.createWorker("", qualificationSet35, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.lang.String str11 = company7.getName();
        boolean boolean12 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        java.lang.String str23 = company16.getName();
        edu.colostate.cs415.model.Qualification qualification25 = company16.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet26, (double) 1L);
        edu.colostate.cs415.model.Project project29 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker28, project29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.lang.String str14 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Worker worker27 = null;
        qualification24.addWorker(worker27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification24.equals((java.lang.Object) workerSet33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getEmployedWorkers();
        boolean boolean38 = qualification24.equals((java.lang.Object) company36);
        edu.colostate.cs415.model.Qualification qualification40 = company36.createQualification("hi!");
        boolean boolean41 = company9.equals((java.lang.Object) qualification40);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str45 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company44.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company44.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company44.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company44.getEmployedWorkers();
        java.lang.String str51 = company44.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company44.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company44.getEmployedWorkers();
        boolean boolean54 = qualification40.equals((java.lang.Object) workerSet53);
        boolean boolean55 = company1.equals((java.lang.Object) boolean54);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0" + "'", str51, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str40 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company39.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker46 = company30.createWorker("", qualificationSet44, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationSet44);
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification27.equals((java.lang.Object) qualification32);
        java.lang.String str35 = qualification27.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification27.toDTO();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        boolean boolean42 = company38.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company38.getQualifications();
        java.lang.Class<?> wildcardClass45 = qualificationSet44.getClass();
        boolean boolean46 = qualification27.equals((java.lang.Object) qualificationSet44);
        java.lang.String str47 = qualification27.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO48 = qualification27.toDTO();
        boolean boolean49 = company20.equals((java.lang.Object) qualificationDTO48);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        java.lang.String str12 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.lang.String str35 = company1.getName();
        java.lang.String str36 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        boolean boolean20 = company16.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company16.getQualifications();
        boolean boolean23 = company12.equals((java.lang.Object) qualificationSet22);
        edu.colostate.cs415.model.Worker worker25 = company1.createWorker("hi!", qualificationSet22, 100.0d);
        edu.colostate.cs415.model.Project project26 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(worker25);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Worker worker6 = null;
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker6, project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualification8);
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.Class<?> wildcardClass14 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification82 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(workerSet83);
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.lang.Class<?> wildcardClass4 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 'a');
        edu.colostate.cs415.model.Project project23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker22, project23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        boolean boolean16 = qualification9.equals((java.lang.Object) company12);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str11 = qualification10.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getAssignedWorkers();
        boolean boolean20 = qualification10.equals((java.lang.Object) company13);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str11, "hi!:0:0:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getAssignedWorkers();
        boolean boolean39 = qualification3.equals((java.lang.Object) company31);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualificationDTO40);
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification24.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("", qualificationSet10, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        java.lang.Class<?> wildcardClass8 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.lang.String str9 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getEmployedWorkers();
        boolean boolean38 = qualification27.equals((java.lang.Object) company29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company29.getQualifications();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str42 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company41.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification45 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.String str47 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company41.getQualifications();
        boolean boolean49 = company29.equals((java.lang.Object) company41);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0:0:0" + "'", str42, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:0" + "'", str47, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnavailableWorkers();
        boolean boolean15 = qualification5.equals((java.lang.Object) workerSet14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification5.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification5.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        boolean boolean24 = qualification16.equals((java.lang.Object) company18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification16.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification16.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification16.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification16.toDTO();
        java.lang.String str29 = qualification16.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company12.createWorker("hi!", qualificationSet25, (double) (short) 1);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(worker27);
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.Class<?> wildcardClass21 = qualificationSet20.getClass();
        boolean boolean22 = qualification3.equals((java.lang.Object) qualificationSet20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification3.getWorkers();
        java.lang.String str26 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.lang.String str15 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification17 = company9.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company9.getEmployedWorkers();
        java.lang.String str19 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company9.getUnassignedWorkers();
        boolean boolean22 = company1.equals((java.lang.Object) company9);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.lang.String str9 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str5, "hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company6.getProjects();
        boolean boolean8 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("", qualificationSet10, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company11.getProjects();
        java.lang.String str20 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company1.createProject("hi!:0:0:0:0", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        java.lang.String str27 = qualification8.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification46 = company44.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification46.getWorkers();
        boolean boolean48 = qualification41.equals((java.lang.Object) qualification46);
        edu.colostate.cs415.model.Worker worker49 = null;
        qualification46.addWorker(worker49);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        boolean boolean56 = qualification46.equals((java.lang.Object) workerSet55);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company58.getEmployedWorkers();
        boolean boolean60 = qualification46.equals((java.lang.Object) company58);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company58.getQualifications();
        boolean boolean62 = company29.equals((java.lang.Object) company58);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company58.getUnassignedWorkers();
        boolean boolean64 = qualification8.equals((java.lang.Object) workerSet63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company66.getUnassignedWorkers();
        java.lang.String str70 = company66.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet71 = company66.getProjects();
        java.lang.String str72 = company66.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company66.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet74 = company66.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet75 = company66.getProjects();
        java.lang.String str76 = company66.getName();
        edu.colostate.cs415.model.Company company78 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet79 = company78.getUnavailableWorkers();
        boolean boolean81 = company78.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company78.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet83 = company78.getProjects();
        boolean boolean84 = company66.equals((java.lang.Object) projectSet83);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet85 = company66.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = company66.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet87 = company66.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet88 = company66.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet89 = company66.getProjects();
        boolean boolean90 = qualification8.equals((java.lang.Object) projectSet89);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "hi!:0:0" + "'", str70, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0" + "'", str72, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertNotNull(workerSet74);
        org.junit.Assert.assertNotNull(projectSet75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(workerSet79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertNotNull(projectSet83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(workerSet85);
        org.junit.Assert.assertNotNull(workerSet86);
        org.junit.Assert.assertNotNull(workerSet87);
        org.junit.Assert.assertNotNull(workerSet88);
        org.junit.Assert.assertNotNull(projectSet89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        java.lang.String str8 = qualification6.toString();
        java.lang.String str9 = qualification6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification6.getWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getEmployedWorkers();
        boolean boolean30 = company1.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification32 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str36 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company35.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, 0.0d);
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker40, project41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0:0:0" + "'", str36, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        boolean boolean17 = company10.equals((java.lang.Object) 10);
        java.lang.String str18 = company10.toString();
        boolean boolean19 = company1.equals((java.lang.Object) company10);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company21.getProjects();
        boolean boolean25 = company10.equals((java.lang.Object) projectSet24);
        java.lang.String str26 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company10.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str31 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company30.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, 0.0d);
        edu.colostate.cs415.model.Project project36 = null;
        // The following exception was thrown during execution in test generation
        try {
            company10.unassign(worker35, project36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0:0:0" + "'", str22, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0:0:0" + "'", str31, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getUnassignedWorkers();
        boolean boolean33 = company1.equals((java.lang.Object) workerSet32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(projectSet7);
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        boolean boolean12 = company1.equals((java.lang.Object) (short) 1);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass14 = workerSet13.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 0L);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company10.assign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.toString();
        java.lang.String str9 = company1.getName();
        java.lang.String str10 = company1.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        java.lang.String str31 = qualification20.toString();
        boolean boolean32 = qualification14.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification36.addWorker(worker44);
        java.lang.Class<?> wildcardClass46 = qualification36.getClass();
        boolean boolean47 = qualification14.equals((java.lang.Object) wildcardClass46);
        boolean boolean48 = company1.equals((java.lang.Object) boolean47);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str51 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company50.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification54 = company50.createQualification("hi!");
        java.lang.Object obj55 = null;
        boolean boolean56 = company50.equals(obj55);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company50.getQualifications();
        boolean boolean59 = company1.equals((java.lang.Object) qualificationSet58);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company62.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = company62.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company62.getUnassignedWorkers();
        java.lang.String str66 = company62.toString();
        edu.colostate.cs415.model.Qualification qualification68 = company62.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company62.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize70 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project71 = company1.createProject("hi!:0:0:0:0", qualificationSet69, projectSize70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0:0:0" + "'", str51, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!:0:0" + "'", str66, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(qualificationSet69);
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) company5);
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        edu.colostate.cs415.model.Qualification qualification15 = company7.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getEmployedWorkers();
        java.lang.Class<?> wildcardClass17 = company7.getClass();
        boolean boolean18 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company7.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(projectSet19);
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        java.lang.Class<?> wildcardClass21 = qualificationSet20.getClass();
        boolean boolean22 = qualification3.equals((java.lang.Object) qualificationSet20);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification29.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification29.toDTO();
        java.lang.String str39 = qualification29.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification48 = company46.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification48.getWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) qualification48);
        edu.colostate.cs415.model.Worker worker51 = null;
        qualification43.addWorker(worker51);
        java.lang.String str53 = qualification43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification43.getWorkers();
        boolean boolean55 = qualification29.equals((java.lang.Object) qualification43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification29.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification29.toDTO();
        boolean boolean58 = qualification3.equals((java.lang.Object) qualification29);
        java.lang.String str59 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNotNull(workerSet60);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.lang.String str13 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass7 = workerSet6.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification21.addWorker(worker29);
        java.lang.String str31 = qualification21.toString();
        boolean boolean32 = company14.equals((java.lang.Object) qualification21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification21.getWorkers();
        boolean boolean34 = company1.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        boolean boolean40 = company36.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company36.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company36.getQualifications();
        boolean boolean43 = qualification21.equals((java.lang.Object) company36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company36.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationSet44);
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnassignedWorkers();
        java.lang.String str26 = company20.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification3.getWorkers();
        java.lang.Class<?> wildcardClass25 = workerSet24.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        boolean boolean11 = company8.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 1L);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker15, project16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company2.getQualifications();
        java.lang.String str5 = company2.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getUnassignedWorkers();
        boolean boolean15 = company2.equals((java.lang.Object) company7);
        java.lang.String str16 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1.0f);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker19.removeProject(project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize6 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project7 = new edu.colostate.cs415.model.Project("", qualificationSet5, projectSize6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company29.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass39 = company29.getClass();
        boolean boolean40 = company20.equals((java.lang.Object) wildcardClass39);
        java.lang.String str41 = company20.toString();
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.start(project42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company10.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!", qualificationSet14, (double) 10L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 0.0f);
        edu.colostate.cs415.model.Project project23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker22, project23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company2.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str11 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company2.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnavailableWorkers();
        java.lang.String str20 = company16.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getUnassignedWorkers();
        java.lang.String str22 = company16.getName();
        edu.colostate.cs415.model.Qualification qualification24 = company16.createQualification("hi!:0:0:0:0:0:0");
        boolean boolean25 = company2.equals((java.lang.Object) qualification24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet27, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must be positive number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnassignedWorkers();
        java.lang.String str30 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        java.lang.String str32 = company26.toString();
        edu.colostate.cs415.model.Qualification qualification34 = company26.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company26.getAssignedWorkers();
        boolean boolean36 = company20.equals((java.lang.Object) workerSet35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company20.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet11, (double) '#');
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker13, project14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = worker14.willOverload(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project can not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company18.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company18.getAvailableWorkers();
        boolean boolean23 = qualification15.equals((java.lang.Object) workerSet22);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0:0:0" + "'", str19, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        java.lang.String str25 = qualification17.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification17.toDTO();
        java.lang.String str27 = qualification17.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification31.equals((java.lang.Object) qualification36);
        edu.colostate.cs415.model.Worker worker39 = null;
        qualification31.addWorker(worker39);
        java.lang.String str41 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification31.getWorkers();
        boolean boolean43 = qualification17.equals((java.lang.Object) qualification31);
        boolean boolean44 = qualification3.equals((java.lang.Object) boolean43);
        java.lang.String str45 = qualification3.toString();
        java.lang.String str46 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.lang.String str16 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company11.getQualifications();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification22.addWorker(worker23);
        boolean boolean26 = qualification22.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification22.getWorkers();
        boolean boolean28 = company11.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str31 = company30.toString();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company30.getProjects();
        java.lang.String str35 = company30.toString();
        boolean boolean36 = qualification22.equals((java.lang.Object) str35);
        boolean boolean37 = company1.equals((java.lang.Object) boolean36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0:0:0" + "'", str31, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0:0:0" + "'", str32, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0:0:0" + "'", str35, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getAssignedWorkers();
        boolean boolean24 = company21.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getUnassignedWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification34 = company29.createQualification("hi!");
        boolean boolean35 = qualification3.equals((java.lang.Object) qualification34);
        java.lang.Class<?> wildcardClass36 = qualification34.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.lang.Object obj21 = null;
        boolean boolean22 = company16.equals(obj21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company16.getAvailableWorkers();
        boolean boolean26 = company6.equals((java.lang.Object) company16);
        edu.colostate.cs415.model.Qualification qualification28 = company16.createQualification("hi!:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualification28);
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        boolean boolean36 = qualification33.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean47 = qualification40.equals((java.lang.Object) qualification45);
        boolean boolean48 = qualification33.equals((java.lang.Object) boolean47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification33.getWorkers();
        java.lang.String str50 = qualification33.toString();
        boolean boolean51 = qualification24.equals((java.lang.Object) str50);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str54 = company53.toString();
        java.lang.String str55 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company53.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company53.getProjects();
        java.lang.String str58 = company53.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company53.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company53.getUnavailableWorkers();
        boolean boolean61 = qualification24.equals((java.lang.Object) company53);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = qualification24.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0:0:0" + "'", str54, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0:0:0" + "'", str55, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(workerSet63);
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.lang.String str20 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification31.addWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification31.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getEmployedWorkers();
        boolean boolean45 = qualification31.equals((java.lang.Object) company43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company43.getQualifications();
        boolean boolean47 = company14.equals((java.lang.Object) company43);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        boolean boolean54 = company50.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company50.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company50.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet58 = company50.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company50.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = company14.createWorker("hi!", qualificationSet59, (double) 100.0f);
        edu.colostate.cs415.model.Project project62 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker61, project62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(projectSet58);
        org.junit.Assert.assertNotNull(qualificationSet59);
        org.junit.Assert.assertNotNull(worker61);
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        java.lang.String str15 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project21 = company1.createProject("", qualificationSet19, projectSize20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str31 = company30.toString();
        java.lang.String str32 = company30.toString();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.lang.String str35 = company30.getName();
        java.lang.String str36 = company30.getName();
        java.lang.String str37 = company30.getName();
        boolean boolean38 = qualification24.equals((java.lang.Object) str37);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0:0:0" + "'", str31, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0:0:0" + "'", str32, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnassignedWorkers();
        java.lang.String str22 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company28.getQualifications();
        java.lang.String str35 = company28.getName();
        edu.colostate.cs415.model.Qualification qualification37 = company28.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company28.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker41 = company1.createWorker("hi!:0:0:0:0", qualificationSet39, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        java.lang.String str29 = qualification24.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project22 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet20, projectSize21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification32.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification32.toDTO();
        java.lang.String str36 = qualification32.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationDTO35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.lang.String str8 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = company1.equals((java.lang.Object) qualification16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.lang.String str18 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company12.getUnassignedWorkers();
        java.lang.String str22 = company12.toString();
        edu.colostate.cs415.model.Qualification qualification24 = company12.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company12.getAvailableWorkers();
        boolean boolean26 = company1.equals((java.lang.Object) workerSet25);
        java.lang.String str27 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.lang.String str11 = company1.getName();
        java.lang.Class<?> wildcardClass12 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.lang.String str17 = company15.toString();
        edu.colostate.cs415.model.Qualification qualification19 = company15.createQualification("hi!");
        boolean boolean20 = company7.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company7.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company24.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        boolean boolean30 = qualification22.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company24.getEmployedWorkers();
        boolean boolean32 = company1.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        boolean boolean38 = company35.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification40 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company35.getProjects();
        java.lang.String str42 = company35.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company35.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker45 = company1.createWorker("hi!:0:0:0:0", qualificationSet43, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet43);
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company13.createWorker("hi!", qualificationSet26, (double) (short) 1);
        edu.colostate.cs415.model.Project project29 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker28, project29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(worker28);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.lang.String str10 = company1.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company12.getQualifications();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        java.lang.String str32 = qualification29.toString();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification36.addWorker(worker44);
        java.lang.String str46 = qualification36.toString();
        boolean boolean47 = qualification29.equals((java.lang.Object) str46);
        boolean boolean49 = qualification29.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification29.toDTO();
        boolean boolean51 = company12.equals((java.lang.Object) qualificationDTO50);
        boolean boolean52 = company1.equals((java.lang.Object) qualificationDTO50);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(qualificationDTO50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification43 = company35.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getAvailableWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification43.toDTO();
        boolean boolean52 = qualification32.equals((java.lang.Object) qualification43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification43.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company57.getUnassignedWorkers();
        java.lang.String str61 = company57.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company57.getEmployedWorkers();
        boolean boolean64 = company57.equals((java.lang.Object) 10);
        boolean boolean65 = company55.equals((java.lang.Object) company57);
        java.lang.String str66 = company57.getName();
        boolean boolean67 = qualification43.equals((java.lang.Object) str66);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO68 = qualification43.toDTO();
        java.lang.Class<?> wildcardClass69 = qualification43.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(qualificationDTO68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.lang.String str7 = company1.toString();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str20 = company19.toString();
        java.lang.String str21 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company19.getUnavailableWorkers();
        boolean boolean24 = company10.equals((java.lang.Object) company19);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company19.getProjects();
        boolean boolean26 = company1.equals((java.lang.Object) company19);
        java.lang.String str27 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0:0:0" + "'", str20, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0:0:0" + "'", str21, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification6.toDTO();
        java.lang.String str9 = qualification6.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification6.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification6.toDTO();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Worker worker11 = null;
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker11, project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.lang.String str17 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company15.getProjects();
        java.lang.String str20 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company15.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company15.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) (short) 0);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!:0:0:0:0:0:0", qualificationSet14, (double) 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification82 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company85 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str86 = company85.toString();
        java.lang.String str87 = company85.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet88 = company85.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = company85.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet90 = company85.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company85.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker93 = company1.createWorker("hi!:0:0:0:0", qualificationSet91, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!:0:0:0:0" + "'", str86, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi!:0:0:0:0" + "'", str87, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet88);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertNotNull(projectSet90);
        org.junit.Assert.assertNotNull(qualificationSet91);
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet81 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(workerSet81);
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        java.lang.String str16 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification3.getWorkers();
        java.lang.Class<?> wildcardClass18 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Class<?> wildcardClass7 = projectSet6.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        boolean boolean25 = company22.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company22.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification29 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company22.getEmployedWorkers();
        boolean boolean31 = company7.equals((java.lang.Object) workerSet30);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass26 = company20.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        java.lang.String str17 = qualification14.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification21.addWorker(worker29);
        java.lang.String str31 = qualification21.toString();
        boolean boolean32 = qualification14.equals((java.lang.Object) str31);
        boolean boolean34 = qualification14.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification14.getWorkers();
        boolean boolean36 = company1.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        boolean boolean43 = company39.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company39.getQualifications();
        java.lang.String str46 = company39.getName();
        edu.colostate.cs415.model.Qualification qualification48 = company39.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            qualification14.removeWorker(worker51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertNotNull(qualificationSet49);
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) (short) -1);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass10 = workerSet9.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnavailableWorkers();
        boolean boolean19 = company11.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company11.getEmployedWorkers();
        boolean boolean21 = company8.equals((java.lang.Object) workerSet20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker24 = company1.createWorker("hi!", qualificationSet22, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean7 = company1.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str13 = qualification12.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnassignedWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) company9);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification13);
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company7.getProjects();
        boolean boolean13 = company7.equals((java.lang.Object) (short) -1);
        boolean boolean14 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company7.getProjects();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification25.addWorker(worker28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification25.equals((java.lang.Object) workerSet34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company37.getEmployedWorkers();
        boolean boolean39 = qualification25.equals((java.lang.Object) company37);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getEmployedWorkers();
        java.lang.String str42 = company37.toString();
        boolean boolean43 = company7.equals((java.lang.Object) company37);
        java.lang.String str44 = company7.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualificationSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass8 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            worker14.setSalary((double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: salary can not be a negative number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.lang.String str9 = company1.getName();
        java.lang.String str10 = company1.toString();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification12 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getAssignedWorkers();
        java.lang.String str15 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company7);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.lang.String str21 = company1.getName();
        java.lang.String str22 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification24 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        java.lang.String str20 = qualification9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification9.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0:0:0" + "'", str20, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize8 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project9 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet7, projectSize8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str9 = qualification8.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str9, "hi!:0:0:0:0:0:0");
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        java.lang.String str16 = company9.getName();
        edu.colostate.cs415.model.Qualification qualification18 = company9.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 1L);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company13.createQualification("hi!");
        java.lang.String str20 = company13.getName();
        boolean boolean21 = company1.equals((java.lang.Object) company13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getAssignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification24 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(workerSet22);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = qualification5.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company7.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker20 = company7.createWorker("", qualificationSet18, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company12.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str21 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company12.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker24 = company1.createWorker("hi!", qualificationSet22, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary cannot be less than or equal to zero");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnassignedWorkers();
        java.lang.String str34 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.lang.String str17 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company15.getProjects();
        java.lang.String str20 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company15.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company15.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project27 = company1.createProject("", qualificationSet25, projectSize26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification24.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(qualificationDTO31);
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = company1.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Qualification qualification21 = company1.createQualification("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification21);
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification8.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification8.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification8.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        java.lang.String str31 = qualification3.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification35.toDTO();
        boolean boolean39 = qualification35.equals((java.lang.Object) (short) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO40 = qualification35.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO41 = qualification35.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification35.getWorkers();
        boolean boolean43 = qualification3.equals((java.lang.Object) workerSet42);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualificationDTO40);
        org.junit.Assert.assertNotNull(qualificationDTO41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.lang.String str12 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) (byte) 10);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker11.addProject(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company1.getQualifications();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification17.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification24.addWorker(worker32);
        java.lang.String str34 = qualification24.toString();
        boolean boolean35 = qualification17.equals((java.lang.Object) str34);
        boolean boolean37 = qualification17.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company39.getProjects();
        edu.colostate.cs415.model.Qualification qualification43 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company39.getUnassignedWorkers();
        boolean boolean45 = qualification17.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company39.getQualifications();
        boolean boolean47 = company1.equals((java.lang.Object) company39);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker13 = company1.createWorker("", qualificationSet11, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project20 = company1.createProject("hi!:0:0", qualificationSet18, projectSize19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("", qualificationSet7, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company30.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company30.getEmployedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification41 = company30.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company7.getProjects();
        edu.colostate.cs415.model.Qualification qualification11 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification11.toDTO();
        java.lang.String str14 = qualification11.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification11.toDTO();
        boolean boolean16 = qualification5.equals((java.lang.Object) qualificationDTO15);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO49 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean60 = qualification53.equals((java.lang.Object) qualification58);
        java.lang.String str61 = qualification53.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO62 = qualification53.toDTO();
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        boolean boolean68 = company64.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company64.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company64.getQualifications();
        java.lang.Class<?> wildcardClass71 = qualificationSet70.getClass();
        boolean boolean72 = qualification53.equals((java.lang.Object) qualificationSet70);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO73 = qualification53.toDTO();
        java.lang.String str74 = qualification53.toString();
        java.lang.Class<?> wildcardClass75 = qualification53.getClass();
        boolean boolean76 = qualification3.equals((java.lang.Object) qualification53);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualificationDTO49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO62);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(qualificationSet69);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualificationDTO73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi!" + "'", str74, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company1.getQualifications();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) 'a');
        edu.colostate.cs415.model.Project project26 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker25, project26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company20.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.lang.String str28 = qualification24.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company30.getUnassignedWorkers();
        java.lang.String str34 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        java.lang.String str36 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company30.getAvailableWorkers();
        boolean boolean38 = qualification24.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker43 = null;
        qualification42.addWorker(worker43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification42.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification42.getWorkers();
        boolean boolean47 = qualification24.equals((java.lang.Object) workerSet46);
        edu.colostate.cs415.model.Worker worker48 = null;
        qualification24.addWorker(worker48);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!:0:0" + "'", str36, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company15.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company15.createQualification("hi!");
        java.lang.Object obj20 = null;
        boolean boolean21 = company15.equals(obj20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) '4');
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project27 = company1.createProject("hi!", qualificationSet23, projectSize26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company8.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project19 = company1.createProject("hi!:0:0:0:0", qualificationSet17, projectSize18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        java.lang.String str17 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnavailableWorkers();
        java.lang.String str19 = company10.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0:0:0" + "'", str19, "hi!:0:0:0:0");
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company1.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker7 = null;
        qualification3.addWorker(worker7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = qualification3.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company10.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.lang.String str11 = qualification9.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        java.lang.String str20 = company13.getName();
        edu.colostate.cs415.model.Qualification qualification22 = company13.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company13.getAvailableWorkers();
        boolean boolean24 = qualification9.equals((java.lang.Object) workerSet23);
        java.lang.String str25 = qualification9.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getUnavailableWorkers();
        boolean boolean30 = company27.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company27.getQualifications();
        java.lang.String str33 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company27.getProjects();
        java.lang.String str35 = company27.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company27.getQualifications();
        boolean boolean37 = qualification9.equals((java.lang.Object) qualificationSet36);
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project39 = company1.createProject("", qualificationSet36, projectSize38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getUnavailableWorkers();
        java.lang.String str28 = company20.toString();
        edu.colostate.cs415.model.Project project29 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.start(project29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        boolean boolean9 = company6.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company6.getProjects();
        boolean boolean12 = company6.equals((java.lang.Object) (short) -1);
        java.lang.String str13 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company6.getUnassignedWorkers();
        boolean boolean16 = qualification3.equals((java.lang.Object) company6);
        java.lang.String str17 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.lang.String str14 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company20.getProjects();
        java.lang.String str29 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company20.getProjects();
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.finish(project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(projectSet31);
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company7.createQualification("hi!");
        java.lang.Object obj12 = null;
        boolean boolean13 = company7.equals(obj12);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getAvailableWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Qualification qualification19 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            worker15.setSalary((double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: salary can not be a negative number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        boolean boolean17 = company10.equals((java.lang.Object) 10);
        java.lang.String str18 = company10.toString();
        boolean boolean19 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str24 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) '#');
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker29, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet1 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker3 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet1, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company13.getProjects();
        boolean boolean23 = company1.equals((java.lang.Object) company13);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnassignedWorkers();
        java.lang.String str30 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        java.lang.String str32 = company26.toString();
        edu.colostate.cs415.model.Qualification qualification34 = company26.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company26.getAssignedWorkers();
        boolean boolean36 = company20.equals((java.lang.Object) workerSet35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company20.getProjects();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str43 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company42.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company42.getUnavailableWorkers();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet49, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker53 = company20.createWorker("", qualificationSet49, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet49);
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        java.lang.Class<?> wildcardClass12 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        java.lang.Object obj13 = null;
        boolean boolean14 = company1.equals(obj13);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        boolean boolean31 = company27.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company27.getQualifications();
        boolean boolean34 = company23.equals((java.lang.Object) qualificationSet33);
        edu.colostate.cs415.model.Worker worker36 = company12.createWorker("hi!", qualificationSet33, 100.0d);
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker36, project37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(worker36);
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification13);
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company14.getProjects();
        java.lang.String str19 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company14.getQualifications();
        java.lang.String str24 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project27 = company1.createProject("hi!", qualificationSet25, projectSize26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0:0:0" + "'", str24, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification4);
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet10, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must be positive number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        boolean boolean25 = qualification10.equals((java.lang.Object) boolean24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification10.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification10.getWorkers();
        java.lang.String str28 = qualification10.toString();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company30.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        boolean boolean35 = qualification10.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company30.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) (short) 100);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker38, project39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification8.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) company5);
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company30.getProjects();
        java.lang.String str38 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company30.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company30.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(workerSet40);
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass6 = workerSet5.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        boolean boolean24 = qualification9.equals((java.lang.Object) boolean23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification9.getWorkers();
        java.lang.String str27 = qualification9.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getAvailableWorkers();
        boolean boolean34 = qualification9.equals((java.lang.Object) workerSet33);
        boolean boolean35 = qualification5.equals((java.lang.Object) boolean34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification5.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationDTO36);
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification16.addWorker(worker24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification16.getWorkers();
        boolean boolean27 = qualification9.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification9.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification9.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(qualificationDTO29);
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company11.getQualifications();
        boolean boolean19 = company1.equals((java.lang.Object) company11);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company22.getUnavailableWorkers();
        boolean boolean25 = company22.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 1L);
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker29, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet80 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification82 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO83 = qualification82.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerSet80);
        org.junit.Assert.assertNotNull(qualification82);
        org.junit.Assert.assertNotNull(qualificationDTO83);
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Project project49 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean50 = worker48.willOverload(project49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project can not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(worker48);
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company18.getUnassignedWorkers();
        java.lang.String str22 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company18.getProjects();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company18.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = company13.createWorker("hi!", qualificationSet28, 1.0d);
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker30, project31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(worker30);
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification12.toDTO();
        boolean boolean15 = qualification12.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification19.equals((java.lang.Object) qualification24);
        boolean boolean27 = qualification12.equals((java.lang.Object) boolean26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification12.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification12.getWorkers();
        java.lang.String str30 = qualification12.toString();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        boolean boolean37 = qualification12.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, (double) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker42 = company1.createWorker("hi!:0:0", qualificationSet38, (double) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification14.toDTO();
        boolean boolean17 = qualification14.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification21.equals((java.lang.Object) qualification26);
        boolean boolean29 = qualification14.equals((java.lang.Object) boolean28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification14.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification14.getWorkers();
        java.lang.String str32 = qualification14.toString();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification38 = company34.createQualification("hi!");
        boolean boolean39 = qualification14.equals((java.lang.Object) company34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet40, (double) (short) 100);
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project44 = company1.createProject("", qualificationSet40, projectSize43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company35.getUnassignedWorkers();
        java.lang.String str39 = company35.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company35.getProjects();
        java.lang.String str41 = company35.toString();
        edu.colostate.cs415.model.Qualification qualification43 = company35.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification43.toDTO();
        edu.colostate.cs415.model.Company company46 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company46.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company46.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company46.getAvailableWorkers();
        boolean boolean50 = qualification43.equals((java.lang.Object) workerSet49);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification43.toDTO();
        boolean boolean52 = qualification32.equals((java.lang.Object) qualification43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification43.getWorkers();
        java.lang.String str54 = qualification43.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!:0:0" + "'", str41, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0:0:0" + "'", str54, "hi!:0:0:0:0");
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        java.lang.String str12 = qualification8.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification8.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO13);
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification5.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification5.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass10 = workerSet9.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean8 = company2.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("", qualificationSet10, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.Class<?> wildcardClass26 = projectSet25.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        boolean boolean22 = company1.equals((java.lang.Object) qualification14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getAssignedWorkers();
        java.lang.String str24 = company1.getName();
        java.lang.Class<?> wildcardClass25 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getEmployedWorkers();
        boolean boolean30 = company1.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        boolean boolean35 = company32.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company32.getProjects();
        boolean boolean38 = company32.equals((java.lang.Object) (short) -1);
        java.lang.String str39 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company32.getEmployedWorkers();
        boolean boolean43 = company26.equals((java.lang.Object) company32);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        boolean boolean21 = qualification18.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification18.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company25.getProjects();
        edu.colostate.cs415.model.Qualification qualification29 = company25.createQualification("hi!");
        boolean boolean30 = qualification18.equals((java.lang.Object) company25);
        boolean boolean31 = qualification13.equals((java.lang.Object) boolean30);
        edu.colostate.cs415.model.Qualification qualification33 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company36.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company36.getAvailableWorkers();
        boolean boolean39 = qualification33.equals((java.lang.Object) workerSet38);
        boolean boolean40 = qualification13.equals((java.lang.Object) workerSet38);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        boolean boolean45 = company42.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company42.getQualifications();
        boolean boolean48 = qualification13.equals((java.lang.Object) company42);
        java.lang.String str49 = company42.getName();
        boolean boolean50 = company1.equals((java.lang.Object) company42);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualificationSet47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker14 = null;
        qualification10.addWorker(worker14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        boolean boolean22 = qualification10.equals((java.lang.Object) company17);
        boolean boolean23 = qualification5.equals((java.lang.Object) boolean22);
        edu.colostate.cs415.model.Qualification qualification25 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAvailableWorkers();
        boolean boolean31 = qualification25.equals((java.lang.Object) workerSet30);
        boolean boolean32 = qualification5.equals((java.lang.Object) workerSet30);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        boolean boolean37 = company34.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company34.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company34.getQualifications();
        boolean boolean40 = qualification5.equals((java.lang.Object) company34);
        java.lang.String str41 = company34.getName();
        java.lang.String str42 = company34.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company12.createWorker("hi!", qualificationSet25, (double) (short) 1);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(worker27);
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification13.toDTO();
        boolean boolean16 = qualification13.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        boolean boolean28 = qualification13.equals((java.lang.Object) boolean27);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification13.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification13.getWorkers();
        java.lang.String str31 = qualification13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        java.lang.String str44 = qualification36.toString();
        java.lang.String str45 = qualification36.toString();
        boolean boolean46 = qualification13.equals((java.lang.Object) qualification36);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company48.getUnassignedWorkers();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet53 = company48.getProjects();
        java.lang.String str54 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company48.getEmployedWorkers();
        boolean boolean56 = qualification13.equals((java.lang.Object) workerSet55);
        boolean boolean57 = company1.equals((java.lang.Object) boolean56);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!" + "'", str44, "hi!");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0" + "'", str52, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.lang.String str8 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Worker worker9 = null;
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker9, project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str6 = qualification5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification5.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str6, "hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str28 = company27.toString();
        java.lang.String str29 = company27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company27.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company27.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker36 = company20.createWorker("hi!:0:0:0:0", qualificationSet34, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0:0:0" + "'", str28, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0:0:0" + "'", str29, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        java.lang.String str12 = qualification9.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.lang.String str13 = company1.getName();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        boolean boolean28 = qualification3.equals((java.lang.Object) company23);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification3.toDTO();
        java.lang.String str30 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(workerSet31);
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.lang.String str16 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company11.getQualifications();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification22.addWorker(worker23);
        boolean boolean26 = qualification22.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification22.getWorkers();
        boolean boolean28 = company11.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str31 = company30.toString();
        java.lang.String str32 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company30.getProjects();
        java.lang.String str35 = company30.toString();
        boolean boolean36 = qualification22.equals((java.lang.Object) str35);
        boolean boolean37 = company1.equals((java.lang.Object) boolean36);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        boolean boolean44 = company40.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company40.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company40.getQualifications();
        java.lang.String str47 = company40.getName();
        java.lang.String str48 = company40.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company40.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet50 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker52 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet50, (double) (short) 1);
        edu.colostate.cs415.model.Project project53 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker52, project53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!:0:0:0:0" + "'", str31, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0:0:0" + "'", str32, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0:0:0" + "'", str35, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!" + "'", str47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualificationSet50);
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.lang.Object obj21 = null;
        boolean boolean22 = company16.equals(obj21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company16.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company16.getAvailableWorkers();
        boolean boolean26 = company6.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company6.getProjects();
        java.lang.String str28 = company6.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        boolean boolean28 = qualification8.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification32.addWorker(worker33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification32.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str38 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company37.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getEmployedWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str46 = company45.toString();
        java.lang.String str47 = company45.toString();
        edu.colostate.cs415.model.Qualification qualification49 = company45.createQualification("hi!");
        boolean boolean50 = company37.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company37.createQualification("hi!");
        boolean boolean53 = qualification32.equals((java.lang.Object) qualification52);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification52.getWorkers();
        boolean boolean55 = qualification8.equals((java.lang.Object) workerSet54);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0:0:0" + "'", str46, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0:0:0" + "'", str47, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) (byte) 10);
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getAvailableWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification4.toDTO();
        boolean boolean7 = qualification4.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        boolean boolean19 = qualification4.equals((java.lang.Object) boolean18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification4.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification4.getWorkers();
        java.lang.String str22 = qualification4.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        boolean boolean29 = qualification4.equals((java.lang.Object) company24);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) (short) 100);
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker32.addProject(project33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationSet30);
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.lang.String str16 = company1.toString();
        java.lang.String str17 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker17 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet15, 0.0d);
        edu.colostate.cs415.model.Project project18 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker17, project18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        boolean boolean15 = company2.equals((java.lang.Object) qualificationSet14);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet14, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnavailableWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) workerSet10);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getAssignedWorkers();
        boolean boolean15 = company12.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project18 = company1.createProject("hi!:0:0", qualificationSet16, projectSize17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        java.lang.String str20 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company11.getQualifications();
        edu.colostate.cs415.model.Qualification qualification24 = company11.createQualification("hi!");
        java.lang.String str25 = qualification24.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company4.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company4.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        boolean boolean12 = company4.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company4.getEmployedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company1.getQualifications();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company20.getQualifications();
        java.lang.String str25 = company20.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.lang.Object obj17 = null;
        boolean boolean18 = company12.equals(obj17);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize20 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project21 = company1.createProject("hi!", qualificationSet19, projectSize20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(qualification12);
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        boolean boolean39 = company35.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company35.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0.0f);
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker43, project44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet1 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker3 = new edu.colostate.cs415.model.Worker("", qualificationSet1, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAssignedWorkers();
        boolean boolean10 = company2.equals((java.lang.Object) workerSet9);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project13 = new edu.colostate.cs415.model.Project("", qualificationSet11, projectSize12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        java.lang.String str19 = qualification11.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification11.toDTO();
        java.lang.String str21 = qualification11.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification25.addWorker(worker33);
        java.lang.String str35 = qualification25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification25.getWorkers();
        boolean boolean37 = qualification11.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company39.getUnassignedWorkers();
        java.lang.String str43 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet44 = company39.getProjects();
        java.lang.String str45 = company39.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company39.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company39.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification56 = company54.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification56.getWorkers();
        boolean boolean58 = qualification51.equals((java.lang.Object) qualification56);
        edu.colostate.cs415.model.Worker worker59 = null;
        qualification56.addWorker(worker59);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        boolean boolean66 = qualification56.equals((java.lang.Object) workerSet65);
        edu.colostate.cs415.model.Company company68 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company68.getEmployedWorkers();
        boolean boolean70 = qualification56.equals((java.lang.Object) company68);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = company68.getQualifications();
        boolean boolean72 = company39.equals((java.lang.Object) company68);
        boolean boolean73 = qualification11.equals((java.lang.Object) company68);
        edu.colostate.cs415.model.Qualification qualification75 = company68.createQualification("hi!:0:0:0:0");
        java.lang.String str76 = company68.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet77 = company68.getQualifications();
        edu.colostate.cs415.model.Worker worker79 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet77, (double) 0);
        edu.colostate.cs415.model.Project project80 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker79, project80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualification56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualification75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet77);
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass11 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company20.getQualifications();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        java.lang.String str31 = company26.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company26.getAvailableWorkers();
        java.lang.String str34 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company26.getProjects();
        boolean boolean36 = company20.equals((java.lang.Object) projectSet35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getEmployedWorkers();
        boolean boolean47 = company40.equals((java.lang.Object) 10);
        boolean boolean48 = company38.equals((java.lang.Object) company40);
        java.lang.String str49 = company40.getName();
        boolean boolean50 = company20.equals((java.lang.Object) str49);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification51.toDTO();
        boolean boolean55 = qualification51.equals((java.lang.Object) (short) 1);
        java.lang.String str56 = qualification51.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = qualification51.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO58 = qualification51.toDTO();
        boolean boolean59 = qualification3.equals((java.lang.Object) qualificationDTO58);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationDTO53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationDTO58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(qualification10);
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getAssignedWorkers();
        boolean boolean20 = company1.equals((java.lang.Object) company11);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker14 = null;
        qualification10.addWorker(worker14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        boolean boolean22 = qualification10.equals((java.lang.Object) company17);
        boolean boolean23 = qualification5.equals((java.lang.Object) boolean22);
        edu.colostate.cs415.model.Qualification qualification25 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAvailableWorkers();
        boolean boolean31 = qualification25.equals((java.lang.Object) workerSet30);
        boolean boolean32 = qualification5.equals((java.lang.Object) workerSet30);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        boolean boolean37 = company34.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company34.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company34.getQualifications();
        boolean boolean40 = qualification5.equals((java.lang.Object) company34);
        java.lang.String str41 = company34.getName();
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company44.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company44.getUnassignedWorkers();
        java.lang.String str48 = company44.toString();
        edu.colostate.cs415.model.Qualification qualification50 = company44.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company44.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize52 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project53 = company34.createProject("hi!:0:0:0:0", qualificationSet51, projectSize52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(qualificationSet51);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.lang.String str16 = company1.toString();
        java.lang.String str17 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO36 = qualification35.toDTO();
        boolean boolean38 = qualification35.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean49 = qualification42.equals((java.lang.Object) qualification47);
        boolean boolean50 = qualification35.equals((java.lang.Object) boolean49);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification35.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification35.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification35.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification35.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification35.getWorkers();
        boolean boolean56 = qualification24.equals((java.lang.Object) workerSet55);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification61 = company59.createQualification("hi!");
        boolean boolean63 = company59.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet64 = company59.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet65 = company59.getQualifications();
        java.lang.String str66 = company59.getName();
        java.lang.String str67 = company59.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company59.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet69 = company59.getQualifications();
        edu.colostate.cs415.model.Worker worker71 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet69, (double) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualificationDTO36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(qualificationSet64);
        org.junit.Assert.assertNotNull(qualificationSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "hi!" + "'", str67, "hi!");
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(qualificationSet69);
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str13 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification19.toDTO();
        boolean boolean22 = qualification19.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        boolean boolean34 = qualification19.equals((java.lang.Object) boolean33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification19.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification19.getWorkers();
        java.lang.String str37 = qualification19.toString();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company39.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification43 = company39.createQualification("hi!");
        boolean boolean44 = qualification19.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company39.getQualifications();
        edu.colostate.cs415.model.Worker worker47 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet45, (double) (short) 100);
        edu.colostate.cs415.model.Project project48 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker47, project48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationSet45);
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnavailableWorkers();
        java.lang.String str14 = company6.toString();
        boolean boolean15 = qualification4.equals((java.lang.Object) str14);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.Class<?> wildcardClass11 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean11 = company1.equals((java.lang.Object) qualificationDTO10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        java.lang.String str17 = qualification15.toString();
        java.lang.Object obj18 = null;
        boolean boolean19 = qualification15.equals(obj18);
        boolean boolean20 = company1.equals((java.lang.Object) boolean19);
        edu.colostate.cs415.model.Project project21 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        java.lang.String str31 = qualification24.toString();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getUnavailableWorkers();
        boolean boolean37 = company34.equals((java.lang.Object) "");
        java.lang.String str38 = company34.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company34.getEmployedWorkers();
        java.lang.String str40 = company34.getName();
        java.lang.String str41 = company34.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker44 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet42, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.lang.String str28 = qualification17.toString();
        edu.colostate.cs415.model.Worker worker29 = null;
        qualification17.addWorker(worker29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification17.getWorkers();
        boolean boolean32 = company12.equals((java.lang.Object) workerSet31);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project35 = company1.createProject("", qualificationSet33, projectSize34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        java.lang.String str10 = company3.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company3.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 1L);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet13, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company13.createQualification("hi!");
        java.lang.String str20 = company13.getName();
        boolean boolean21 = company1.equals((java.lang.Object) company13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Worker worker23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassignAll(worker23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(workerSet22);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.lang.String str11 = qualification9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification9.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO13 = qualification9.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationDTO13);
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getUnassignedWorkers();
        java.lang.String str17 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company12.getQualifications();
        boolean boolean20 = company1.equals((java.lang.Object) company12);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getEmployedWorkers();
        boolean boolean30 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company1.getAvailableWorkers();
        boolean boolean33 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str37 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company36.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company36.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company36.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company36.getEmployedWorkers();
        java.lang.String str43 = company36.toString();
        edu.colostate.cs415.model.Qualification qualification45 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company36.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!:0:0", qualificationSet46, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.lang.String str9 = company1.getName();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        boolean boolean18 = company14.equals((java.lang.Object) 10L);
        java.lang.String str19 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification29.addWorker(worker32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification29.equals((java.lang.Object) workerSet38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getEmployedWorkers();
        boolean boolean43 = qualification29.equals((java.lang.Object) company41);
        edu.colostate.cs415.model.Qualification qualification45 = company41.createQualification("hi!");
        boolean boolean46 = company14.equals((java.lang.Object) qualification45);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company14.getQualifications();
        java.lang.String str50 = company14.getName();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str54 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company53.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification57 = company53.createQualification("hi!");
        java.lang.Object obj58 = null;
        boolean boolean59 = company53.equals(obj58);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet60 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker62 = company14.createWorker("hi!", qualificationSet60, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker64 = company1.createWorker("", qualificationSet60, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0:0:0" + "'", str54, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(qualificationSet60);
        org.junit.Assert.assertNotNull(worker62);
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        java.lang.String str15 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str18 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        boolean boolean36 = qualification33.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean47 = qualification40.equals((java.lang.Object) qualification45);
        boolean boolean48 = qualification33.equals((java.lang.Object) boolean47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification33.getWorkers();
        java.lang.String str50 = qualification33.toString();
        boolean boolean51 = qualification24.equals((java.lang.Object) str50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification24.toDTO();
        java.lang.String str53 = qualification24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification24.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!" + "'", str53, "hi!");
        org.junit.Assert.assertNotNull(workerSet54);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        boolean boolean24 = qualification9.equals((java.lang.Object) boolean23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification9.getWorkers();
        java.lang.String str27 = qualification9.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getAvailableWorkers();
        boolean boolean34 = qualification9.equals((java.lang.Object) workerSet33);
        boolean boolean35 = qualification5.equals((java.lang.Object) boolean34);
        java.lang.String str36 = qualification5.toString();
        java.lang.String str37 = qualification5.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO38 = qualification5.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification5.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO38);
        org.junit.Assert.assertNotNull(workerSet39);
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company4.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company4.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company4.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize11 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project12 = company1.createProject("hi!", qualificationSet10, projectSize11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company4.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company4.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        boolean boolean12 = company4.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company4.getEmployedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company1.getProjects();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(projectSet16);
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker7 = null;
        qualification3.addWorker(worker7);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = qualification3.equals((java.lang.Object) company10);
        java.lang.String str16 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = company2.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company2.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company19.getProjects();
        edu.colostate.cs415.model.Qualification qualification23 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        boolean boolean25 = qualification17.equals((java.lang.Object) company19);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company19.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker28 = new edu.colostate.cs415.model.Worker("", qualificationSet26, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            worker9.setSalary((double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: salary can not be a negative number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize11 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project12 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet10, projectSize11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project34 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        java.lang.String str15 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company1.getUnassignedWorkers();
        java.lang.String str38 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAssignedWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 12);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker15, project16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company29.getProjects();
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company29.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet35, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        boolean boolean9 = company5.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company5.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company5.getQualifications();
        boolean boolean12 = company1.equals((java.lang.Object) qualificationSet11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification21.addWorker(worker24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification21.equals((java.lang.Object) workerSet30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getEmployedWorkers();
        boolean boolean35 = qualification21.equals((java.lang.Object) company33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company33.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company33.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet38 = company33.getProjects();
        edu.colostate.cs415.model.Qualification qualification40 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company33.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company33.getProjects();
        java.lang.String str43 = company33.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company33.getAssignedWorkers();
        boolean boolean45 = company1.equals((java.lang.Object) workerSet44);
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(projectSet38);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!" + "'", str43, "hi!");
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.lang.String str10 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company9.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker18 = company1.createWorker("hi!", qualificationSet16, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company1.getProjects();
        edu.colostate.cs415.model.Worker worker12 = null;
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker12, project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company6.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company6.getQualifications();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company26.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 10.0f);
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker31, project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationSet29);
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str7 = company6.toString();
        boolean boolean8 = company1.equals((java.lang.Object) str7);
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company16.getProjects();
        boolean boolean18 = company12.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.lang.String str20 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company12.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker23 = company1.createWorker("hi!", qualificationSet21, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification24.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification24.toString();
        java.lang.String str38 = qualification24.toString();
        java.lang.String str39 = qualification24.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company48.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company48.getProjects();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company48.getAssignedWorkers();
        boolean boolean54 = company41.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company48.getQualifications();
        boolean boolean56 = qualification24.equals((java.lang.Object) company48);
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company58.getUnassignedWorkers();
        java.lang.String str62 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet63 = company58.getProjects();
        java.lang.String str64 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = company58.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = company58.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = company58.getUnassignedWorkers();
        java.lang.String str68 = company58.toString();
        edu.colostate.cs415.model.Qualification qualification70 = company58.createQualification("hi!:0:0:0:0");
        boolean boolean71 = qualification24.equals((java.lang.Object) qualification70);
        java.lang.String str72 = qualification70.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0" + "'", str52, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!:0:0" + "'", str64, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "hi!:0:0" + "'", str68, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "hi!:0:0:0:0" + "'", str72, "hi!:0:0:0:0");
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company30.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company30.getQualifications();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = worker11.willOverload(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project can not be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("", qualificationSet11, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company24.getProjects();
        boolean boolean30 = qualification8.equals((java.lang.Object) projectSet29);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0:0:0" + "'", str25, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company14.createWorker("hi!", qualificationSet27, (double) (short) 1);
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker29, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(worker29);
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        java.lang.String str10 = company3.getName();
        java.lang.String str11 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (short) 1);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet13, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification3.addWorker(worker20);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company11.getQualifications();
        java.lang.String str14 = company11.getName();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getUnassignedWorkers();
        boolean boolean24 = company11.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company16.getAvailableWorkers();
        java.lang.String str27 = company16.getName();
        boolean boolean28 = company1.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company16.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str13 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnassignedWorkers();
        java.lang.String str15 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company30.getProjects();
        java.lang.String str34 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company30.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company30.getEmployedWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str40 = company39.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company39.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company39.getQualifications();
        boolean boolean43 = company30.equals((java.lang.Object) qualificationSet42);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker45 = company20.createWorker("hi!", qualificationSet42, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.lang.String str12 = company3.getName();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        boolean boolean18 = company15.equals((java.lang.Object) "");
        java.lang.String str19 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company15.getProjects();
        java.lang.String str22 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company15.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker25 = company3.createWorker("hi!:0:0:0:0:0:0", qualificationSet23, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getAssignedWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) workerSet8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualification10);
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getAssignedWorkers();
        boolean boolean39 = qualification3.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company31.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company31.getUnassignedWorkers();
        java.lang.String str42 = company31.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification3.getWorkers();
        java.lang.String str49 = qualification3.toString();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company52.getUnavailableWorkers();
        boolean boolean55 = company52.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company52.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company52.getQualifications();
        java.lang.String str58 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company52.getProjects();
        java.lang.String str60 = company52.getName();
        java.lang.String str61 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company52.getQualifications();
        edu.colostate.cs415.model.Worker worker64 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet62, (double) 10L);
        // The following exception was thrown during execution in test generation
        try {
            qualification3.removeWorker(worker64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!:0:0" + "'", str61, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet62);
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        java.lang.String str31 = qualification24.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company33.getUnassignedWorkers();
        java.lang.String str37 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company33.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company33.getEmployedWorkers();
        boolean boolean40 = qualification24.equals((java.lang.Object) company33);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company43.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet48, (double) 10L);
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            company33.assign(worker50, project51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualificationSet48);
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        boolean boolean24 = qualification16.equals((java.lang.Object) company18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company18.getQualifications();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company28.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company28.getUnavailableWorkers();
        boolean boolean36 = company18.equals((java.lang.Object) company28);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet8, (double) 'a');
        // The following exception was thrown during execution in test generation
        try {
            worker10.setSalary((-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: salary can not be a negative number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company13.createQualification("hi!");
        java.lang.String str20 = company13.getName();
        boolean boolean21 = company1.equals((java.lang.Object) company13);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str25 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification28 = company24.createQualification("hi!");
        java.lang.Object obj29 = null;
        boolean boolean30 = company24.equals(obj29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) (byte) 10);
        edu.colostate.cs415.model.Project project34 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker33, project34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0:0:0" + "'", str25, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationSet31);
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("", qualificationSet9, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification24.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getUnavailableWorkers();
        java.lang.String str14 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet15, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("", qualificationSet12, (double) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        boolean boolean15 = company12.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company12.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 1L);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker19, project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        java.lang.String str20 = company11.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification30.addWorker(worker33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification30.equals((java.lang.Object) workerSet39);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getEmployedWorkers();
        boolean boolean44 = qualification30.equals((java.lang.Object) company42);
        edu.colostate.cs415.model.Qualification qualification46 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet47 = company42.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize48 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project49 = company11.createProject("hi!:0:0:0:0:0:0", qualificationSet47, projectSize48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertNotNull(qualificationSet47);
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.lang.String str15 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 100L);
        edu.colostate.cs415.model.Project project21 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker20, project21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        java.lang.String str15 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification3.getWorkers();
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification3.addWorker(worker17);
        java.lang.Class<?> wildcardClass19 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company30.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnavailableWorkers();
        java.lang.String str19 = company15.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getUnassignedWorkers();
        java.lang.String str21 = company15.getName();
        edu.colostate.cs415.model.Qualification qualification23 = company15.createQualification("hi!:0:0:0:0:0:0");
        boolean boolean24 = company1.equals((java.lang.Object) qualification23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(workerSet27);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        java.lang.String str21 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification13.toDTO();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        boolean boolean28 = company24.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company24.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company24.getQualifications();
        java.lang.Class<?> wildcardClass31 = qualificationSet30.getClass();
        boolean boolean32 = qualification13.equals((java.lang.Object) qualificationSet30);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification13.toDTO();
        boolean boolean34 = company8.equals((java.lang.Object) qualificationDTO33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company8.getUnassignedWorkers();
        boolean boolean36 = company1.equals((java.lang.Object) company8);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification24.equals((java.lang.Object) qualification34);
        java.lang.String str37 = qualification24.toString();
        java.lang.String str38 = qualification24.toString();
        java.lang.String str39 = qualification24.toString();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company41.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company48.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company48.getProjects();
        java.lang.String str52 = company48.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company48.getAssignedWorkers();
        boolean boolean54 = company41.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company48.getQualifications();
        boolean boolean56 = qualification24.equals((java.lang.Object) company48);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO57 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str60 = company59.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet61 = company59.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company59.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company59.getQualifications();
        java.lang.String str64 = company59.getName();
        edu.colostate.cs415.model.Qualification qualification66 = company59.createQualification("hi!");
        boolean boolean67 = qualification24.equals((java.lang.Object) "hi!");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!:0:0" + "'", str52, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationDTO57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0" + "'", str60, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertNotNull(qualificationSet63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "hi!" + "'", str64, "hi!");
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company21.getUnassignedWorkers();
        java.lang.String str25 = company21.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company21.getProjects();
        java.lang.String str27 = company21.toString();
        edu.colostate.cs415.model.Qualification qualification29 = company21.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO30 = qualification29.toDTO();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company32.getAvailableWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) workerSet35);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification29.getWorkers();
        boolean boolean38 = company7.equals((java.lang.Object) qualification29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company7.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        boolean boolean46 = company42.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company42.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company42.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet48, (double) 0.0f);
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            company7.assign(worker50, project51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(qualificationDTO30);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification5.equals((java.lang.Object) workerSet10);
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = company13.equals((java.lang.Object) qualification20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification20.getWorkers();
        java.lang.String str33 = qualification20.toString();
        boolean boolean34 = qualification5.equals((java.lang.Object) str33);
        java.lang.String str35 = qualification5.toString();
        java.lang.String str36 = qualification5.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        java.lang.String str12 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification16.addWorker(worker24);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification16.getWorkers();
        boolean boolean27 = qualification9.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification9.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company31.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company38.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company38.getProjects();
        java.lang.String str42 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company38.getAssignedWorkers();
        boolean boolean44 = company31.equals((java.lang.Object) company38);
        boolean boolean45 = qualification9.equals((java.lang.Object) company38);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company38.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company38.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(workerSet47);
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        java.lang.String str25 = qualification17.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification17.toDTO();
        java.lang.String str27 = qualification17.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification31.equals((java.lang.Object) qualification36);
        edu.colostate.cs415.model.Worker worker39 = null;
        qualification31.addWorker(worker39);
        java.lang.String str41 = qualification31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification31.getWorkers();
        boolean boolean43 = qualification17.equals((java.lang.Object) qualification31);
        boolean boolean44 = qualification3.equals((java.lang.Object) boolean43);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO45 = qualification3.toDTO();
        java.lang.String str46 = qualification3.toString();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        boolean boolean53 = company49.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company49.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet55 = company49.getQualifications();
        java.lang.String str56 = company49.getName();
        edu.colostate.cs415.model.Qualification qualification58 = company49.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company49.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet59, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            qualification3.removeWorker(worker61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationDTO45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!" + "'", str46, "hi!");
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertNotNull(qualificationSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(qualificationSet59);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company49.getUnassignedWorkers();
        java.lang.String str53 = company49.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet54 = company49.getProjects();
        java.lang.String str55 = company49.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company49.getEmployedWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str59 = company58.toString();
        java.lang.String str60 = company58.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = company58.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet62 = company58.getUnavailableWorkers();
        boolean boolean63 = company49.equals((java.lang.Object) company58);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet64 = company58.getProjects();
        boolean boolean65 = qualification3.equals((java.lang.Object) company58);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO66 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification71 = company69.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = qualification71.getWorkers();
        edu.colostate.cs415.model.Company company74 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification76 = company74.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = qualification76.getWorkers();
        boolean boolean78 = qualification71.equals((java.lang.Object) qualification76);
        edu.colostate.cs415.model.Worker worker79 = null;
        qualification76.addWorker(worker79);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification84 = company82.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet85 = qualification84.getWorkers();
        boolean boolean86 = qualification76.equals((java.lang.Object) workerSet85);
        edu.colostate.cs415.model.Company company88 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet89 = company88.getEmployedWorkers();
        boolean boolean90 = qualification76.equals((java.lang.Object) company88);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet91 = company88.getQualifications();
        edu.colostate.cs415.model.Worker worker93 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet91, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification3.removeWorker(worker93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "hi!:0:0" + "'", str53, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0" + "'", str55, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0:0:0" + "'", str59, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!:0:0:0:0" + "'", str60, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertNotNull(workerSet62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(projectSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(qualificationDTO66);
        org.junit.Assert.assertNotNull(qualification71);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(qualification84);
        org.junit.Assert.assertNotNull(workerSet85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(workerSet89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(qualificationSet91);
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass11 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company13.getProjects();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company22.getAssignedWorkers();
        java.lang.String str28 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = company13.createWorker("hi!", qualificationSet29, (double) 100);
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker31, project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertNotNull(worker31);
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification5.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification5.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Project project3 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet11, 0.0d);
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker13, project14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification9.addWorker(worker17);
        java.lang.String str19 = qualification9.toString();
        java.lang.String str20 = qualification9.toString();
        boolean boolean21 = qualification3.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification25.addWorker(worker33);
        java.lang.Class<?> wildcardClass35 = qualification25.getClass();
        boolean boolean36 = qualification3.equals((java.lang.Object) wildcardClass35);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification3.addWorker(worker37);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        boolean boolean9 = company5.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company5.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company5.getQualifications();
        boolean boolean12 = company1.equals((java.lang.Object) qualificationSet11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company17.getUnassignedWorkers();
        java.lang.String str27 = company17.toString();
        boolean boolean28 = qualification15.equals((java.lang.Object) company17);
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.lang.Object obj17 = null;
        boolean boolean18 = company12.equals(obj17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) '4');
        edu.colostate.cs415.model.Project project23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker22, project23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) 10L);
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker16, project17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }
}

