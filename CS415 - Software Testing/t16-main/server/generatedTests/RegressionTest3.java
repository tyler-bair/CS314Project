import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        java.lang.String str18 = company14.getName();
        boolean boolean19 = company8.equals((java.lang.Object) company14);
        boolean boolean20 = qualification6.equals((java.lang.Object) company14);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification6.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationDTO21);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company8.createQualification("hi!");
        java.lang.Object obj13 = null;
        boolean boolean14 = company8.equals(obj13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getAssignedWorkers();
        boolean boolean16 = qualification5.equals((java.lang.Object) company8);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str20 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company19.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            qualification5.removeWorker(worker24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0:0:0" + "'", str20, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet1 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker3 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet1, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.lang.Class<?> wildcardClass14 = company9.getClass();
        boolean boolean15 = company1.equals((java.lang.Object) wildcardClass14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        boolean boolean19 = company13.equals((java.lang.Object) company17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.lang.String str21 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize23 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project24 = company1.createProject("", qualificationSet22, projectSize23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        boolean boolean16 = company12.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, 0.0d);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker19, project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass10 = workerSet9.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        boolean boolean15 = company11.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 'a');
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker19, project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company17.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project22 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet20, projectSize21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        boolean boolean17 = company13.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        java.lang.String str20 = company13.getName();
        java.lang.String str21 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker25 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet23, (double) (short) 1);
        edu.colostate.cs415.model.Project project26 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker25, project26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("", qualificationSet11, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass11 = workerSet10.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Class<?> wildcardClass6 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.lang.String str18 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification29.addWorker(worker32);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        boolean boolean39 = qualification29.equals((java.lang.Object) workerSet38);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company41.getEmployedWorkers();
        boolean boolean43 = qualification29.equals((java.lang.Object) company41);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company41.getQualifications();
        boolean boolean45 = company12.equals((java.lang.Object) company41);
        java.lang.Class<?> wildcardClass46 = company41.getClass();
        boolean boolean47 = company1.equals((java.lang.Object) company41);
        java.lang.String str48 = company1.getName();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company50.getUnassignedWorkers();
        java.lang.String str54 = company50.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company50.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company50.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company50.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company50.getEmployedWorkers();
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet62 = company61.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet63 = company61.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        boolean boolean69 = company65.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company65.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = company65.getQualifications();
        boolean boolean72 = company61.equals((java.lang.Object) qualificationSet71);
        edu.colostate.cs415.model.Worker worker74 = company50.createWorker("hi!", qualificationSet71, 100.0d);
        edu.colostate.cs415.model.Project project75 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker74, project75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!:0:0" + "'", str54, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(projectSet62);
        org.junit.Assert.assertNotNull(workerSet63);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(worker74);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification4.addWorker(worker5);
        java.lang.String str7 = qualification4.toString();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification4.toDTO();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        java.lang.String str23 = qualification15.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO24 = qualification15.toDTO();
        java.lang.String str25 = qualification15.toString();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.model.Worker worker37 = null;
        qualification29.addWorker(worker37);
        java.lang.String str39 = qualification29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification29.getWorkers();
        boolean boolean41 = qualification15.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean62 = qualification55.equals((java.lang.Object) qualification60);
        edu.colostate.cs415.model.Worker worker63 = null;
        qualification60.addWorker(worker63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean70 = qualification60.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getEmployedWorkers();
        boolean boolean74 = qualification60.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company72.getQualifications();
        boolean boolean76 = company43.equals((java.lang.Object) company72);
        boolean boolean77 = qualification15.equals((java.lang.Object) company72);
        edu.colostate.cs415.model.Qualification qualification79 = company72.createQualification("hi!:0:0:0:0");
        java.lang.String str80 = company72.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet81 = company72.getQualifications();
        edu.colostate.cs415.model.Worker worker83 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet81, (double) 0);
        edu.colostate.cs415.model.Project project84 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker83, project84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!" + "'", str39, "hi!");
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0" + "'", str49, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(qualification79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet81);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 'a');
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        boolean boolean16 = qualification9.equals((java.lang.Object) company12);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company19.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification27.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification32.addWorker(worker35);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        boolean boolean42 = qualification32.equals((java.lang.Object) workerSet41);
        edu.colostate.cs415.model.Company company44 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company44.getEmployedWorkers();
        boolean boolean46 = qualification32.equals((java.lang.Object) company44);
        edu.colostate.cs415.model.Qualification qualification48 = company44.createQualification("hi!");
        boolean boolean49 = company19.equals((java.lang.Object) company44);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company19.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company19.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company19.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet53 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project55 = company12.createProject("", qualificationSet53, projectSize54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(qualification48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertNotNull(qualificationSet53);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        java.lang.String str15 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.lang.String str7 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        java.lang.String str21 = qualification8.toString();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification8.toDTO();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        boolean boolean17 = company10.equals((java.lang.Object) 10);
        java.lang.String str18 = company10.toString();
        boolean boolean19 = company1.equals((java.lang.Object) company10);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 0L);
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker30, project31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO31 = qualification24.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualificationDTO31);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification24.equals((java.lang.Object) qualification34);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO37 = qualification34.toDTO();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        boolean boolean41 = qualification34.equals((java.lang.Object) workerSet40);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualificationDTO37);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        boolean boolean28 = company25.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company25.getProjects();
        boolean boolean32 = qualification3.equals((java.lang.Object) company25);
        java.lang.Object obj33 = null;
        boolean boolean34 = company25.equals(obj33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company25.getAvailableWorkers();
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company38.getProjects();
        edu.colostate.cs415.model.Qualification qualification42 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company38.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker46 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet44, (double) '4');
        edu.colostate.cs415.model.Project project47 = null;
        // The following exception was thrown during execution in test generation
        try {
            company25.unassign(worker46, project47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationSet44);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str20 = company19.toString();
        java.lang.String str21 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company19.getUnavailableWorkers();
        java.lang.String str25 = company19.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company19.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize28 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project29 = company1.createProject("hi!:0:0:0:0", qualificationSet27, projectSize28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0:0:0" + "'", str20, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0:0:0" + "'", str21, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass7 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Worker worker12 = null;
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker12, project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualification11);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = new edu.colostate.cs415.model.Project("hi!", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) company5);
        java.lang.String str12 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.lang.String str28 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getUnassignedWorkers();
        java.lang.String str35 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company31.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company31.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company31.getAssignedWorkers();
        boolean boolean42 = qualification24.equals((java.lang.Object) workerSet41);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!" + "'", str28, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        qualification3.addWorker(worker4);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getEmployedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.lang.String str18 = company16.toString();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        boolean boolean21 = company8.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company8.createQualification("hi!");
        boolean boolean24 = qualification3.equals((java.lang.Object) qualification23);
        java.lang.String str25 = qualification23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification23.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getAssignedWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker35 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet33, (double) 12);
        // The following exception was thrown during execution in test generation
        try {
            qualification23.removeWorker(worker35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company15.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company15.createQualification("hi!");
        java.lang.Object obj20 = null;
        boolean boolean21 = company15.equals(obj20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company15.getAssignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company24.getUnassignedWorkers();
        java.lang.String str28 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company24.getProjects();
        java.lang.String str30 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company24.getEmployedWorkers();
        java.lang.String str33 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company24.getAssignedWorkers();
        boolean boolean35 = company15.equals((java.lang.Object) workerSet34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize37 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project38 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet36, projectSize37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        java.lang.String str21 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification13.toDTO();
        java.lang.String str23 = qualification13.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification27.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification27.addWorker(worker35);
        java.lang.String str37 = qualification27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification27.getWorkers();
        boolean boolean39 = qualification13.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.lang.String str45 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.String str47 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company41.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean60 = qualification53.equals((java.lang.Object) qualification58);
        edu.colostate.cs415.model.Worker worker61 = null;
        qualification58.addWorker(worker61);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = qualification66.getWorkers();
        boolean boolean68 = qualification58.equals((java.lang.Object) workerSet67);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company70.getEmployedWorkers();
        boolean boolean72 = qualification58.equals((java.lang.Object) company70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company70.getQualifications();
        boolean boolean74 = company41.equals((java.lang.Object) company70);
        boolean boolean75 = qualification13.equals((java.lang.Object) company70);
        edu.colostate.cs415.model.Qualification qualification77 = company70.createQualification("hi!:0:0:0:0");
        java.lang.String str78 = company70.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = company70.getQualifications();
        edu.colostate.cs415.model.Worker worker81 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet79, (double) 0);
        edu.colostate.cs415.model.Project project82 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker81, project82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet79);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str11 = qualification10.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str11, "hi!:0:0:0:0:0:0");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        edu.colostate.cs415.model.Company company82 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet83 = company82.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet84 = company82.getAvailableWorkers();
        java.lang.String str85 = company82.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet86 = company82.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize87 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project88 = company1.createProject("hi!:0:0", qualificationSet86, projectSize87);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerSet83);
        org.junit.Assert.assertNotNull(workerSet84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "hi!:0:0" + "'", str85, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet86);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        edu.colostate.cs415.model.Qualification qualification14 = company10.createQualification("hi!");
        boolean boolean15 = company2.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company2.createQualification("hi!");
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company19.getProjects();
        edu.colostate.cs415.model.Qualification qualification23 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company19.getQualifications();
        boolean boolean25 = qualification17.equals((java.lang.Object) company19);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project28 = new edu.colostate.cs415.model.Project("hi!", qualificationSet26, projectSize27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualificationSet26);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.toString();
        edu.colostate.cs415.model.Project project5 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company30.getProjects();
        java.lang.String str38 = company30.toString();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company40.getQualifications();
        boolean boolean44 = company30.equals((java.lang.Object) qualificationSet43);
        edu.colostate.cs415.model.Project project45 = null;
        // The following exception was thrown during execution in test generation
        try {
            company30.start(project45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification6.toDTO();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker34 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet32, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification6.removeWorker(worker34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationSet32);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company23.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        boolean boolean28 = qualification3.equals((java.lang.Object) company23);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company30.getUnassignedWorkers();
        java.lang.String str34 = company30.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company30.getEmployedWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker45 = company30.createWorker("hi!", qualificationSet43, (double) (short) 1);
        edu.colostate.cs415.model.Project project46 = null;
        // The following exception was thrown during execution in test generation
        try {
            company23.unassign(worker45, project46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(qualificationSet43);
        org.junit.Assert.assertNotNull(worker45);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Worker worker8 = null;
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker8, project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification7);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize11 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project12 = new edu.colostate.cs415.model.Project("hi!", qualificationSet10, projectSize11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        boolean boolean11 = qualification8.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification8.getWorkers();
        boolean boolean13 = company1.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = company15.createWorker("hi!", qualificationSet30, 1.0d);
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker32, project33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(worker32);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        boolean boolean28 = company25.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification30 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company25.getProjects();
        boolean boolean32 = qualification3.equals((java.lang.Object) company25);
        java.lang.String str33 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean46 = qualification39.equals((java.lang.Object) qualification44);
        edu.colostate.cs415.model.Worker worker47 = null;
        qualification44.addWorker(worker47);
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        boolean boolean54 = qualification44.equals((java.lang.Object) workerSet53);
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company56.getEmployedWorkers();
        boolean boolean58 = qualification44.equals((java.lang.Object) company56);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet59 = company56.getQualifications();
        edu.colostate.cs415.model.Worker worker61 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet59, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification3.removeWorker(worker61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(qualificationSet59);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!");
        java.lang.String str13 = qualification12.toString();
        java.lang.String str14 = qualification12.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.lang.String str14 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company12.getProjects();
        java.lang.String str17 = company12.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company1.createProject("", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.lang.String str4 = company1.toString();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification14 = company7.createQualification("hi!");
        java.lang.Class<?> wildcardClass15 = qualification14.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) wildcardClass15);
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(projectSet6);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company31.getProjects();
        edu.colostate.cs415.model.Qualification qualification35 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company31.getProjects();
        java.lang.String str37 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company31.getAssignedWorkers();
        boolean boolean39 = qualification3.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet40);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.lang.String str3 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        java.lang.String str17 = company10.getName();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company20.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        java.lang.Object obj25 = null;
        boolean boolean26 = company20.equals(obj25);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company20.getQualifications();
        edu.colostate.cs415.model.Worker worker30 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet28, (double) 100.0f);
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            company10.assign(worker30, project31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0:0:0" + "'", str21, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker21 = company1.createWorker("hi!:0:0", qualificationSet19, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification17);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project18 = company1.createProject("hi!:0:0", qualificationSet16, projectSize17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean8 = company2.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize11 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project12 = new edu.colostate.cs415.model.Project("hi!", qualificationSet10, projectSize11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification27.addWorker(worker30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification35.getWorkers();
        boolean boolean37 = qualification27.equals((java.lang.Object) workerSet36);
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company39.getEmployedWorkers();
        boolean boolean41 = qualification27.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company39.getQualifications();
        boolean boolean43 = company10.equals((java.lang.Object) company39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company39.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company39.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company39.getProjects();
        java.lang.String str47 = company39.toString();
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company49.getQualifications();
        boolean boolean53 = company39.equals((java.lang.Object) qualificationSet52);
        edu.colostate.cs415.model.ProjectSize projectSize54 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project55 = company1.createProject("", qualificationSet52, projectSize54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(qualificationSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) company6);
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification14.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification14.toDTO();
        java.lang.String str24 = qualification14.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification28.addWorker(worker36);
        java.lang.String str38 = qualification28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification28.getWorkers();
        boolean boolean40 = qualification14.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnassignedWorkers();
        java.lang.String str46 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company42.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean61 = qualification54.equals((java.lang.Object) qualification59);
        edu.colostate.cs415.model.Worker worker62 = null;
        qualification59.addWorker(worker62);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        boolean boolean69 = qualification59.equals((java.lang.Object) workerSet68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getEmployedWorkers();
        boolean boolean73 = qualification59.equals((java.lang.Object) company71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = company71.getQualifications();
        boolean boolean75 = company42.equals((java.lang.Object) company71);
        boolean boolean76 = qualification14.equals((java.lang.Object) company71);
        edu.colostate.cs415.model.Qualification qualification78 = company71.createQualification("hi!:0:0:0:0");
        java.lang.String str79 = company71.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker82 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet80, (double) 0);
        edu.colostate.cs415.model.Project project83 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker82, project83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualificationSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet80);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.lang.String str18 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = company7.createWorker("hi!", qualificationSet22, 1.0d);
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker24, project25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(worker24);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.lang.String str20 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification3.toDTO();
        java.lang.String str22 = qualification3.toString();
        java.lang.String str23 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str8 = qualification7.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.lang.String str5 = company1.toString();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company4.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company4.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        boolean boolean12 = company4.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company4.getEmployedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getAvailableWorkers();
        java.lang.String str21 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company18.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company1.createProject("hi!:0:0", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification17 = company13.createQualification("hi!");
        java.lang.Object obj18 = null;
        boolean boolean19 = company13.equals(obj18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 100.0f);
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker23, project24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.finish(project25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification17.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company23.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker31 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet29, (double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            qualification17.removeWorker(worker31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertNotNull(qualificationSet29);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company14.getProjects();
        java.lang.String str20 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification31.addWorker(worker34);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification31.equals((java.lang.Object) workerSet40);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company43.getEmployedWorkers();
        boolean boolean45 = qualification31.equals((java.lang.Object) company43);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company43.getQualifications();
        boolean boolean47 = company14.equals((java.lang.Object) company43);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company43.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet49 = company43.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet50 = company43.getProjects();
        java.lang.String str51 = company43.toString();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company53.getQualifications();
        boolean boolean57 = company43.equals((java.lang.Object) qualificationSet56);
        edu.colostate.cs415.model.ProjectSize projectSize58 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project59 = company1.createProject("", qualificationSet56, projectSize58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(projectSet49);
        org.junit.Assert.assertNotNull(projectSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0" + "'", str51, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(qualificationSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company1.getQualifications();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        boolean boolean19 = company15.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) 10L);
        edu.colostate.cs415.model.Project project23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker22, project23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        java.lang.String str22 = qualification14.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification14.toDTO();
        java.lang.String str24 = qualification14.toString();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = qualification33.getWorkers();
        boolean boolean35 = qualification28.equals((java.lang.Object) qualification33);
        edu.colostate.cs415.model.Worker worker36 = null;
        qualification28.addWorker(worker36);
        java.lang.String str38 = qualification28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification28.getWorkers();
        boolean boolean40 = qualification14.equals((java.lang.Object) qualification28);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getUnassignedWorkers();
        java.lang.String str46 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet47 = company42.getProjects();
        java.lang.String str48 = company42.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company42.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = qualification54.getWorkers();
        edu.colostate.cs415.model.Company company57 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification59 = company57.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = qualification59.getWorkers();
        boolean boolean61 = qualification54.equals((java.lang.Object) qualification59);
        edu.colostate.cs415.model.Worker worker62 = null;
        qualification59.addWorker(worker62);
        edu.colostate.cs415.model.Company company65 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification67 = company65.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = qualification67.getWorkers();
        boolean boolean69 = qualification59.equals((java.lang.Object) workerSet68);
        edu.colostate.cs415.model.Company company71 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet72 = company71.getEmployedWorkers();
        boolean boolean73 = qualification59.equals((java.lang.Object) company71);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet74 = company71.getQualifications();
        boolean boolean75 = company42.equals((java.lang.Object) company71);
        boolean boolean76 = qualification14.equals((java.lang.Object) company71);
        edu.colostate.cs415.model.Qualification qualification78 = company71.createQualification("hi!:0:0:0:0");
        java.lang.String str79 = company71.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet80 = company71.getQualifications();
        edu.colostate.cs415.model.Worker worker82 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet80, (double) 0);
        edu.colostate.cs415.model.Project project83 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker82, project83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!:0:0" + "'", str48, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(qualification67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(workerSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(qualificationSet74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(qualification78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi!" + "'", str79, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet80);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company12.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company22.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company12.createWorker("hi!", qualificationSet25, (double) (short) 1);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(worker27);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet1 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker3 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet1, (double) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company12.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project18 = company1.createProject("", qualificationSet16, projectSize17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.lang.String str5 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = null;
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = company1.createProject("", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnassignedWorkers();
        boolean boolean13 = company1.equals((java.lang.Object) workerSet12);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(projectSet14);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.Class<?> wildcardClass11 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company13.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker21 = company1.createWorker("hi!", qualificationSet19, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company4.getUnassignedWorkers();
        java.lang.String str8 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company4.getEmployedWorkers();
        boolean boolean11 = company4.equals((java.lang.Object) 10);
        boolean boolean12 = company2.equals((java.lang.Object) company4);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = new edu.colostate.cs415.model.Project("", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.lang.String str14 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company8.getProjects();
        java.lang.String str18 = company8.getName();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        boolean boolean26 = company8.equals((java.lang.Object) projectSet25);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company8.getUnassignedWorkers();
        java.lang.String str29 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company8.getProjects();
        boolean boolean31 = company1.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company8.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(workerSet32);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAvailableWorkers();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize8 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project9 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet7, projectSize8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnassignedWorkers();
        java.lang.String str30 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        java.lang.String str32 = company26.toString();
        edu.colostate.cs415.model.Qualification qualification34 = company26.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company26.getAssignedWorkers();
        boolean boolean36 = company20.equals((java.lang.Object) workerSet35);
        java.lang.String str37 = company20.getName();
        java.lang.String str38 = company20.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company37.getAssignedWorkers();
        java.lang.String str43 = company37.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet44 = company37.getQualifications();
        edu.colostate.cs415.model.Qualification qualification46 = company37.createQualification("hi!:0:0:0:0:0:0");
        boolean boolean47 = company1.equals((java.lang.Object) qualification46);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!:0:0" + "'", str43, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet44);
        org.junit.Assert.assertNotNull(qualification46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company5.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company5.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean11 = company1.equals((java.lang.Object) qualificationDTO10);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company3.getProjects();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) '#');
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company3.unassign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification33 = company31.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification33.toDTO();
        boolean boolean36 = qualification33.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification40.getWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = qualification45.getWorkers();
        boolean boolean47 = qualification40.equals((java.lang.Object) qualification45);
        boolean boolean48 = qualification33.equals((java.lang.Object) boolean47);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification33.getWorkers();
        java.lang.String str50 = qualification33.toString();
        boolean boolean51 = qualification24.equals((java.lang.Object) str50);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO52 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        boolean boolean60 = company56.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company56.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company56.getQualifications();
        edu.colostate.cs415.model.Worker worker64 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet62, (double) 0L);
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "hi!" + "'", str50, "hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(qualificationDTO52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(qualificationSet61);
        org.junit.Assert.assertNotNull(qualificationSet62);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.lang.Class<?> wildcardClass9 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str24 = company23.toString();
        java.lang.String str25 = company23.toString();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        java.lang.String str28 = company23.getName();
        java.lang.String str29 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getUnavailableWorkers();
        boolean boolean31 = qualification8.equals((java.lang.Object) company23);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company38.getUnassignedWorkers();
        java.lang.String str42 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company38.getProjects();
        java.lang.String str44 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company38.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company38.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company38.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company38.getQualifications();
        edu.colostate.cs415.model.Worker worker50 = company33.createWorker("hi!", qualificationSet48, 1.0d);
        edu.colostate.cs415.model.Project project51 = null;
        // The following exception was thrown during execution in test generation
        try {
            company23.unassign(worker50, project51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0:0:0" + "'", str24, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0:0:0" + "'", str25, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(worker50);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str23 = company22.toString();
        java.lang.String str24 = company22.toString();
        java.lang.String str25 = company22.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company22.getAvailableWorkers();
        java.lang.String str27 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project30 = company7.createProject("", qualificationSet28, projectSize29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0:0:0" + "'", str23, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0:0:0" + "'", str24, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0:0:0" + "'", str27, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet28);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project14 = company1.createProject("hi!:0:0:0:0", qualificationSet12, projectSize13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) '4');
        edu.colostate.cs415.model.Project project21 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker20, project21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.lang.String str17 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getAvailableWorkers();
        java.lang.String str19 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project22 = company1.createProject("hi!:0:0:0:0", qualificationSet20, projectSize21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0:0:0" + "'", str19, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAvailableWorkers();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize7 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project8 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet6, projectSize7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification8.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification8.toDTO();
        java.lang.String str11 = qualification8.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        java.lang.String str21 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification13.toDTO();
        java.lang.String str23 = qualification13.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification32 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification32.getWorkers();
        boolean boolean34 = qualification27.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.model.Worker worker35 = null;
        qualification27.addWorker(worker35);
        java.lang.String str37 = qualification27.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification27.getWorkers();
        boolean boolean39 = qualification13.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.lang.String str45 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.String str47 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company41.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = qualification53.getWorkers();
        edu.colostate.cs415.model.Company company56 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification58 = company56.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = qualification58.getWorkers();
        boolean boolean60 = qualification53.equals((java.lang.Object) qualification58);
        edu.colostate.cs415.model.Worker worker61 = null;
        qualification58.addWorker(worker61);
        edu.colostate.cs415.model.Company company64 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification66 = company64.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet67 = qualification66.getWorkers();
        boolean boolean68 = qualification58.equals((java.lang.Object) workerSet67);
        edu.colostate.cs415.model.Company company70 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet71 = company70.getEmployedWorkers();
        boolean boolean72 = qualification58.equals((java.lang.Object) company70);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet73 = company70.getQualifications();
        boolean boolean74 = company41.equals((java.lang.Object) company70);
        boolean boolean75 = qualification13.equals((java.lang.Object) company70);
        edu.colostate.cs415.model.Qualification qualification77 = company70.createQualification("hi!:0:0:0:0");
        java.lang.String str78 = company70.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet79 = company70.getQualifications();
        edu.colostate.cs415.model.Worker worker81 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet79, (double) 0);
        edu.colostate.cs415.model.Project project82 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker81, project82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(qualification58);
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(qualification66);
        org.junit.Assert.assertNotNull(workerSet67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(workerSet71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualificationSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "hi!" + "'", str78, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet79);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.lang.String str14 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company8.getProjects();
        java.lang.String str18 = company8.getName();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        boolean boolean26 = company8.equals((java.lang.Object) projectSet25);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company8.getUnassignedWorkers();
        java.lang.String str29 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company8.getProjects();
        boolean boolean31 = company1.equals((java.lang.Object) company8);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str35 = company34.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company34.getAssignedWorkers();
        java.lang.String str37 = company34.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company34.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company34.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company34.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker43 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet41, (double) 0.0f);
        edu.colostate.cs415.model.Project project44 = null;
        // The following exception was thrown during execution in test generation
        try {
            company8.assign(worker43, project44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0:0:0" + "'", str35, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(qualificationSet41);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, 0.0d);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker14, project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, 0.0d);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker14, project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        edu.colostate.cs415.model.Worker worker18 = null;
        qualification15.addWorker(worker18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification15.equals((java.lang.Object) workerSet24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getEmployedWorkers();
        boolean boolean29 = qualification15.equals((java.lang.Object) company27);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company27.getQualifications();
        edu.colostate.cs415.model.Worker worker32 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet30, (double) 10.0f);
        edu.colostate.cs415.model.Project project33 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker32, project33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationSet30);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass7 = workerSet6.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnassignedWorkers();
        java.lang.String str18 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company14.getEmployedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company25.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company25.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        boolean boolean33 = company29.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company29.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company29.getQualifications();
        boolean boolean36 = company25.equals((java.lang.Object) qualificationSet35);
        edu.colostate.cs415.model.Worker worker38 = company14.createWorker("hi!", qualificationSet35, 100.0d);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker38, project39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(worker38);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getAvailableWorkers();
        java.lang.String str15 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company12.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker18 = company1.createWorker("", qualificationSet16, 0.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification4.addWorker(worker5);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getAssignedWorkers();
        boolean boolean14 = qualification4.equals((java.lang.Object) company8);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification3.getWorkers();
        java.lang.String str21 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        java.lang.String str34 = qualification26.toString();
        java.lang.String str35 = qualification26.toString();
        boolean boolean36 = qualification3.equals((java.lang.Object) qualification26);
        java.lang.String str37 = qualification26.toString();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean49 = qualification42.equals((java.lang.Object) qualification47);
        edu.colostate.cs415.model.Worker worker50 = null;
        qualification47.addWorker(worker50);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean57 = qualification47.equals((java.lang.Object) workerSet56);
        edu.colostate.cs415.model.Company company59 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company59.getEmployedWorkers();
        boolean boolean61 = qualification47.equals((java.lang.Object) company59);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet62 = company59.getQualifications();
        edu.colostate.cs415.model.Worker worker64 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet62, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification26.removeWorker(worker64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(qualificationSet62);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        boolean boolean24 = qualification16.equals((java.lang.Object) company18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification16.getWorkers();
        java.lang.Class<?> wildcardClass26 = workerSet25.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnavailableWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) workerSet10);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.lang.String str4 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.Class<?> wildcardClass6 = workerSet5.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company8.getProjects();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company8.getAssignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company8);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str18 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company17.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        java.lang.Object obj22 = null;
        boolean boolean23 = company17.equals(obj22);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet25, (double) 100.0f);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification21.toDTO();
        boolean boolean24 = qualification21.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification21.addWorker(worker25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company28.getProjects();
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = qualification21.equals((java.lang.Object) company28);
        boolean boolean35 = qualification21.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification21.getWorkers();
        java.lang.String str37 = qualification21.toString();
        boolean boolean38 = qualification9.equals((java.lang.Object) qualification21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification21.getWorkers();
        java.lang.Class<?> wildcardClass40 = workerSet39.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationDTO22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company25.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company25.getProjects();
        java.lang.String str29 = company25.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company25.getAssignedWorkers();
        boolean boolean31 = company21.equals((java.lang.Object) company25);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company25.getQualifications();
        boolean boolean33 = qualification9.equals((java.lang.Object) company25);
        java.lang.String str34 = qualification9.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification9.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0:0:0" + "'", str34, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationDTO35);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        java.lang.String str17 = company10.getName();
        java.lang.String str18 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker22 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet20, (double) (short) 1);
        edu.colostate.cs415.model.Project project23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker22, project23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        boolean boolean9 = company5.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company5.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company5.getQualifications();
        edu.colostate.cs415.model.Worker worker13 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet11, (double) 'a');
        edu.colostate.cs415.model.Project project14 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker13, project14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker9 = null;
        qualification8.addWorker(worker9);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification8.toDTO();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualification8);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company9.getQualifications();
        java.lang.String str15 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company9.getProjects();
        java.lang.String str17 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company9.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker20 = company1.createWorker("hi!:0:0:0:0", qualificationSet18, (double) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        boolean boolean28 = qualification8.equals((java.lang.Object) (byte) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO29 = qualification8.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification8.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationDTO29);
        org.junit.Assert.assertNotNull(workerSet30);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company28.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker36 = company20.createWorker("", qualificationSet34, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0:0:0" + "'", str29, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project34 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = company9.createWorker("hi!", qualificationSet22, (double) (short) 1);
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker24, project25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(worker24);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet1 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker3 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet1, (double) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        boolean boolean13 = company9.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company9.getProjects();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        boolean boolean22 = company18.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company18.getAssignedWorkers();
        java.lang.String str24 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company18.getQualifications();
        edu.colostate.cs415.model.Worker worker27 = company9.createWorker("hi!", qualificationSet25, (double) 100);
        edu.colostate.cs415.model.Project project28 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker27, project28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(worker27);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification22.addWorker(worker25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification22.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getEmployedWorkers();
        boolean boolean36 = qualification22.equals((java.lang.Object) company34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 10.0f);
        edu.colostate.cs415.model.Project project40 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker39, project40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getUnassignedWorkers();
        java.lang.String str21 = company7.getName();
        edu.colostate.cs415.model.Qualification qualification23 = company7.createQualification("hi!:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(qualification23);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass9 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = company1.createProject("hi!", qualificationSet15, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company15.getQualifications();
        edu.colostate.cs415.model.Qualification qualification20 = company15.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        boolean boolean27 = qualification24.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification31.equals((java.lang.Object) qualification36);
        boolean boolean39 = qualification24.equals((java.lang.Object) boolean38);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification24.getWorkers();
        java.lang.String str42 = qualification24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO44 = qualification24.toDTO();
        boolean boolean45 = qualification20.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company47.getUnassignedWorkers();
        java.lang.String str51 = company47.toString();
        java.lang.String str52 = company47.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = company47.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company47.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass55 = company47.getClass();
        boolean boolean56 = qualification20.equals((java.lang.Object) company47);
        boolean boolean57 = qualification3.equals((java.lang.Object) company47);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!" + "'", str42, "hi!");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(qualificationDTO44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "hi!:0:0" + "'", str51, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "hi!" + "'", str52, "hi!");
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company13.getProjects();
        java.lang.String str18 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company13.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company13.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project26 = company1.createProject("", qualificationSet24, projectSize25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.toString();
        java.lang.Class<?> wildcardClass7 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 'a');
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        boolean boolean29 = company18.equals((java.lang.Object) qualificationSet28);
        edu.colostate.cs415.model.Worker worker31 = company7.createWorker("hi!", qualificationSet28, 100.0d);
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker31, project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(worker31);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company2.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = new edu.colostate.cs415.model.Project("", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.Class<?> wildcardClass7 = qualification6.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.lang.String str10 = company1.toString();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification22.addWorker(worker25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification22.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getEmployedWorkers();
        boolean boolean36 = qualification22.equals((java.lang.Object) company34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker41 = company1.createWorker("hi!", qualificationSet37, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company20.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company20.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getEmployedWorkers();
        boolean boolean30 = company1.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification32 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification37.getWorkers();
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = qualification42.getWorkers();
        boolean boolean44 = qualification37.equals((java.lang.Object) qualification42);
        edu.colostate.cs415.model.Worker worker45 = null;
        qualification42.addWorker(worker45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        boolean boolean52 = qualification42.equals((java.lang.Object) workerSet51);
        edu.colostate.cs415.model.Company company54 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company54.getEmployedWorkers();
        boolean boolean56 = qualification42.equals((java.lang.Object) company54);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet57 = company54.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company54.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet59 = company54.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company54.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company54.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker63 = company1.createWorker("hi!:0:0", qualificationSet61, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(qualificationSet57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertNotNull(projectSet59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualificationSet61);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getEmployedWorkers();
        java.lang.String str19 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company10.getAssignedWorkers();
        boolean boolean21 = company1.equals((java.lang.Object) workerSet20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification24 = company1.createQualification("hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualification24);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company25.getAssignedWorkers();
        boolean boolean28 = company25.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet29 = company25.getQualifications();
        java.lang.String str30 = company25.getName();
        java.lang.String str31 = company25.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company25.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company25.getUnavailableWorkers();
        boolean boolean34 = qualification3.equals((java.lang.Object) workerSet33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualificationSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize8 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project9 = new edu.colostate.cs415.model.Project("", qualificationSet7, projectSize8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.lang.String str6 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company3.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company3.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 0.0f);
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project14 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet10, projectSize13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project4 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company13.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) ' ');
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company15.getProjects();
        java.lang.String str21 = company15.toString();
        edu.colostate.cs415.model.Qualification qualification23 = company15.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company15.getEmployedWorkers();
        java.lang.String str25 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company15.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company15.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize29 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project30 = company1.createProject("", qualificationSet28, projectSize29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company21.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company21.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        boolean boolean29 = company25.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company25.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company25.getQualifications();
        boolean boolean32 = company21.equals((java.lang.Object) qualificationSet31);
        edu.colostate.cs415.model.Worker worker34 = company10.createWorker("hi!", qualificationSet31, 100.0d);
        edu.colostate.cs415.model.Project project35 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker34, project35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(worker34);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("", qualificationSet13, (double) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.lang.String str10 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str14 = qualification13.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.Class<?> wildcardClass7 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        java.lang.String str31 = qualification24.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company33.getUnassignedWorkers();
        java.lang.String str37 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company33.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company33.getEmployedWorkers();
        boolean boolean40 = qualification24.equals((java.lang.Object) company33);
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        boolean boolean47 = company43.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet48 = company43.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company43.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet51 = company43.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet52 = company43.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize53 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project54 = company33.createProject("hi!", qualificationSet52, projectSize53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(qualificationSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(projectSet51);
        org.junit.Assert.assertNotNull(qualificationSet52);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification3.toDTO();
        java.lang.String str21 = qualification3.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str24 = company23.toString();
        java.lang.String str25 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company23.getProjects();
        java.lang.String str28 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company23.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company23.getQualifications();
        boolean boolean33 = qualification3.equals((java.lang.Object) company23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company23.getAssignedWorkers();
        edu.colostate.cs415.model.Project project35 = null;
        // The following exception was thrown during execution in test generation
        try {
            company23.start(project35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0:0:0" + "'", str24, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0:0:0" + "'", str25, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnassignedWorkers();
        java.lang.String str22 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification25 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = company1.createProject("", qualificationSet15, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.lang.Class<?> wildcardClass5 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO2 = qualification1.toDTO();
        java.lang.String str3 = qualification1.toString();
        org.junit.Assert.assertNotNull(qualificationDTO2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.lang.String str12 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company3.getEmployedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.getName();
        edu.colostate.cs415.model.Qualification qualification19 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company16.getUnassignedWorkers();
        java.lang.String str21 = company16.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company16.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company3.createProject("hi!:0:0:0:0:0:0", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getEmployedWorkers();
        boolean boolean30 = company1.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            company26.start(project31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAvailableWorkers();
        java.lang.String str12 = company1.getName();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company20.getQualifications();
        edu.colostate.cs415.model.Project project31 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.start(project31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertNotNull(qualificationSet30);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification24.toDTO();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company29.getQualifications();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company29.getProjects();
        java.lang.String str37 = company29.getName();
        java.lang.String str38 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company29.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, (double) 10L);
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!:0:0" + "'", str38, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet39);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        qualification3.addWorker(worker4);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company28.getProjects();
        boolean boolean34 = qualification3.equals((java.lang.Object) company28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification3.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.lang.String str3 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        boolean boolean12 = company8.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, 0.0d);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker15, project16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str13 = company12.toString();
        java.lang.String str14 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company12.getProjects();
        java.lang.Class<?> wildcardClass17 = projectSet16.getClass();
        boolean boolean18 = company1.equals((java.lang.Object) projectSet16);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project13 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet11, projectSize12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        boolean boolean11 = company7.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, 0.0d);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker14, project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        java.lang.String str17 = qualification9.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize7 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project8 = new edu.colostate.cs415.model.Project("", qualificationSet6, projectSize7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification3.getWorkers();
        java.lang.String str20 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        boolean boolean27 = company23.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company23.getProjects();
        java.lang.Class<?> wildcardClass29 = company23.getClass();
        boolean boolean30 = qualification3.equals((java.lang.Object) wildcardClass29);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = qualification5.equals((java.lang.Object) company7);
        java.lang.String str14 = company7.toString();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getAssignedWorkers();
        boolean boolean20 = company17.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 12);
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            company7.unassign(worker23, project24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company22.getUnassignedWorkers();
        java.lang.String str26 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company22.getProjects();
        java.lang.String str28 = company22.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company22.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company22.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = qualification39.getWorkers();
        boolean boolean41 = qualification34.equals((java.lang.Object) qualification39);
        edu.colostate.cs415.model.Worker worker42 = null;
        qualification39.addWorker(worker42);
        edu.colostate.cs415.model.Company company45 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification47 = company45.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification47.getWorkers();
        boolean boolean49 = qualification39.equals((java.lang.Object) workerSet48);
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = company51.getEmployedWorkers();
        boolean boolean53 = qualification39.equals((java.lang.Object) company51);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet54 = company51.getQualifications();
        boolean boolean55 = company22.equals((java.lang.Object) company51);
        java.lang.Class<?> wildcardClass56 = company51.getClass();
        boolean boolean57 = company1.equals((java.lang.Object) wildcardClass56);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(qualification47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(qualificationSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(workerSet58);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getEmployedWorkers();
        boolean boolean11 = qualification3.equals((java.lang.Object) company5);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification20 = company16.createQualification("hi!");
        java.lang.Object obj21 = null;
        boolean boolean22 = company16.equals(obj21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker26 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet24, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification3.removeWorker(worker26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getEmployedWorkers();
        java.lang.String str24 = company20.getName();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnassignedWorkers();
        java.lang.String str30 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company26.getEmployedWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company36.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = company26.createWorker("hi!", qualificationSet39, (double) (short) 1);
        edu.colostate.cs415.model.Project project42 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.unassign(worker41, project42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(qualificationSet39);
        org.junit.Assert.assertNotNull(worker41);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.lang.String str15 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company9.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company9.getProjects();
        java.lang.String str19 = company9.getName();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getUnavailableWorkers();
        boolean boolean24 = company21.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company21.getProjects();
        boolean boolean27 = company9.equals((java.lang.Object) projectSet26);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company9.getProjects();
        java.lang.String str29 = company9.getName();
        java.lang.String str30 = company9.getName();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company32.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet39 = company32.getProjects();
        boolean boolean40 = company9.equals((java.lang.Object) projectSet39);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet41 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize42 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project43 = company1.createProject("hi!", qualificationSet41, projectSize42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(projectSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(qualificationSet41);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.String str16 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getEmployedWorkers();
        java.lang.String str19 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company10.getAssignedWorkers();
        boolean boolean21 = company1.equals((java.lang.Object) workerSet20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(workerSet23);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        java.lang.String str18 = qualification15.toString();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        edu.colostate.cs415.model.Worker worker30 = null;
        qualification22.addWorker(worker30);
        java.lang.String str32 = qualification22.toString();
        boolean boolean33 = qualification15.equals((java.lang.Object) str32);
        boolean boolean35 = qualification15.equals((java.lang.Object) (byte) 10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = qualification15.getWorkers();
        boolean boolean37 = company2.equals((java.lang.Object) qualification15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize39 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project40 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet38, projectSize39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        java.lang.String str14 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project22 = company1.createProject("hi!:0:0:0:0", qualificationSet20, projectSize21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company1.getQualifications();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company15.getProjects();
        java.lang.Object obj21 = null;
        boolean boolean22 = company15.equals(obj21);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company15.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company15.getProjects();
        java.lang.String str25 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company15.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company15.getProjects();
        boolean boolean29 = company1.equals((java.lang.Object) projectSet28);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company32.getProjects();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company32.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company32.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet38, (double) '4');
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker40, project41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification8.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification8.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification8.getWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.dto.QualificationDTO qualificationDTO22 = qualification8.toDTO();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker14.addProject(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company23.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker30 = company1.createWorker("hi!:0:0", qualificationSet28, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualificationSet28);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company4.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company4.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company4.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        boolean boolean12 = company4.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company4.getEmployedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company1.getQualifications();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str19 = company18.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.lang.Object obj23 = null;
        boolean boolean24 = company18.equals(obj23);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company18.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize26 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project27 = company1.createProject("hi!:0:0:0:0", qualificationSet25, projectSize26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0:0:0" + "'", str19, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationSet25);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean12 = qualification9.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        boolean boolean24 = qualification9.equals((java.lang.Object) boolean23);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification9.getWorkers();
        java.lang.String str27 = qualification9.toString();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getUnavailableWorkers();
        boolean boolean32 = company29.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company29.getAvailableWorkers();
        boolean boolean34 = qualification9.equals((java.lang.Object) workerSet33);
        boolean boolean35 = qualification5.equals((java.lang.Object) boolean34);
        java.lang.String str36 = qualification5.toString();
        java.lang.String str37 = qualification5.toString();
        java.lang.String str38 = qualification5.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.toString();
        java.lang.String str10 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company14.getProjects();
        java.lang.String str18 = company14.getName();
        boolean boolean19 = company8.equals((java.lang.Object) company14);
        boolean boolean20 = qualification6.equals((java.lang.Object) company14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification6.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification6.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company6.getUnavailableWorkers();
        boolean boolean9 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        java.lang.String str11 = company1.toString();
        edu.colostate.cs415.model.Worker worker12 = null;
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker12, project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnassignedWorkers();
        java.lang.String str17 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company13.getEmployedWorkers();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company24.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company28.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company28.getQualifications();
        boolean boolean35 = company24.equals((java.lang.Object) qualificationSet34);
        edu.colostate.cs415.model.Worker worker37 = company13.createWorker("hi!", qualificationSet34, 100.0d);
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker37, project38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0" + "'", str17, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(worker37);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("hi!:0:0", qualificationSet8, (-1.0d));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must be positive number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification15.toDTO();
        boolean boolean18 = qualification15.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification22.equals((java.lang.Object) qualification27);
        boolean boolean30 = qualification15.equals((java.lang.Object) boolean29);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification15.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification15.getWorkers();
        java.lang.String str33 = qualification15.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        boolean boolean38 = company35.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company35.getAvailableWorkers();
        boolean boolean40 = qualification15.equals((java.lang.Object) workerSet39);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = qualification15.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO42 = qualification15.toDTO();
        boolean boolean43 = company1.equals((java.lang.Object) qualificationDTO42);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationDTO42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0:0:0", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize7 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project8 = new edu.colostate.cs415.model.Project("", qualificationSet6, projectSize7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company9.getUnassignedWorkers();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getEmployedWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company19.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = company9.createWorker("hi!", qualificationSet22, (double) (short) 1);
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker24, project25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(worker24);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification9.addWorker(worker17);
        java.lang.String str19 = qualification9.toString();
        java.lang.String str20 = qualification9.toString();
        boolean boolean21 = qualification3.equals((java.lang.Object) qualification9);
        java.lang.Class<?> wildcardClass22 = qualification3.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str9 = company8.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company8.getUnassignedWorkers();
        java.lang.String str13 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker17 = company1.createWorker("hi!:0:0", qualificationSet15, (double) 12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification16);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification7.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification7.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.lang.String str16 = company1.toString();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str20 = company19.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company19.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company19.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company19.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company1.createProject("hi!:0:0:0:0", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet1 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker3 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0", qualificationSet1, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getAvailableWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) workerSet15);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification9.toDTO();
        java.lang.String str18 = qualification9.toString();
        java.lang.String str19 = qualification9.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0:0:0" + "'", str19, "hi!:0:0:0:0");
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.lang.Class<?> wildcardClass6 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker12 = company1.createWorker("hi!:0:0:0:0:0:0", qualificationSet10, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        java.lang.String str10 = company1.getName();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        java.lang.String str7 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet23 = company22.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company22.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        boolean boolean30 = company26.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company26.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company26.getQualifications();
        boolean boolean33 = company22.equals((java.lang.Object) qualificationSet32);
        edu.colostate.cs415.model.Worker worker35 = company11.createWorker("hi!", qualificationSet32, 100.0d);
        edu.colostate.cs415.model.Project project36 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker35, project36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(projectSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualificationSet31);
        org.junit.Assert.assertNotNull(qualificationSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(worker35);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualification14);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        boolean boolean29 = company18.equals((java.lang.Object) qualificationSet28);
        edu.colostate.cs415.model.Worker worker31 = company7.createWorker("hi!", qualificationSet28, 100.0d);
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker31, project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(worker31);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Worker worker10 = null;
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker10, project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        java.lang.String str13 = company1.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification8.toString();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification15.addWorker(worker23);
        java.lang.String str25 = qualification15.toString();
        boolean boolean26 = qualification8.equals((java.lang.Object) str25);
        java.lang.String str27 = qualification8.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification8.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO28);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        java.lang.String str9 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0:0:0" + "'", str9, "hi!:0:0:0:0");
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("", qualificationSet9, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str29 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        java.lang.Object obj33 = null;
        boolean boolean34 = company28.equals(obj33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company28.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) 100.0f);
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.assign(worker38, project39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0:0:0" + "'", str29, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company4.getUnassignedWorkers();
        java.lang.String str8 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company4.getEmployedWorkers();
        boolean boolean11 = company4.equals((java.lang.Object) 10);
        boolean boolean12 = company2.equals((java.lang.Object) company4);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = new edu.colostate.cs415.model.Project("hi!", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.lang.String str12 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company8.getProjects();
        java.lang.String str14 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company8.getProjects();
        java.lang.String str18 = company8.getName();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getUnavailableWorkers();
        boolean boolean23 = company20.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        boolean boolean26 = company8.equals((java.lang.Object) projectSet25);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company8.getUnassignedWorkers();
        java.lang.String str29 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet30 = company8.getProjects();
        boolean boolean31 = company1.equals((java.lang.Object) company8);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        edu.colostate.cs415.model.Company company39 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification41 = company39.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = qualification41.getWorkers();
        boolean boolean43 = qualification36.equals((java.lang.Object) qualification41);
        edu.colostate.cs415.model.Worker worker44 = null;
        qualification41.addWorker(worker44);
        edu.colostate.cs415.model.Company company47 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification49 = company47.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = qualification49.getWorkers();
        boolean boolean51 = qualification41.equals((java.lang.Object) workerSet50);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company53.getEmployedWorkers();
        boolean boolean55 = qualification41.equals((java.lang.Object) company53);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet56 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker58 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet56, (double) 10.0f);
        edu.colostate.cs415.model.Project project59 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker58, project59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualification41);
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(qualification49);
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(qualificationSet56);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Worker worker10 = null;
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker10, project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        java.lang.String str12 = company1.getName();
        java.lang.Class<?> wildcardClass13 = company1.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("", qualificationSet8, (double) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.lang.String str16 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        boolean boolean20 = company1.equals((java.lang.Object) company14);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company23.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company23.getProjects();
        java.lang.String str30 = company23.toString();
        java.lang.String str31 = company23.getName();
        java.lang.String str32 = company23.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company23.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize34 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project35 = company1.createProject("hi!", qualificationSet33, projectSize34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet33);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project13 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet11, projectSize12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification24.getWorkers();
        java.lang.String str32 = qualification24.toString();
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company35.getUnavailableWorkers();
        boolean boolean38 = company35.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company35.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = company35.getQualifications();
        edu.colostate.cs415.model.Worker worker42 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet40, (double) 1L);
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualificationSet40);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0L);
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker14 = null;
        qualification10.addWorker(worker14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        boolean boolean22 = qualification10.equals((java.lang.Object) company17);
        boolean boolean23 = qualification5.equals((java.lang.Object) boolean22);
        edu.colostate.cs415.model.Qualification qualification25 = new edu.colostate.cs415.model.Qualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO26 = qualification25.toDTO();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company28.getAvailableWorkers();
        boolean boolean31 = qualification25.equals((java.lang.Object) workerSet30);
        boolean boolean32 = qualification5.equals((java.lang.Object) workerSet30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = qualification5.getWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationDTO26);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.lang.String str11 = company9.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        boolean boolean14 = company1.equals((java.lang.Object) "hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company18.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company18.getProjects();
        edu.colostate.cs415.model.Qualification qualification22 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company18.getQualifications();
        boolean boolean24 = qualification16.equals((java.lang.Object) company18);
        edu.colostate.cs415.model.Qualification qualification26 = company18.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project27 = null;
        // The following exception was thrown during execution in test generation
        try {
            company18.finish(project27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualification26);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.lang.String str9 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass4 = company1.getClass();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company20.getUnavailableWorkers();
        java.lang.String str30 = company20.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str34 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company33.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company33.getQualifications();
        edu.colostate.cs415.model.Worker worker38 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet36, (double) ' ');
        edu.colostate.cs415.model.Project project39 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.unassign(worker38, project39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0:0:0" + "'", str34, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(qualificationSet36);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = qualification5.equals((java.lang.Object) company7);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification5.toDTO();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationDTO14);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("", qualificationSet9, (double) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getEmployedWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company18.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company18.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        boolean boolean26 = company22.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company22.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet28 = company22.getQualifications();
        boolean boolean29 = company18.equals((java.lang.Object) qualificationSet28);
        edu.colostate.cs415.model.Worker worker31 = company7.createWorker("hi!", qualificationSet28, 100.0d);
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker31, project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(qualificationSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(worker31);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company9.getQualifications();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean15 = company9.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company9.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize18 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project19 = company1.createProject("", qualificationSet17, projectSize18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification3.toDTO();
        java.lang.String str20 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str10 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company9.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.lang.Object obj14 = null;
        boolean boolean15 = company9.equals(obj14);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company9.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company9.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) company9);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company9.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0:0:0" + "'", str10, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str11 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.lang.String str14 = company10.getName();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company16.getUnavailableWorkers();
        boolean boolean19 = company16.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company16.getProjects();
        boolean boolean22 = company16.equals((java.lang.Object) (short) -1);
        boolean boolean23 = company10.equals((java.lang.Object) company16);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company16.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project26 = company1.createProject("hi!", qualificationSet24, projectSize25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(qualificationSet24);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet3 = company1.getQualifications();
        java.lang.String str4 = company1.getName();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company6.getUnassignedWorkers();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company6.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company6.getUnassignedWorkers();
        boolean boolean14 = company1.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company6.getAvailableWorkers();
        java.lang.String str17 = company6.getName();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company24.getUnassignedWorkers();
        java.lang.String str28 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company24.getProjects();
        java.lang.String str30 = company24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company24.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company24.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company24.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = company19.createWorker("hi!", qualificationSet34, 1.0d);
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company6.assign(worker36, project37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "hi!:0:0" + "'", str28, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
        org.junit.Assert.assertNotNull(worker36);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (byte) 10);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker15.removeProject(project16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker4 = null;
        qualification3.addWorker(worker4);
        boolean boolean7 = qualification3.equals((java.lang.Object) "hi!");
        java.lang.String str8 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company9.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAvailableWorkers();
        java.lang.Class<?> wildcardClass15 = company9.getClass();
        boolean boolean16 = company1.equals((java.lang.Object) company9);
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company9.start(project17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company1.getQualifications();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.lang.String str17 = company13.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company13.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize21 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project22 = company1.createProject("hi!:0:0", qualificationSet20, projectSize21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertNotNull(qualificationSet20);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getEmployedWorkers();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company14.getUnavailableWorkers();
        boolean boolean17 = company14.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company14.getQualifications();
        java.lang.String str20 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getUnavailableWorkers();
        boolean boolean22 = qualification12.equals((java.lang.Object) workerSet21);
        boolean boolean23 = company1.equals((java.lang.Object) boolean22);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company1.getProjects();
        java.lang.String str16 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getAssignedWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) 12);
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker16, project17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification15 = company11.createQualification("hi!");
        java.lang.Object obj16 = null;
        boolean boolean17 = company11.equals(obj16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getAssignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getUnassignedWorkers();
        java.lang.String str24 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        java.lang.String str26 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.lang.String str29 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company20.getAssignedWorkers();
        boolean boolean31 = company11.equals((java.lang.Object) workerSet30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company11.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project34 = company1.createProject("hi!", qualificationSet32, projectSize33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0" + "'", str24, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!:0:0" + "'", str26, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!:0:0" + "'", str29, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualificationSet32);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        boolean boolean17 = company10.equals((java.lang.Object) 10);
        java.lang.String str18 = company10.toString();
        boolean boolean19 = company1.equals((java.lang.Object) company10);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        java.lang.String str32 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO33 = qualification24.toDTO();
        java.lang.String str34 = qualification24.toString();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification38.equals((java.lang.Object) qualification43);
        edu.colostate.cs415.model.Worker worker46 = null;
        qualification38.addWorker(worker46);
        java.lang.String str48 = qualification38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = qualification38.getWorkers();
        boolean boolean50 = qualification24.equals((java.lang.Object) qualification38);
        edu.colostate.cs415.model.Company company52 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification54 = company52.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet55 = company52.getUnassignedWorkers();
        java.lang.String str56 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet57 = company52.getProjects();
        java.lang.String str58 = company52.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet59 = company52.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet60 = company52.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet65 = qualification64.getWorkers();
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification69 = company67.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = qualification69.getWorkers();
        boolean boolean71 = qualification64.equals((java.lang.Object) qualification69);
        edu.colostate.cs415.model.Worker worker72 = null;
        qualification69.addWorker(worker72);
        edu.colostate.cs415.model.Company company75 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification77 = company75.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = qualification77.getWorkers();
        boolean boolean79 = qualification69.equals((java.lang.Object) workerSet78);
        edu.colostate.cs415.model.Company company81 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet82 = company81.getEmployedWorkers();
        boolean boolean83 = qualification69.equals((java.lang.Object) company81);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = company81.getQualifications();
        boolean boolean85 = company52.equals((java.lang.Object) company81);
        boolean boolean86 = qualification24.equals((java.lang.Object) company81);
        edu.colostate.cs415.model.Qualification qualification88 = company81.createQualification("hi!:0:0:0:0");
        java.lang.String str89 = company81.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet90 = company81.getQualifications();
        edu.colostate.cs415.model.Worker worker92 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet90, (double) 0);
        edu.colostate.cs415.model.Project project93 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker92, project93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0" + "'", str18, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(qualification54);
        org.junit.Assert.assertNotNull(workerSet55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!:0:0" + "'", str56, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "hi!:0:0" + "'", str58, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet59);
        org.junit.Assert.assertNotNull(workerSet60);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertNotNull(workerSet65);
        org.junit.Assert.assertNotNull(qualification69);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(qualification77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(workerSet82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(qualification88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "hi!" + "'", str89, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet90);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.String str13 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company7.getUnavailableWorkers();
        boolean boolean19 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company7.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass21 = workerSet20.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.toString();
        java.lang.String str12 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company10.getUnavailableWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) company10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company10.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification18.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO20 = qualification18.toDTO();
        java.lang.Object obj21 = null;
        boolean boolean22 = qualification18.equals(obj21);
        java.lang.String str23 = qualification18.toString();
        java.lang.String str24 = qualification18.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(qualificationDTO20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str23, "hi!:0:0:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str24, "hi!:0:0:0:0:0:0");
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification8 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(qualification8);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass4 = workerSet3.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification22.addWorker(worker25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification22.equals((java.lang.Object) workerSet31);
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company34.getEmployedWorkers();
        boolean boolean36 = qualification22.equals((java.lang.Object) company34);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company34.getQualifications();
        edu.colostate.cs415.model.Worker worker39 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet37, (double) 10.0f);
        edu.colostate.cs415.model.Project project40 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker39, project40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company20.getProjects();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str32 = company31.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company31.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker36 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet34, 0.0d);
        edu.colostate.cs415.model.Project project37 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.assign(worker36, project37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0:0:0" + "'", str32, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(qualificationSet34);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str13 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) '#');
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.getName();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.lang.String str15 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification19 = company13.createQualification("hi!");
        java.lang.String str20 = company13.getName();
        boolean boolean21 = company1.equals((java.lang.Object) company13);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company28.getUnassignedWorkers();
        java.lang.String str32 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet33 = company28.getProjects();
        java.lang.String str34 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company28.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company28.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company28.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker40 = company23.createWorker("hi!", qualificationSet38, 1.0d);
        edu.colostate.cs415.model.Project project41 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker40, project41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(worker40);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Worker worker8 = null;
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker8, project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.getName();
        edu.colostate.cs415.model.Qualification qualification5 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 1L);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker11.addProject(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company7.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker16 = company1.createWorker("", qualificationSet14, (double) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.Class<?> wildcardClass7 = company1.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company14.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification18 = company14.createQualification("hi!");
        java.lang.Object obj19 = null;
        boolean boolean20 = company14.equals(obj19);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company14.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) 100.0f);
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company3.unassign(worker24, project25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0:0:0" + "'", str15, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        java.lang.String str8 = company1.toString();
        java.lang.String str9 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification11);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getUnavailableWorkers();
        java.lang.String str9 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 1L);
        edu.colostate.cs415.model.ProjectSize projectSize13 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project14 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet10, projectSize13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!");
        java.lang.Object obj2 = null;
        boolean boolean3 = qualification1.equals(obj2);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification1.toDTO();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(qualificationDTO4);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company4.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company4.getUnassignedWorkers();
        java.lang.String str8 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company4.getProjects();
        java.lang.String str10 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company4.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company4.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = qualification21.getWorkers();
        boolean boolean23 = qualification16.equals((java.lang.Object) qualification21);
        edu.colostate.cs415.model.Worker worker24 = null;
        qualification21.addWorker(worker24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification21.equals((java.lang.Object) workerSet30);
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company33.getEmployedWorkers();
        boolean boolean35 = qualification21.equals((java.lang.Object) company33);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet36 = company33.getQualifications();
        boolean boolean37 = company4.equals((java.lang.Object) company33);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        boolean boolean44 = company40.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet45 = company40.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company40.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet49 = company40.getQualifications();
        edu.colostate.cs415.model.Worker worker51 = company4.createWorker("hi!", qualificationSet49, (double) 100.0f);
        edu.colostate.cs415.model.Project project52 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker51, project52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(qualificationSet36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(qualificationSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertNotNull(qualificationSet49);
        org.junit.Assert.assertNotNull(worker51);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification34 = company1.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification34);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.lang.String str8 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker5 = null;
        qualification4.addWorker(worker5);
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification4.toDTO();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company3.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company7.getAssignedWorkers();
        boolean boolean13 = company3.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, (double) (byte) 10);
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project18 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet14, projectSize17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company3.getUnassignedWorkers();
        java.lang.String str7 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company3.getEmployedWorkers();
        boolean boolean10 = company3.equals((java.lang.Object) 10);
        boolean boolean11 = company1.equals((java.lang.Object) company3);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str16 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company15.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) '#');
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification4.getWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        boolean boolean11 = qualification4.equals((java.lang.Object) qualification9);
        edu.colostate.cs415.model.Worker worker12 = null;
        qualification9.addWorker(worker12);
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification9.equals((java.lang.Object) workerSet18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getEmployedWorkers();
        boolean boolean23 = qualification9.equals((java.lang.Object) company21);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company21.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company21.getProjects();
        edu.colostate.cs415.model.Qualification qualification28 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company21.getProjects();
        java.lang.String str30 = company21.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company21.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet32 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize33 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project34 = new edu.colostate.cs415.model.Project("hi!:0:0", qualificationSet32, projectSize33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(qualificationSet32);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str11 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company10.getQualifications();
        boolean boolean14 = company1.equals((java.lang.Object) qualificationSet13);
        edu.colostate.cs415.model.Qualification qualification16 = company1.createQualification("hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualification16);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        edu.colostate.cs415.model.Company company37 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification39 = company37.createQualification("hi!");
        boolean boolean41 = company37.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company37.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company37.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company37.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company37.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company37.getQualifications();
        edu.colostate.cs415.model.Worker worker48 = company1.createWorker("hi!", qualificationSet46, (double) 100.0f);
        edu.colostate.cs415.model.Project project49 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker48.removeProject(project49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(qualificationSet42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
        org.junit.Assert.assertNotNull(worker48);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str11 = company10.toString();
        edu.colostate.cs415.model.Qualification qualification13 = company10.createQualification("hi!:0:0:0:0");
        java.lang.String str14 = company10.getName();
        boolean boolean15 = company1.equals((java.lang.Object) str14);
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification8.getWorkers();
        java.lang.String str14 = qualification8.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification8.getWorkers();
        java.lang.String str16 = qualification8.toString();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification8.toDTO();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        java.lang.String str9 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.lang.Object obj28 = null;
        boolean boolean29 = qualification27.equals(obj28);
        edu.colostate.cs415.model.Worker worker30 = null;
        // The following exception was thrown during execution in test generation
        try {
            qualification27.removeWorker(worker30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot remove null worker");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) "");
        java.lang.String str13 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getEmployedWorkers();
        java.lang.String str15 = company9.getName();
        java.lang.String str16 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 10.0f);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker19, project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        java.lang.String str9 = company2.getName();
        java.lang.String str10 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 1);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker14.removeProject(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.lang.String str6 = company1.toString();
        java.lang.String str7 = company1.toString();
        java.lang.String str8 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet13, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must be positive number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker16 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet14, 0.0d);
        edu.colostate.cs415.model.Project project17 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker16, project17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnavailableWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getAssignedWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("", qualificationSet6, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company26.getProjects();
        boolean boolean29 = qualification24.equals((java.lang.Object) projectSet28);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification24.getWorkers();
        java.lang.String str31 = qualification24.toString();
        edu.colostate.cs415.model.Company company33 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification35 = company33.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company33.getUnassignedWorkers();
        java.lang.String str37 = company33.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company33.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company33.getEmployedWorkers();
        boolean boolean40 = qualification24.equals((java.lang.Object) company33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company33.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company43 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification45 = company43.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company43.getUnassignedWorkers();
        java.lang.String str47 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company43.getProjects();
        java.lang.String str49 = company43.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet50 = company43.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = company43.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        edu.colostate.cs415.model.Company company58 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification60 = company58.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet61 = qualification60.getWorkers();
        boolean boolean62 = qualification55.equals((java.lang.Object) qualification60);
        edu.colostate.cs415.model.Worker worker63 = null;
        qualification60.addWorker(worker63);
        edu.colostate.cs415.model.Company company66 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification68 = company66.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = qualification68.getWorkers();
        boolean boolean70 = qualification60.equals((java.lang.Object) workerSet69);
        edu.colostate.cs415.model.Company company72 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet73 = company72.getEmployedWorkers();
        boolean boolean74 = qualification60.equals((java.lang.Object) company72);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet75 = company72.getQualifications();
        boolean boolean76 = company43.equals((java.lang.Object) company72);
        edu.colostate.cs415.model.Company company79 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification81 = company79.createQualification("hi!");
        boolean boolean83 = company79.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet84 = company79.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet85 = company79.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet86 = company79.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet87 = company79.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet88 = company79.getQualifications();
        edu.colostate.cs415.model.Worker worker90 = company43.createWorker("hi!", qualificationSet88, (double) 100.0f);
        edu.colostate.cs415.model.Project project91 = null;
        // The following exception was thrown during execution in test generation
        try {
            company33.unassign(worker90, project91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(qualification35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!:0:0" + "'", str37, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualification45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0" + "'", str49, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(qualification60);
        org.junit.Assert.assertNotNull(workerSet61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(qualification68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(workerSet73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualificationSet75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(qualification81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(qualificationSet84);
        org.junit.Assert.assertNotNull(workerSet85);
        org.junit.Assert.assertNotNull(workerSet86);
        org.junit.Assert.assertNotNull(projectSet87);
        org.junit.Assert.assertNotNull(qualificationSet88);
        org.junit.Assert.assertNotNull(worker90);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        boolean boolean11 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company2.getProjects();
        java.lang.String str10 = company2.getName();
        java.lang.String str11 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 10L);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker14.removeProject(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = qualification3.getWorkers();
        java.lang.String str6 = qualification3.toString();
        java.lang.String str7 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean7 = company1.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company11.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker16 = company1.createWorker("hi!:0:0:0:0", qualificationSet14, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary cannot be less than or equal to zero");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        java.lang.String str20 = qualification12.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO21 = qualification12.toDTO();
        java.lang.String str22 = qualification12.toString();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        boolean boolean33 = qualification26.equals((java.lang.Object) qualification31);
        edu.colostate.cs415.model.Worker worker34 = null;
        qualification26.addWorker(worker34);
        java.lang.String str36 = qualification26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification26.getWorkers();
        boolean boolean38 = qualification12.equals((java.lang.Object) qualification26);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification42 = company40.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company40.getUnassignedWorkers();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet45 = company40.getProjects();
        java.lang.String str46 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet47 = company40.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company40.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company50 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification52 = company50.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet53 = qualification52.getWorkers();
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification57 = company55.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet58 = qualification57.getWorkers();
        boolean boolean59 = qualification52.equals((java.lang.Object) qualification57);
        edu.colostate.cs415.model.Worker worker60 = null;
        qualification57.addWorker(worker60);
        edu.colostate.cs415.model.Company company63 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification65 = company63.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet66 = qualification65.getWorkers();
        boolean boolean67 = qualification57.equals((java.lang.Object) workerSet66);
        edu.colostate.cs415.model.Company company69 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet70 = company69.getEmployedWorkers();
        boolean boolean71 = qualification57.equals((java.lang.Object) company69);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet72 = company69.getQualifications();
        boolean boolean73 = company40.equals((java.lang.Object) company69);
        boolean boolean74 = qualification12.equals((java.lang.Object) company69);
        edu.colostate.cs415.model.Qualification qualification76 = company69.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet77 = company69.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet78 = company69.getAvailableWorkers();
        boolean boolean79 = company1.equals((java.lang.Object) workerSet78);
        edu.colostate.cs415.model.Project project80 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "hi!" + "'", str36, "hi!");
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification42);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "hi!:0:0" + "'", str46, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet47);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(qualification52);
        org.junit.Assert.assertNotNull(workerSet53);
        org.junit.Assert.assertNotNull(qualification57);
        org.junit.Assert.assertNotNull(workerSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification65);
        org.junit.Assert.assertNotNull(workerSet66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(workerSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(qualificationSet72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(qualification76);
        org.junit.Assert.assertNotNull(workerSet77);
        org.junit.Assert.assertNotNull(workerSet78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.lang.String str21 = company1.getName();
        java.lang.String str22 = company1.getName();
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company24.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company24.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company24.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company24.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company24.getProjects();
        boolean boolean32 = company1.equals((java.lang.Object) projectSet31);
        edu.colostate.cs415.model.Company company35 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification37 = company35.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet38 = company35.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company35.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize40 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project41 = company1.createProject("hi!:0:0:0:0", qualificationSet39, projectSize40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(projectSet27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(qualificationSet38);
        org.junit.Assert.assertNotNull(qualificationSet39);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        java.lang.String str11 = company7.getName();
        boolean boolean12 = company1.equals((java.lang.Object) company7);
        edu.colostate.cs415.model.Qualification qualification14 = company1.createQualification("hi!");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0" + "'", str11, "hi!:0:0:0:0");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualification14);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        boolean boolean34 = company1.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet36 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company30.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company30.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet40 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker42 = company30.createWorker("hi!:0:0", qualificationSet40, (double) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(projectSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(workerSet38);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO7 = qualification5.toDTO();
        java.lang.String str8 = qualification5.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualificationDTO7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company17.getUnassignedWorkers();
        java.lang.String str21 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.lang.String str23 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company17.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = company12.createWorker("hi!", qualificationSet27, 1.0d);
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker29, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!:0:0" + "'", str23, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualificationSet27);
        org.junit.Assert.assertNotNull(worker29);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getUnavailableWorkers();
        java.lang.String str8 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize10 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project11 = new edu.colostate.cs415.model.Project("hi!", qualificationSet9, projectSize10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        java.lang.String str16 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0:0:0" + "'", str16, "hi!:0:0:0:0");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        edu.colostate.cs415.model.Qualification qualification1 = new edu.colostate.cs415.model.Qualification("hi!:0:0");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str4 = company3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company3.getAssignedWorkers();
        java.lang.String str6 = company3.getName();
        boolean boolean7 = qualification1.equals((java.lang.Object) str6);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = qualification1.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO9 = qualification1.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification1.getWorkers();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationDTO9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        boolean boolean11 = company1.equals((java.lang.Object) qualificationDTO10);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.lang.String str13 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getEmployedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company4 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str5 = company4.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company4.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) projectSet6);
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO10 = qualification9.toDTO();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(qualificationDTO10);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getAvailableWorkers();
        java.lang.String str11 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker14 = company1.createWorker("hi!", qualificationSet12, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.Class<?> wildcardClass8 = company1.getClass();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.Object obj13 = null;
        boolean boolean14 = company7.equals(obj13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getAvailableWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(workerSet18);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        edu.colostate.cs415.model.Worker worker18 = null;
        qualification15.addWorker(worker18);
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification23 = company21.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = qualification23.getWorkers();
        boolean boolean25 = qualification15.equals((java.lang.Object) workerSet24);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company27.getEmployedWorkers();
        boolean boolean29 = qualification15.equals((java.lang.Object) company27);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company27.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company27.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company27.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company27.createQualification("hi!");
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company36.getUnassignedWorkers();
        java.lang.String str40 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet41 = company36.getProjects();
        java.lang.String str42 = company36.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company36.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company36.getEmployedWorkers();
        boolean boolean45 = qualification34.equals((java.lang.Object) company36);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company36.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker48 = company1.createWorker("", qualificationSet46, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(qualification23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!:0:0" + "'", str40, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification11.toDTO();
        java.lang.String str13 = qualification11.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str13, "hi!:0:0:0:0:0:0");
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getEmployedWorkers();
        java.lang.String str24 = company20.getName();
        java.lang.String str25 = company20.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company20.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = qualification31.getWorkers();
        edu.colostate.cs415.model.Company company34 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification36 = company34.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification36.getWorkers();
        boolean boolean38 = qualification31.equals((java.lang.Object) qualification36);
        edu.colostate.cs415.model.Worker worker39 = null;
        qualification36.addWorker(worker39);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification44 = company42.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = qualification44.getWorkers();
        boolean boolean46 = qualification36.equals((java.lang.Object) workerSet45);
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company48.getEmployedWorkers();
        boolean boolean50 = qualification36.equals((java.lang.Object) company48);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet51 = company48.getQualifications();
        edu.colostate.cs415.model.Worker worker53 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet51, (double) 10.0f);
        edu.colostate.cs415.model.Project project54 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.assign(worker53, project54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(qualification44);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationSet51);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = null;
        edu.colostate.cs415.model.ProjectSize projectSize12 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project13 = company1.createProject("hi!:0:0:0:0", qualificationSet11, projectSize12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company16.getUnassignedWorkers();
        java.lang.String str20 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet21 = company16.getProjects();
        java.lang.String str22 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company16.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company16.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company16.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker28 = company11.createWorker("hi!", qualificationSet26, 1.0d);
        edu.colostate.cs415.model.Project project29 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker28, project29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertNotNull(worker28);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company2.createQualification("hi!");
        java.lang.Object obj7 = null;
        boolean boolean8 = company2.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker12 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet10, (double) 100.0f);
        // The following exception was thrown during execution in test generation
        try {
            worker12.setSalary((double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: salary can not be a negative number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.lang.Class<?> wildcardClass12 = workerSet11.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company2.getUnassignedWorkers();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize9 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project10 = new edu.colostate.cs415.model.Project("hi!", qualificationSet8, projectSize9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.toString();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification11 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company13.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company13.getProjects();
        java.lang.Object obj18 = null;
        boolean boolean19 = company13.equals(obj18);
        edu.colostate.cs415.model.Qualification qualification21 = company13.createQualification("hi!");
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company23.getUnassignedWorkers();
        java.lang.String str27 = company23.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet28 = company23.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company23.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company23.getProjects();
        boolean boolean32 = company13.equals((java.lang.Object) projectSet31);
        boolean boolean33 = company1.equals((java.lang.Object) projectSet31);
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!:0:0" + "'", str27, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification24.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualificationDTO27);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = qualification5.getWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification10.toDTO();
        boolean boolean13 = qualification10.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Worker worker14 = null;
        qualification10.addWorker(worker14);
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company17.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company17.getProjects();
        edu.colostate.cs415.model.Qualification qualification21 = company17.createQualification("hi!");
        boolean boolean22 = qualification10.equals((java.lang.Object) company17);
        boolean boolean23 = qualification5.equals((java.lang.Object) boolean22);
        java.lang.Object obj24 = null;
        boolean boolean25 = qualification5.equals(obj24);
        java.lang.String str26 = qualification5.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification20.addWorker(worker23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification20.equals((java.lang.Object) workerSet29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        boolean boolean34 = qualification20.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company32.createQualification("hi!");
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = company41.getUnassignedWorkers();
        java.lang.String str45 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet46 = company41.getProjects();
        java.lang.String str47 = company41.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = company41.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet49 = company41.getEmployedWorkers();
        boolean boolean50 = qualification39.equals((java.lang.Object) company41);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO51 = qualification39.toDTO();
        boolean boolean52 = qualification9.equals((java.lang.Object) qualification39);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO53 = qualification9.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!:0:0" + "'", str45, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "hi!:0:0" + "'", str47, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertNotNull(workerSet49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(qualificationDTO51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(qualificationDTO53);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAvailableWorkers();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company12.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = company1.createProject("", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification3.getWorkers();
        java.lang.String str15 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO17 = qualification3.toDTO();
        java.lang.String str18 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(qualificationDTO17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO5 = qualification3.toDTO();
        boolean boolean7 = qualification3.equals((java.lang.Object) (short) 10);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO8 = qualification3.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationDTO5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationDTO8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        java.lang.Class<?> wildcardClass5 = workerSet4.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        java.lang.String str8 = company1.getName();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification18 = company16.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = qualification18.getWorkers();
        boolean boolean20 = qualification13.equals((java.lang.Object) qualification18);
        edu.colostate.cs415.model.Worker worker21 = null;
        qualification18.addWorker(worker21);
        edu.colostate.cs415.model.Company company24 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification26 = company24.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = qualification26.getWorkers();
        boolean boolean28 = qualification18.equals((java.lang.Object) workerSet27);
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getEmployedWorkers();
        boolean boolean32 = qualification18.equals((java.lang.Object) company30);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet33 = company30.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet35 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification37 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = company30.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet40 = company30.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company30.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet42 = company30.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize43 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project44 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet42, projectSize43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualification18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(qualification26);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(qualificationSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(projectSet35);
        org.junit.Assert.assertNotNull(qualification37);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(workerSet40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(qualificationSet42);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.lang.String str10 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet20 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getUnassignedWorkers();
        java.lang.String str22 = company1.toString();
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        boolean boolean29 = company25.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet30 = company25.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet31 = company25.getQualifications();
        edu.colostate.cs415.model.Worker worker33 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet31, (double) 'a');
        edu.colostate.cs415.model.Project project34 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker33, project34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(projectSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(qualificationSet30);
        org.junit.Assert.assertNotNull(qualificationSet31);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company10.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company10.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = company1.createProject("hi!", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        java.lang.String str16 = qualification13.toString();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification20.equals((java.lang.Object) qualification25);
        edu.colostate.cs415.model.Worker worker28 = null;
        qualification20.addWorker(worker28);
        java.lang.String str30 = qualification20.toString();
        boolean boolean31 = qualification13.equals((java.lang.Object) str30);
        java.lang.String str32 = qualification13.toString();
        boolean boolean33 = company1.equals((java.lang.Object) str32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project35 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project8 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet24 = company20.getQualifications();
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company26.getUnassignedWorkers();
        java.lang.String str30 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company26.getProjects();
        java.lang.String str32 = company26.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company26.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company26.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        edu.colostate.cs415.model.Company company41 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification43 = company41.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet44 = qualification43.getWorkers();
        boolean boolean45 = qualification38.equals((java.lang.Object) qualification43);
        edu.colostate.cs415.model.Worker worker46 = null;
        qualification43.addWorker(worker46);
        edu.colostate.cs415.model.Company company49 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification51 = company49.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet52 = qualification51.getWorkers();
        boolean boolean53 = qualification43.equals((java.lang.Object) workerSet52);
        edu.colostate.cs415.model.Company company55 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company55.getEmployedWorkers();
        boolean boolean57 = qualification43.equals((java.lang.Object) company55);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company55.getQualifications();
        boolean boolean59 = company26.equals((java.lang.Object) company55);
        edu.colostate.cs415.model.Company company62 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification64 = company62.createQualification("hi!");
        boolean boolean66 = company62.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet67 = company62.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company62.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet69 = company62.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet70 = company62.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet71 = company62.getQualifications();
        edu.colostate.cs415.model.Worker worker73 = company26.createWorker("hi!", qualificationSet71, (double) 100.0f);
        edu.colostate.cs415.model.Project project74 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.assign(worker73, project74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(qualificationSet24);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!:0:0" + "'", str30, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!:0:0" + "'", str32, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertNotNull(qualification43);
        org.junit.Assert.assertNotNull(workerSet44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(qualification51);
        org.junit.Assert.assertNotNull(workerSet52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(qualification64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(qualificationSet67);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertNotNull(workerSet69);
        org.junit.Assert.assertNotNull(projectSet70);
        org.junit.Assert.assertNotNull(qualificationSet71);
        org.junit.Assert.assertNotNull(worker73);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.lang.String str7 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str6 = qualification5.toString();
        java.lang.String str7 = qualification5.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification12 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str13 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str18 = company17.toString();
        java.lang.String str19 = company17.toString();
        java.lang.String str20 = company17.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company17.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet22 = company17.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company17.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company1.createProject("", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!:0:0:0:0" + "'", str18, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0:0:0" + "'", str19, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(projectSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0");
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualification9);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) (short) -1);
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company7.getProjects();
        boolean boolean11 = company1.equals((java.lang.Object) projectSet10);
        edu.colostate.cs415.model.Qualification qualification13 = company1.createQualification("hi!");
        java.lang.String str14 = qualification13.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification13.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO16 = qualification13.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification13.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertNotNull(qualificationDTO16);
        org.junit.Assert.assertNotNull(workerSet17);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        java.lang.String str18 = qualification10.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification10.toDTO();
        java.lang.String str20 = qualification10.toString();
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        boolean boolean31 = qualification24.equals((java.lang.Object) qualification29);
        edu.colostate.cs415.model.Worker worker32 = null;
        qualification24.addWorker(worker32);
        java.lang.String str34 = qualification24.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification24.getWorkers();
        boolean boolean36 = qualification10.equals((java.lang.Object) qualification24);
        edu.colostate.cs415.model.Company company38 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification40 = company38.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company38.getUnassignedWorkers();
        java.lang.String str42 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company38.getProjects();
        java.lang.String str44 = company38.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company38.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company38.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company48 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification50 = company48.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet51 = qualification50.getWorkers();
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification55 = company53.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = qualification55.getWorkers();
        boolean boolean57 = qualification50.equals((java.lang.Object) qualification55);
        edu.colostate.cs415.model.Worker worker58 = null;
        qualification55.addWorker(worker58);
        edu.colostate.cs415.model.Company company61 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification63 = company61.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet64 = qualification63.getWorkers();
        boolean boolean65 = qualification55.equals((java.lang.Object) workerSet64);
        edu.colostate.cs415.model.Company company67 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet68 = company67.getEmployedWorkers();
        boolean boolean69 = qualification55.equals((java.lang.Object) company67);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet70 = company67.getQualifications();
        boolean boolean71 = company38.equals((java.lang.Object) company67);
        boolean boolean72 = qualification10.equals((java.lang.Object) company67);
        edu.colostate.cs415.model.Qualification qualification74 = company67.createQualification("hi!:0:0:0:0");
        java.lang.String str75 = company67.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet76 = company67.getQualifications();
        edu.colostate.cs415.model.Worker worker78 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet76, (double) 0);
        edu.colostate.cs415.model.Project project79 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker78, project79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!" + "'", str20, "hi!");
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!" + "'", str34, "hi!");
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(qualification40);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "hi!:0:0" + "'", str42, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertNotNull(qualification50);
        org.junit.Assert.assertNotNull(workerSet51);
        org.junit.Assert.assertNotNull(qualification55);
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(qualification63);
        org.junit.Assert.assertNotNull(workerSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(workerSet68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(qualificationSet70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(qualification74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "hi!" + "'", str75, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet76);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 0L);
        edu.colostate.cs415.model.Project project19 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker18, project19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company15.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company15.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company15.getProjects();
        java.lang.String str19 = company15.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company15.getAssignedWorkers();
        boolean boolean21 = company11.equals((java.lang.Object) company15);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company15.getQualifications();
        edu.colostate.cs415.model.Worker worker24 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet22, (double) (byte) 10);
        edu.colostate.cs415.model.Project project25 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker24, project25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!:0:0" + "'", str19, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification3.getWorkers();
        java.lang.String str49 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO50 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO50);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.lang.String str10 = company7.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company7.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company7.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize15 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project16 = company1.createProject("", qualificationSet14, projectSize15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company6.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company6.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company6.getProjects();
        java.lang.String str10 = company6.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company6.getAssignedWorkers();
        boolean boolean12 = company2.equals((java.lang.Object) company6);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company6.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must be positive number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        boolean boolean14 = company11.equals((java.lang.Object) "");
        java.lang.String str15 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getEmployedWorkers();
        java.lang.String str17 = company11.getName();
        java.lang.String str18 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company11.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) 10.0f);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company32.getProjects();
        edu.colostate.cs415.model.Company company51 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification53 = company51.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company51.getUnassignedWorkers();
        java.lang.String str55 = company51.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet56 = company51.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company51.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification59 = company51.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str60 = company51.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet61 = company51.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker63 = company32.createWorker("hi!:0:0", qualificationSet61, (double) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertNotNull(qualification53);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "hi!:0:0" + "'", str55, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet56);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualification59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet61);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str8 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet10 = company7.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker14 = company1.createWorker("hi!", qualificationSet12, (double) (-1.0f));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0:0:0" + "'", str8, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualificationSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company5.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company5.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company5.getProjects();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getEmployedWorkers();
        boolean boolean11 = qualification3.equals((java.lang.Object) company5);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str15 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company14.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company14.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company14.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet19 = company14.getUnavailableWorkers();
        java.lang.String str20 = company14.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company14.getQualifications();
        edu.colostate.cs415.model.Worker worker23 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet21, (double) 1L);
        edu.colostate.cs415.model.Project project24 = null;
        // The following exception was thrown during execution in test generation
        try {
            company5.unassign(worker23, project24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(workerSet19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO11 = qualification3.toDTO();
        java.lang.String str12 = qualification3.toString();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO14 = qualification3.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO15 = qualification3.toDTO();
        java.lang.String str16 = qualification3.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualificationDTO11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO14);
        org.junit.Assert.assertNotNull(qualificationDTO15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str8 = company1.toString();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company11.getProjects();
        java.lang.String str15 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company11.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str21 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        boolean boolean24 = company11.equals((java.lang.Object) qualificationSet23);
        edu.colostate.cs415.model.ProjectSize projectSize25 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project26 = company1.createProject("hi!:0:0", qualificationSet23, projectSize25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!:0:0" + "'", str21, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO4 = qualification3.toDTO();
        boolean boolean6 = qualification3.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = qualification10.getWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        boolean boolean17 = qualification10.equals((java.lang.Object) qualification15);
        boolean boolean18 = qualification3.equals((java.lang.Object) boolean17);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO19 = qualification3.toDTO();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company21.getAssignedWorkers();
        boolean boolean24 = company21.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company21.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = company21.getUnassignedWorkers();
        boolean boolean27 = qualification3.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO28 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(qualificationDTO4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationDTO19);
        org.junit.Assert.assertNotNull(workerSet22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(qualificationDTO28);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company20.getProjects();
        java.lang.String str30 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company20.getProjects();
        edu.colostate.cs415.model.Project project32 = null;
        // The following exception was thrown during execution in test generation
        try {
            company20.start(project32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(projectSet31);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet16, (double) 'a');
        edu.colostate.cs415.model.ProjectSize projectSize19 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project20 = company1.createProject("hi!:0:0", qualificationSet16, projectSize19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification4 = company1.createQualification("hi!");
        edu.colostate.cs415.model.Qualification qualification6 = company1.createQualification("hi!:0:0");
        java.lang.String str7 = company1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualification6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str3 = company2.toString();
        java.lang.String str4 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company2.getProjects();
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company2.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) (short) 0);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker14.addProject(project15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0:0:0" + "'", str4, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str33 = company32.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company32.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification36 = company32.createQualification("hi!");
        java.lang.Object obj37 = null;
        boolean boolean38 = company32.equals(obj37);
        edu.colostate.cs415.model.Company company40 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet41 = company40.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet42 = company40.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet43 = company40.getProjects();
        java.lang.String str44 = company40.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company40.getAssignedWorkers();
        boolean boolean46 = company32.equals((java.lang.Object) workerSet45);
        boolean boolean47 = qualification3.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet48 = company32.getProjects();
        java.lang.String str49 = company32.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0:0:0" + "'", str33, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualification36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(workerSet41);
        org.junit.Assert.assertNotNull(projectSet42);
        org.junit.Assert.assertNotNull(projectSet43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "hi!:0:0" + "'", str44, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(projectSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!:0:0" + "'", str49, "hi!:0:0");
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet11 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str17 = company16.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company16.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, 0.0d);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!:0:0:0:0" + "'", str17, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company2.getAvailableWorkers();
        java.lang.String str5 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize7 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project8 = new edu.colostate.cs415.model.Project("", qualificationSet6, projectSize7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getUnassignedWorkers();
        java.lang.String str7 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet13 = company11.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company11.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company11.getProjects();
        java.lang.String str18 = company11.getName();
        boolean boolean19 = qualification9.equals((java.lang.Object) company11);
        java.lang.String str20 = company11.toString();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = qualification30.getWorkers();
        boolean boolean32 = qualification25.equals((java.lang.Object) qualification30);
        edu.colostate.cs415.model.Worker worker33 = null;
        qualification30.addWorker(worker33);
        edu.colostate.cs415.model.Company company36 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification38 = company36.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification38.getWorkers();
        boolean boolean40 = qualification30.equals((java.lang.Object) workerSet39);
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getEmployedWorkers();
        boolean boolean44 = qualification30.equals((java.lang.Object) company42);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet45 = company42.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet46 = company42.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker48 = company11.createWorker("", qualificationSet46, (double) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0" + "'", str12, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0" + "'", str20, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(qualification38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(workerSet45);
        org.junit.Assert.assertNotNull(qualificationSet46);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification31 = company29.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company29.getUnassignedWorkers();
        java.lang.String str33 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet34 = company29.getProjects();
        java.lang.String str35 = company29.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company29.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = company29.getEmployedWorkers();
        boolean boolean38 = qualification27.equals((java.lang.Object) company29);
        java.lang.String str39 = company29.toString();
        java.lang.Class<?> wildcardClass40 = company29.getClass();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(qualification31);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!:0:0" + "'", str33, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!:0:0" + "'", str35, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(workerSet37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "hi!:0:0" + "'", str39, "hi!:0:0");
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnassignedWorkers();
        java.lang.String str6 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker10 = new edu.colostate.cs415.model.Worker("", qualificationSet8, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getEmployedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification34 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company1.getQualifications();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company11.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet16 = company15.getProjects();
        boolean boolean17 = company11.equals((java.lang.Object) company15);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company11.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company11.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker21 = company1.createWorker("hi!:0:0:0:0:0:0", qualificationSet19, (double) 10.0f);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        boolean boolean7 = company1.equals((java.lang.Object) "hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.Class<?> wildcardClass6 = workerSet5.getClass();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet4 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualificationSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification7);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification7 = company5.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company5.getUnassignedWorkers();
        java.lang.String str9 = company5.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company5.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company5.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company5.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company5.getEmployedWorkers();
        edu.colostate.cs415.model.Company company16 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet17 = company16.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company16.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        boolean boolean24 = company20.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet25 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company20.getQualifications();
        boolean boolean27 = company16.equals((java.lang.Object) qualificationSet26);
        edu.colostate.cs415.model.Worker worker29 = company5.createWorker("hi!", qualificationSet26, 100.0d);
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker29, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(qualificationSet25);
        org.junit.Assert.assertNotNull(qualificationSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(worker29);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification13 = company11.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = qualification13.getWorkers();
        boolean boolean15 = qualification8.equals((java.lang.Object) qualification13);
        edu.colostate.cs415.model.Worker worker16 = null;
        qualification8.addWorker(worker16);
        java.lang.String str18 = qualification8.toString();
        boolean boolean19 = company1.equals((java.lang.Object) qualification8);
        java.lang.String str20 = company1.getName();
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company23.getAssignedWorkers();
        boolean boolean26 = company23.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet27 = company23.getQualifications();
        edu.colostate.cs415.model.Worker worker29 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet27, (double) 12);
        edu.colostate.cs415.model.Project project30 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker29, project30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi!:0:0:0:0" + "'", str20, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(qualificationSet27);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getUnavailableWorkers();
        boolean boolean34 = company31.equals((java.lang.Object) "");
        java.lang.String str35 = company31.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company31.getEmployedWorkers();
        java.lang.String str37 = company31.getName();
        java.lang.String str38 = company31.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet39 = company31.getQualifications();
        edu.colostate.cs415.model.Worker worker41 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet39, (double) 10.0f);
        // The following exception was thrown during execution in test generation
        try {
            qualification24.removeWorker(worker41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "hi!" + "'", str35, "hi!");
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi!" + "'", str37, "hi!");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet39);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet5 = company1.getProjects();
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        java.lang.String str8 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str14 = company13.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company13.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company17.getProjects();
        boolean boolean19 = company13.equals((java.lang.Object) company17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company13.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company13.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize22 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project23 = company1.createProject("hi!:0:0", qualificationSet21, projectSize22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(projectSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0" + "'", str6, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!:0:0" + "'", str8, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0:0:0" + "'", str14, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = qualification19.getWorkers();
        boolean boolean21 = qualification14.equals((java.lang.Object) qualification19);
        edu.colostate.cs415.model.Worker worker22 = null;
        qualification19.addWorker(worker22);
        edu.colostate.cs415.model.Company company25 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification27 = company25.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification27.getWorkers();
        boolean boolean29 = qualification19.equals((java.lang.Object) workerSet28);
        edu.colostate.cs415.model.Company company31 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company31.getEmployedWorkers();
        boolean boolean33 = qualification19.equals((java.lang.Object) company31);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company31.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company31.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker37 = company1.createWorker("hi!:0:0:0:0", qualificationSet35, (double) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(qualificationSet35);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = qualification9.getWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification14 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification14.getWorkers();
        boolean boolean16 = qualification9.equals((java.lang.Object) qualification14);
        edu.colostate.cs415.model.Worker worker17 = null;
        qualification14.addWorker(worker17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification14.equals((java.lang.Object) workerSet23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet27 = company26.getEmployedWorkers();
        boolean boolean28 = qualification14.equals((java.lang.Object) company26);
        edu.colostate.cs415.model.Qualification qualification30 = company26.createQualification("hi!");
        boolean boolean31 = company1.equals((java.lang.Object) company26);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet32 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company1.getUnassignedWorkers();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Qualification qualification35 = company1.createQualification("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Description cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(qualification14);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(workerSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(workerSet32);
        org.junit.Assert.assertNotNull(workerSet33);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        java.lang.String str11 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO12 = qualification3.toDTO();
        java.lang.String str13 = qualification3.toString();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = qualification22.getWorkers();
        boolean boolean24 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Worker worker25 = null;
        qualification17.addWorker(worker25);
        java.lang.String str27 = qualification17.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification17.getWorkers();
        boolean boolean29 = qualification3.equals((java.lang.Object) qualification17);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification3.getWorkers();
        java.lang.String str31 = qualification3.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO32 = qualification3.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO32);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        edu.colostate.cs415.model.Qualification qualification13 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company9.getProjects();
        java.lang.String str16 = company9.toString();
        java.lang.String str17 = company9.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company9.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker20 = company1.createWorker("hi!:0:0", qualificationSet18, 100.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.Object obj7 = null;
        boolean boolean8 = company1.equals(obj7);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company1.getUnassignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(workerSet14);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0");
        java.lang.String str11 = company1.getName();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet34 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company1.getAssignedWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(workerSet34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Project project9 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company20.getProjects();
        edu.colostate.cs415.model.Qualification qualification27 = company20.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet29 = company20.getProjects();
        java.lang.String str30 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet31 = company20.getProjects();
        java.lang.String str32 = company20.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet34 = null;
        edu.colostate.cs415.model.ProjectSize projectSize35 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project36 = company20.createProject("hi!:0:0:0:0:0:0", qualificationSet34, projectSize35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(projectSet29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertNotNull(projectSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "hi!" + "'", str32, "hi!");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company10.getUnassignedWorkers();
        java.lang.String str14 = company10.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company10.getProjects();
        java.lang.Object obj16 = null;
        boolean boolean17 = company10.equals(obj16);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet19 = company10.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet21 = company10.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker23 = company1.createWorker("", qualificationSet21, (double) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0:0:0" + "'", str7, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!:0:0" + "'", str14, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertNotNull(projectSet19);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(qualificationSet21);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification15 = company13.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = qualification15.getWorkers();
        edu.colostate.cs415.model.Company company18 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification20 = company18.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = qualification20.getWorkers();
        boolean boolean22 = qualification15.equals((java.lang.Object) qualification20);
        edu.colostate.cs415.model.Worker worker23 = null;
        qualification20.addWorker(worker23);
        edu.colostate.cs415.model.Company company26 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification28 = company26.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = qualification28.getWorkers();
        boolean boolean30 = qualification20.equals((java.lang.Object) workerSet29);
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company32.getEmployedWorkers();
        boolean boolean34 = qualification20.equals((java.lang.Object) company32);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company32.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company32.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet37 = company32.getProjects();
        edu.colostate.cs415.model.Qualification qualification39 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet40 = company32.getProjects();
        java.lang.String str41 = company32.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet42 = company32.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet43 = company32.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker45 = company1.createWorker("hi!:0:0", qualificationSet43, (double) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary cannot be less than or equal to zero");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(qualification15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualification20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(qualification28);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(projectSet37);
        org.junit.Assert.assertNotNull(qualification39);
        org.junit.Assert.assertNotNull(projectSet40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(workerSet42);
        org.junit.Assert.assertNotNull(qualificationSet43);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        boolean boolean14 = company10.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet15 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company10.getQualifications();
        java.lang.String str17 = company10.getName();
        edu.colostate.cs415.model.Qualification qualification19 = company10.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet20 = company10.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company10.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker24 = company1.createWorker("hi!:0:0", qualificationSet22, 1.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualification is not in the company set");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(qualificationSet15);
        org.junit.Assert.assertNotNull(qualificationSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertNotNull(qualificationSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(qualificationSet22);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAssignedWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 12);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker15, project16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company5 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company5.getProjects();
        boolean boolean7 = company1.equals((java.lang.Object) company5);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company5.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company5.getAssignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        edu.colostate.cs415.model.Company company13 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company13.getUnavailableWorkers();
        boolean boolean16 = company13.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company13.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet18 = company13.getProjects();
        boolean boolean19 = company1.equals((java.lang.Object) projectSet18);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet20 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet22 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project23 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(projectSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(workerSet20);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertNotNull(workerSet22);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company7.getUnavailableWorkers();
        boolean boolean10 = company7.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company7.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company7.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) 1L);
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker14, project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company1.getProjects();
        java.lang.String str11 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company1.getProjects();
        edu.colostate.cs415.model.Project project13 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(projectSet12);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        edu.colostate.cs415.model.Company company3 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification5 = company3.createQualification("hi!");
        boolean boolean7 = company3.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet8 = company3.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company3.getQualifications();
        java.lang.String str10 = company3.getName();
        java.lang.String str11 = company3.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company3.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company3.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) (short) 1);
        edu.colostate.cs415.model.ProjectSize projectSize16 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project17 = new edu.colostate.cs415.model.Project("hi!:0:0:0:0", qualificationSet13, projectSize16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(qualificationSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        boolean boolean11 = company8.equals((java.lang.Object) "");
        edu.colostate.cs415.model.Qualification qualification13 = company8.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company8.getProjects();
        java.lang.String str15 = company8.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company8.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project18 = company1.createProject("hi!:0:0", qualificationSet16, projectSize17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(qualification13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str15 = company14.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company14.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize17 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project18 = company1.createProject("hi!:0:0:0:0", qualificationSet16, projectSize17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnassignedWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.finish(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(workerSet9);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str10 = company1.getName();
        edu.colostate.cs415.model.Project project11 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker11.removeProject(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: project cannot be null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        edu.colostate.cs415.model.Qualification qualification24 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO25 = qualification24.toDTO();
        java.lang.String str26 = qualification24.toString();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO27 = qualification24.toDTO();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet28 = qualification24.getWorkers();
        edu.colostate.cs415.model.Company company30 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet31 = company30.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet32 = company30.getProjects();
        edu.colostate.cs415.model.Qualification qualification34 = company30.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification24.equals((java.lang.Object) qualification34);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet37 = qualification34.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(qualificationDTO25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertNotNull(qualificationDTO27);
        org.junit.Assert.assertNotNull(workerSet28);
        org.junit.Assert.assertNotNull(workerSet31);
        org.junit.Assert.assertNotNull(projectSet32);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(workerSet37);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company2.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company2.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker8 = new edu.colostate.cs415.model.Worker("", qualificationSet6, (double) 0L);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Worker name cannot be empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification8.addWorker(worker11);
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification8.equals((java.lang.Object) workerSet17);
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet21 = company20.getEmployedWorkers();
        boolean boolean22 = qualification8.equals((java.lang.Object) company20);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company20.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company20.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = company20.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet26 = company20.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet27 = company20.getProjects();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(workerSet21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(qualificationSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertNotNull(projectSet26);
        org.junit.Assert.assertNotNull(projectSet27);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAssignedWorkers();
        java.lang.String str5 = company1.getName();
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!" + "'", str5, "hi!");
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        edu.colostate.cs415.model.Qualification qualification10 = company1.createQualification("hi!:0:0:0:0:0:0");
        java.lang.String str11 = qualification10.toString();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0:0:0:0:0" + "'", str11, "hi!:0:0:0:0:0:0");
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.toString();
        edu.colostate.cs415.model.Company company7 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification9 = company7.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company7.getUnassignedWorkers();
        java.lang.String str11 = company7.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company7.getProjects();
        java.lang.Object obj13 = null;
        boolean boolean14 = company7.equals(obj13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company7.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company7.getAvailableWorkers();
        boolean boolean17 = company1.equals((java.lang.Object) company7);
        java.lang.String str18 = company1.getName();
        edu.colostate.cs415.model.Company company21 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str22 = company21.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet23 = company21.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize24 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project25 = company1.createProject("hi!:0:0:0:0:0:0", qualificationSet23, projectSize24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!:0:0" + "'", str22, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet23);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        java.lang.Object obj6 = null;
        boolean boolean7 = company1.equals(obj6);
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet11 = company9.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company9.getProjects();
        java.lang.String str13 = company9.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company9.getAssignedWorkers();
        boolean boolean15 = company1.equals((java.lang.Object) workerSet14);
        edu.colostate.cs415.model.Qualification qualification17 = company1.createQualification("hi!:0:0:0:0:0:0");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO18 = qualification17.toDTO();
        edu.colostate.cs415.model.Company company20 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification22 = company20.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO23 = qualification22.toDTO();
        boolean boolean25 = qualification22.equals((java.lang.Object) 10.0d);
        edu.colostate.cs415.model.Company company27 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification29 = company27.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = qualification29.getWorkers();
        edu.colostate.cs415.model.Company company32 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification34 = company32.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = qualification34.getWorkers();
        boolean boolean36 = qualification29.equals((java.lang.Object) qualification34);
        boolean boolean37 = qualification22.equals((java.lang.Object) boolean36);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet38 = qualification22.getWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet39 = qualification22.getWorkers();
        java.lang.String str40 = qualification22.toString();
        edu.colostate.cs415.model.Company company42 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet43 = company42.getUnavailableWorkers();
        boolean boolean45 = company42.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet46 = company42.getAvailableWorkers();
        boolean boolean47 = qualification22.equals((java.lang.Object) workerSet46);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet48 = qualification22.getWorkers();
        java.lang.String str49 = qualification22.toString();
        boolean boolean50 = qualification17.equals((java.lang.Object) qualification22);
        edu.colostate.cs415.model.Company company53 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet54 = company53.getUnavailableWorkers();
        boolean boolean56 = company53.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet57 = company53.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet58 = company53.getQualifications();
        java.lang.String str59 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet60 = company53.getProjects();
        java.lang.String str61 = company53.getName();
        java.lang.String str62 = company53.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet63 = company53.getQualifications();
        edu.colostate.cs415.model.Worker worker65 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet63, (double) 10L);
        // The following exception was thrown during execution in test generation
        try {
            qualification17.removeWorker(worker65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(projectSet11);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0" + "'", str13, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(qualificationDTO18);
        org.junit.Assert.assertNotNull(qualification22);
        org.junit.Assert.assertNotNull(qualificationDTO23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(qualification29);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertNotNull(qualification34);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(workerSet38);
        org.junit.Assert.assertNotNull(workerSet39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "hi!" + "'", str40, "hi!");
        org.junit.Assert.assertNotNull(workerSet43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(workerSet46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(workerSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "hi!" + "'", str49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(workerSet54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(workerSet57);
        org.junit.Assert.assertNotNull(qualificationSet58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!:0:0" + "'", str59, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi!:0:0" + "'", str62, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet63);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getEmployedWorkers();
        java.lang.String str9 = company1.getName();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        edu.colostate.cs415.model.Qualification qualification16 = company12.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) '4');
        edu.colostate.cs415.model.Project project21 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker20, project21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet6 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet7 = company1.getProjects();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet16 = company10.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker19 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet17, (double) 100L);
        edu.colostate.cs415.model.Project project20 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker19, project20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet6);
        org.junit.Assert.assertNotNull(projectSet7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertNotNull(workerSet16);
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.lang.String str6 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification11 = company9.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = qualification11.getWorkers();
        edu.colostate.cs415.model.Company company14 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification16 = company14.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = qualification16.getWorkers();
        boolean boolean18 = qualification11.equals((java.lang.Object) qualification16);
        edu.colostate.cs415.model.Worker worker19 = null;
        qualification16.addWorker(worker19);
        edu.colostate.cs415.model.Company company22 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification24 = company22.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet25 = qualification24.getWorkers();
        boolean boolean26 = qualification16.equals((java.lang.Object) workerSet25);
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet29 = company28.getEmployedWorkers();
        boolean boolean30 = qualification16.equals((java.lang.Object) company28);
        edu.colostate.cs415.model.Qualification qualification32 = company28.createQualification("hi!");
        boolean boolean33 = company1.equals((java.lang.Object) qualification32);
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO34 = qualification32.toDTO();
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO35 = qualification32.toDTO();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(qualification11);
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(qualification16);
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(qualification24);
        org.junit.Assert.assertNotNull(workerSet25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(workerSet29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(qualification32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(qualificationDTO34);
        org.junit.Assert.assertNotNull(qualificationDTO35);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        boolean boolean5 = company1.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company1.getProjects();
        java.lang.String str10 = company1.toString();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.lang.String str15 = company12.toString();
        java.lang.String str16 = company12.toString();
        boolean boolean17 = company1.equals((java.lang.Object) str16);
        edu.colostate.cs415.model.Company company19 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification21 = company19.createQualification("hi!");
        boolean boolean23 = company19.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Project> projectSet24 = company19.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet25 = company19.getProjects();
        edu.colostate.cs415.model.Company company28 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification30 = company28.createQualification("hi!");
        boolean boolean32 = company28.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet33 = company28.getAssignedWorkers();
        java.lang.String str34 = company28.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet35 = company28.getQualifications();
        edu.colostate.cs415.model.Worker worker37 = company19.createWorker("hi!", qualificationSet35, (double) 100);
        edu.colostate.cs415.model.Project project38 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker37, project38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!:0:0" + "'", str10, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!:0:0" + "'", str15, "hi!:0:0");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(qualification21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(projectSet24);
        org.junit.Assert.assertNotNull(projectSet25);
        org.junit.Assert.assertNotNull(qualification30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(workerSet33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi!:0:0" + "'", str34, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet35);
        org.junit.Assert.assertNotNull(worker37);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str3 = company2.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company2.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company2.getUnavailableWorkers();
        java.lang.String str6 = company2.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = company8.getUnavailableWorkers();
        boolean boolean11 = company8.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet12 = company8.getProjects();
        boolean boolean14 = company8.equals((java.lang.Object) (short) -1);
        boolean boolean15 = company2.equals((java.lang.Object) company8);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet16 = company8.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker18 = new edu.colostate.cs415.model.Worker("hi!:0:0:0:0:0:0", qualificationSet16, (double) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Salary must be positive number");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0" + "'", str3, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(projectSet12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(qualificationSet16);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        boolean boolean4 = company1.equals((java.lang.Object) "");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet6 = company1.getQualifications();
        java.lang.String str7 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        edu.colostate.cs415.model.Company company11 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str12 = company11.toString();
        java.lang.String str13 = company11.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet14 = company11.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company11.getProjects();
        java.lang.String str16 = company11.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet17 = company11.getQualifications();
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Worker worker19 = company1.createWorker("hi!", qualificationSet17, 10.0d);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Qualifications cannot be empty or null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(qualificationSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!:0:0:0:0" + "'", str12, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!:0:0:0:0" + "'", str13, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet17);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Qualification qualification5 = company1.createQualification("hi!");
        edu.colostate.cs415.dto.QualificationDTO qualificationDTO6 = qualification5.toDTO();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification10 = company8.createQualification("hi!");
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification10.addWorker(worker11);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification10.getWorkers();
        boolean boolean14 = qualification5.equals((java.lang.Object) workerSet13);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification5.getWorkers();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(qualification5);
        org.junit.Assert.assertNotNull(qualificationDTO6);
        org.junit.Assert.assertNotNull(qualification10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company1.getQualifications();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company10.getUnavailableWorkers();
        boolean boolean13 = company10.equals((java.lang.Object) "");
        java.lang.String str14 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = company10.getEmployedWorkers();
        java.lang.String str16 = company10.getName();
        java.lang.String str17 = company10.getName();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet18 = company10.getQualifications();
        edu.colostate.cs415.model.Worker worker20 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet18, (double) 10.0f);
        edu.colostate.cs415.model.Project project21 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker20, project21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualificationSet7);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(qualificationSet18);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str9 = company8.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet10 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet11 = company8.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet12 = company8.getQualifications();
        edu.colostate.cs415.model.Worker worker14 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet12, (double) '#');
        edu.colostate.cs415.model.Project project15 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.assign(worker14, project15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!:0:0" + "'", str9, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet10);
        org.junit.Assert.assertNotNull(workerSet11);
        org.junit.Assert.assertNotNull(qualificationSet12);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0");
        java.lang.String str2 = company1.toString();
        java.lang.String str3 = company1.toString();
        java.lang.String str4 = company1.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAvailableWorkers();
        java.lang.String str6 = company1.toString();
        edu.colostate.cs415.model.Project project7 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0:0:0" + "'", str2, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!:0:0:0:0" + "'", str3, "hi!:0:0:0:0");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!:0:0" + "'", str4, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!:0:0:0:0" + "'", str6, "hi!:0:0:0:0");
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = qualification3.getWorkers();
        edu.colostate.cs415.model.Company company6 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification8 = company6.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet9 = qualification8.getWorkers();
        boolean boolean10 = qualification3.equals((java.lang.Object) qualification8);
        edu.colostate.cs415.model.Worker worker11 = null;
        qualification3.addWorker(worker11);
        java.lang.String str13 = qualification3.toString();
        java.lang.String str14 = qualification3.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet15 = qualification3.getWorkers();
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualification8);
        org.junit.Assert.assertNotNull(workerSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(workerSet15);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.lang.String str7 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getUnavailableWorkers();
        edu.colostate.cs415.model.Company company10 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification12 = company10.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = qualification12.getWorkers();
        edu.colostate.cs415.model.Company company15 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification17 = company15.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet18 = qualification17.getWorkers();
        boolean boolean19 = qualification12.equals((java.lang.Object) qualification17);
        edu.colostate.cs415.model.Worker worker20 = null;
        qualification17.addWorker(worker20);
        edu.colostate.cs415.model.Company company23 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification25 = company23.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet26 = qualification25.getWorkers();
        boolean boolean27 = qualification17.equals((java.lang.Object) workerSet26);
        edu.colostate.cs415.model.Company company29 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet30 = company29.getEmployedWorkers();
        boolean boolean31 = qualification17.equals((java.lang.Object) company29);
        edu.colostate.cs415.model.Qualification qualification33 = company29.createQualification("hi!");
        boolean boolean34 = company2.equals((java.lang.Object) qualification33);
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet35 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet36 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet37 = company2.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize38 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project39 = new edu.colostate.cs415.model.Project("hi!", qualificationSet37, projectSize38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project size cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualification12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualification17);
        org.junit.Assert.assertNotNull(workerSet18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(qualification25);
        org.junit.Assert.assertNotNull(workerSet26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(workerSet30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(qualification33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(workerSet35);
        org.junit.Assert.assertNotNull(workerSet36);
        org.junit.Assert.assertNotNull(qualificationSet37);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification4 = company2.createQualification("hi!");
        boolean boolean6 = company2.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet7 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker9 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet7, 0.0d);
        edu.colostate.cs415.model.Project project10 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker9.addProject(project10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(qualificationSet7);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getAvailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getAssignedWorkers();
        edu.colostate.cs415.model.Company company8 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet9 = company8.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company8.getUnassignedWorkers();
        edu.colostate.cs415.model.Company company12 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company12.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet14 = company12.getProjects();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet15 = company12.getProjects();
        java.lang.String str16 = company12.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet17 = company12.getAssignedWorkers();
        boolean boolean18 = company8.equals((java.lang.Object) company12);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet19 = company12.getQualifications();
        edu.colostate.cs415.model.Worker worker21 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet19, (double) (byte) 10);
        edu.colostate.cs415.model.Project project22 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker21, project22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
        org.junit.Assert.assertNotNull(projectSet9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(projectSet14);
        org.junit.Assert.assertNotNull(projectSet15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!:0:0" + "'", str16, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(qualificationSet19);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        edu.colostate.cs415.model.Company company2 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company2.getUnavailableWorkers();
        boolean boolean5 = company2.equals((java.lang.Object) "");
        java.lang.String str6 = company2.getName();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet7 = company2.getEmployedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet8 = company2.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet9 = company2.getQualifications();
        edu.colostate.cs415.model.Worker worker11 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet9, (double) 100L);
        edu.colostate.cs415.model.Project project12 = null;
        // The following exception was thrown during execution in test generation
        try {
            worker11.addProject(project12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: project can not be null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet7);
        org.junit.Assert.assertNotNull(workerSet8);
        org.junit.Assert.assertNotNull(qualificationSet9);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet2 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet4 = company1.getProjects();
        java.lang.String str5 = company1.getName();
        edu.colostate.cs415.model.Qualification qualification7 = company1.createQualification("hi!:0:0");
        java.util.Set<edu.colostate.cs415.model.Project> projectSet8 = company1.getProjects();
        org.junit.Assert.assertNotNull(projectSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(projectSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0:0:0" + "'", str5, "hi!:0:0:0:0");
        org.junit.Assert.assertNotNull(qualification7);
        org.junit.Assert.assertNotNull(projectSet8);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.lang.String str2 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet3 = company1.getProjects();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet5 = company1.getUnavailableWorkers();
        edu.colostate.cs415.model.Project project6 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.start(project6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "hi!:0:0" + "'", str2, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(workerSet5);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet2 = company1.getAssignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet3 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet5 = company1.getQualifications();
        java.lang.String str6 = company1.getName();
        edu.colostate.cs415.model.Company company9 = new edu.colostate.cs415.model.Company("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company9.getAssignedWorkers();
        boolean boolean12 = company9.equals((java.lang.Object) 0);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet13 = company9.getQualifications();
        edu.colostate.cs415.model.Worker worker15 = new edu.colostate.cs415.model.Worker("hi!", qualificationSet13, (double) 12);
        edu.colostate.cs415.model.Project project16 = null;
        // The following exception was thrown during execution in test generation
        try {
            company1.unassign(worker15, project16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(workerSet2);
        org.junit.Assert.assertNotNull(workerSet3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertNotNull(qualificationSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(qualificationSet13);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        edu.colostate.cs415.model.Company company1 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification3 = company1.createQualification("hi!");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet4 = company1.getUnassignedWorkers();
        java.lang.String str5 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Project> projectSet6 = company1.getProjects();
        java.lang.String str7 = company1.toString();
        edu.colostate.cs415.model.Qualification qualification9 = company1.createQualification("hi!:0:0:0:0");
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet10 = company1.getEmployedWorkers();
        java.lang.String str11 = company1.toString();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet12 = company1.getUnavailableWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet13 = company1.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet14 = company1.getQualifications();
        edu.colostate.cs415.model.Company company17 = new edu.colostate.cs415.model.Company("hi!");
        edu.colostate.cs415.model.Qualification qualification19 = company17.createQualification("hi!");
        boolean boolean21 = company17.equals((java.lang.Object) 10L);
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet22 = company17.getQualifications();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet23 = company17.getUnassignedWorkers();
        java.util.Set<edu.colostate.cs415.model.Worker> workerSet24 = company17.getUnavailableWorkers();
        java.lang.String str25 = company17.toString();
        java.util.Set<edu.colostate.cs415.model.Qualification> qualificationSet26 = company17.getQualifications();
        edu.colostate.cs415.model.ProjectSize projectSize27 = null;
        // The following exception was thrown during execution in test generation
        try {
            edu.colostate.cs415.model.Project project28 = company1.createProject("", qualificationSet26, projectSize27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Project name cannot be null or empty");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(qualification3);
        org.junit.Assert.assertNotNull(workerSet4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi!:0:0" + "'", str5, "hi!:0:0");
        org.junit.Assert.assertNotNull(projectSet6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!:0:0" + "'", str7, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualification9);
        org.junit.Assert.assertNotNull(workerSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!:0:0" + "'", str11, "hi!:0:0");
        org.junit.Assert.assertNotNull(workerSet12);
        org.junit.Assert.assertNotNull(workerSet13);
        org.junit.Assert.assertNotNull(qualificationSet14);
        org.junit.Assert.assertNotNull(qualification19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(qualificationSet22);
        org.junit.Assert.assertNotNull(workerSet23);
        org.junit.Assert.assertNotNull(workerSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!:0:0" + "'", str25, "hi!:0:0");
        org.junit.Assert.assertNotNull(qualificationSet26);
    }
}

